;;;; Generated on 10/20/2021 at 09:40:03 (UTC+10).

(COMMON-LISP:DECLAIM (COMMON-LISP:OPTIMIZE (COMMON-LISP:SPEED 0)
                      COMMON-LISP:SAFETY COMMON-LISP:DEBUG
                      COMMON-LISP:COMPILATION-SPEED))

(COMMON-LISP:IN-PACKAGE #:MAGICL.LAPACK-CFFI)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZLADIV %ZLADIV %%DLARRJ
                      %DLARRJ %%CHEEVR %CHEEVR %%ZGBBRD %ZGBBRD
                      %%CSPTRF %CSPTRF %%ZGGLSE %ZGGLSE %%DPPSV %DPPSV
                      %%ZLANHS %ZLANHS %%CSYCON_3 %CSYCON_3 %%DTGSY2
                      %DTGSY2 %%DTPQRT2 %DTPQRT2 %%DTPMLQT %DTPMLQT
                      %%DLA_GERCOND %DLA_GERCOND %%CTGEXC %CTGEXC
                      %%SGGEVX %SGGEVX %%DLARNV %DLARNV %%CLAR2V
                      %CLAR2V %%ZLARFGP %ZLARFGP %%ZHEEV_2STAGE
                      %ZHEEV_2STAGE %%DGEES %DGEES
                      %%DLA_PORFSX_EXTENDED %DLA_PORFSX_EXTENDED
                      %%DLAEV2 %DLAEV2 %%ZLANHP %ZLANHP
                      %%CHETRS_AA_2STAGE %CHETRS_AA_2STAGE %%CHSEQR
                      %CHSEQR %%CPFTRI %CPFTRI %%SGTRFS %SGTRFS
                      %%CGEQRFP %CGEQRFP %%ILASLC %ILASLC %%LSAMEN
                      %LSAMEN %%CLAPMR %CLAPMR %%DSPSVX %DSPSVX
                      %%ZGBRFS %ZGBRFS %%ZHBEVX %ZHBEVX %%DGTSV %DGTSV
                      %%CLAQPS %CLAQPS %%SORGTR %SORGTR %%SLALSD
                      %SLALSD %%STGSJA %STGSJA %%CSYSV_AA_2STAGE
                      %CSYSV_AA_2STAGE %%DSYSV_AA_2STAGE
                      %DSYSV_AA_2STAGE %%ZPPTRF %ZPPTRF %%CGETRS
                      %CGETRS %%ZHETRI2 %ZHETRI2 %%CLACRM %CLACRM
                      %%DLAORHR_COL_GETRFNP %DLAORHR_COL_GETRFNP
                      %%CLA_GBRFSX_EXTENDED %CLA_GBRFSX_EXTENDED
                      %%ZTPTTR %ZTPTTR %%CPBTF2 %CPBTF2 %%CLAQSY
                      %CLAQSY %%ZTRTTP %ZTRTTP %%ZLANTR %ZLANTR
                      %%SHSEIN %SHSEIN %%SPTSVX %SPTSVX %%DSYTRI
                      %DSYTRI %%CLARZ %CLARZ %%ZUNGQL %ZUNGQL %%SSYTRI
                      %SSYTRI %%ZHETRD_2STAGE %ZHETRD_2STAGE %%STRTI2
                      %STRTI2 %%SSYEVX %SSYEVX %%SGBRFS %SGBRFS
                      %%CUNGLQ %CUNGLQ %%DLACON %DLACON %%ZGEQRF
                      %ZGEQRF %%STBTRS %STBTRS %%ZHEEVD_2STAGE
                      %ZHEEVD_2STAGE %%CTRTRI %CTRTRI %%DGEEQUB
                      %DGEEQUB %%CUNMTR %CUNMTR %%SPTCON %SPTCON
                      %%ZSTEGR %ZSTEGR %%ZGGEV %ZGGEV %%CGGQRF %CGGQRF
                      %%SSTEVD %SSTEVD %%CTPMQRT %CTPMQRT %%DPTCON
                      %DPTCON %%CSYTF2 %CSYTF2 %%CUNGBR %CUNGBR
                      %%SLACPY %SLACPY %%DPOEQUB %DPOEQUB %%CLASYF_AA
                      %CLASYF_AA %%ZUNGLQ %ZUNGLQ %%SORGTSQR %SORGTSQR
                      %%ZUNMQR %ZUNMQR %%ZLACRT %ZLACRT %%CHEEVD
                      %CHEEVD %%DTFTTR %DTFTTR %%ZHETF2_ROOK
                      %ZHETF2_ROOK %%SLAQR1 %SLAQR1 %%SBDSDC %SBDSDC
                      %%DGETSLS %DGETSLS %%DLASYF_AA %DLASYF_AA
                      %%DSGESV %DSGESV %%ZGESVD %ZGESVD %%SLARRB
                      %SLARRB %%CGEQL2 %CGEQL2 %%ZPORFS %ZPORFS
                      %%ZGETF2 %ZGETF2 %%ZGERQ2 %ZGERQ2 %%CLA_GERCOND_C
                      %CLA_GERCOND_C %%DLARTG %DLARTG %%DSB2ST_KERNELS
                      %DSB2ST_KERNELS %%ZLAQSB %ZLAQSB %%CLAED8 %CLAED8
                      %%CSYSV %CSYSV %%CPSTRF %CPSTRF %%ZGEES %ZGEES
                      %%ZGEHD2 %ZGEHD2 %%CHETRI2X %CHETRI2X %%DPOEQU
                      %DPOEQU %%ZLAPMT %ZLAPMT %%DSPGVD %DSPGVD
                      %%DLAPLL %DLAPLL %%DPOTRF2 %DPOTRF2 %%DLAS2
                      %DLAS2 %%ZGBSV %ZGBSV %%SLARTV %SLARTV %%CGGES
                      %CGGES %%SPSTF2 %SPSTF2 %%ZUNM2R %ZUNM2R %%ZPBCON
                      %ZPBCON %%DPBTF2 %DPBTF2 %%DLARFX %DLARFX
                      %%ZSYEQUB %ZSYEQUB %%DLARRC %DLARRC %%ZSPTRF
                      %ZSPTRF %%CPOEQUB %CPOEQUB %%DSYEVD %DSYEVD
                      %%SGBSVXX %SGBSVXX %%DGELSD %DGELSD %%CUNM2L
                      %CUNM2L %%SLAR1V %SLAR1V %%CLAED7 %CLAED7
                      %%CSRSCL %CSRSCL %%DPOTF2 %DPOTF2 %%DSPEVX
                      %DSPEVX %%DLASDT %DLASDT %%DSPRFS %DSPRFS
                      %%CTPQRT %CTPQRT %%SSTEMR %SSTEMR %%DLAED4
                      %DLAED4 %%SGETC2 %SGETC2 %%CLARFG %CLARFG
                      %%DPORFS %DPORFS %%DGEEQU %DGEEQU %%CTRRFS
                      %CTRRFS %%STPQRT2 %STPQRT2 %%CGGHD3 %CGGHD3
                      %%SORG2L %SORG2L %%SLANSF %SLANSF %%SORGLQ
                      %SORGLQ %%DORCSD %DORCSD %%ZHBTRD %ZHBTRD
                      %%DTPTRI %DTPTRI %%CGESDD %CGESDD %%SLAQPS
                      %SLAQPS %%CGEHRD %CGEHRD %%CHPSVX %CHPSVX
                      %%SORGQL %SORGQL %%SLAED6 %SLAED6 %%DGEMLQ
                      %DGEMLQ %%SSYSV_RK %SSYSV_RK %%CLATRS %CLATRS
                      %%CHETF2_RK %CHETF2_RK %%CPTTRS %CPTTRS %%IPARMQ
                      %IPARMQ %%SLARFT %SLARFT %%SLAG2D %SLAG2D
                      %%CTPRFB %CTPRFB %%ZHBEV %ZHBEV %%CGERQ2 %CGERQ2
                      %%SLASET %SLASET %%ZHETRF_ROOK %ZHETRF_ROOK
                      %%ZPTCON %ZPTCON %%DGGHRD %DGGHRD %%CSTEIN
                      %CSTEIN %%DGELQT3 %DGELQT3 %%ZGEBAK %ZGEBAK
                      %%DPBTRS %DPBTRS %%CPBRFS %CPBRFS %%SGEESX
                      %SGEESX %%CHETRI2 %CHETRI2 %%SLA_WWADDW
                      %SLA_WWADDW %%ZUNMR2 %ZUNMR2 %%CLASSQ %CLASSQ
                      %%CLAMTSQR %CLAMTSQR %%SORMQR %SORMQR %%CLAHEF_RK
                      %CLAHEF_RK %%CLAQSP %CLAQSP %%SLABAD %SLABAD
                      %%DLAEIN %DLAEIN %%SPOEQU %SPOEQU %%ZSYCON
                      %ZSYCON %%ZGESVDX %ZGESVDX %%DORGTSQR %DORGTSQR
                      %%DGGQRF %DGGQRF %%CPBSV %CPBSV %%SLA_GEAMV
                      %SLA_GEAMV %%ZHETRI2X %ZHETRI2X %%ZGBCON %ZGBCON
                      %%SLASD1 %SLASD1 %%CHETD2 %CHETD2 %%CHESWAPR
                      %CHESWAPR %%DPBRFS %DPBRFS %%CUNM22 %CUNM22
                      %%CGETC2 %CGETC2 %%ZLASET %ZLASET %%DLA_GERPVGRW
                      %DLA_GERPVGRW %%ZGETC2 %ZGETC2 %%ZGEMQRT %ZGEMQRT
                      %%CUNBDB2 %CUNBDB2 %%SGELQ %SGELQ %%ZTRTRS
                      %ZTRTRS %%SSYTRF_RK %SSYTRF_RK %%DLARUV %DLARUV
                      %%ZHBGST %ZHBGST %%SBDSVDX %SBDSVDX %%ZUNGR2
                      %ZUNGR2 %%ZSYSV_AA_2STAGE %ZSYSV_AA_2STAGE
                      %%DGETC2 %DGETC2 %%ZPPTRS %ZPPTRS %%CPPSV %CPPSV
                      %%ZSYTF2 %ZSYTF2 %%SSYTRF_ROOK %SSYTRF_ROOK
                      %%CSYTRS_3 %CSYTRS_3 %%CLA_SYRPVGRW %CLA_SYRPVGRW
                      %%CSTEQR %CSTEQR %%ZHGEQZ %ZHGEQZ %%ZHPEVD
                      %ZHPEVD %%CHPTRS %CHPTRS %%DLASQ2 %DLASQ2
                      %%SLAQP2 %SLAQP2 %%DORHR_COL %DORHR_COL %%DSYGV
                      %DSYGV %%SLARFGP %SLARFGP %%SLANGT %SLANGT
                      %%CGGHRD %CGGHRD %%CUNML2 %CUNML2
                      %%CHESV_AA_2STAGE %CHESV_AA_2STAGE %%SLAQR2
                      %SLAQR2 %%SPOTRI %SPOTRI %%CGEQP3 %CGEQP3
                      %%SGEEQU %SGEEQU %%DLAQR4 %DLAQR4
                      %%SSYSV_AA_2STAGE %SSYSV_AA_2STAGE %%DGBBRD
                      %DGBBRD %%SGBTF2 %SGBTF2))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZLADIV "zladiv_")
  ((X :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)) :RETURNING
  (:FOREIGN-ADDRESS (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
  :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZLADIV (X Y)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZLADIV)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) Y))
  (CFFI:WITH-FOREIGN-OBJECTS ((X-REF10236
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (Y-REF10237
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT))
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              X-REF10236
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART X)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART X)))
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              Y-REF10237
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART Y)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART Y)))
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%ZLADIV X-REF10236 Y-REF10237))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DLARRJ "dlarrj_")
  ((N :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS) (E2 :FOREIGN-ADDRESS)
   (IFIRST :FOREIGN-ADDRESS) (ILAST :FOREIGN-ADDRESS)
   (RTOL :FOREIGN-ADDRESS) (OFFSET :FOREIGN-ADDRESS)
   (W :FOREIGN-ADDRESS) (WERR :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (IWORK :FOREIGN-ADDRESS) (PIVMIN :FOREIGN-ADDRESS)
   (SPDIAM :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DLARRJ
    (N D E2 IFIRST ILAST RTOL OFFSET W WERR WORK IWORK PIVMIN SPDIAM
     INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DLARRJ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) E2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IFIRST)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ILAST)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT RTOL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) OFFSET)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) W)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT PIVMIN)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT SPDIAM)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10238 ':INT32)
                              (IFIRST-REF10241 ':INT32)
                              (ILAST-REF10242 ':INT32)
                              (RTOL-REF10243 ':DOUBLE)
                              (OFFSET-REF10244 ':INT32)
                              (PIVMIN-REF10249 ':DOUBLE)
                              (SPDIAM-REF10250 ':DOUBLE)
                              (INFO-REF10251 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10238 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF IFIRST-REF10241 :INT32) IFIRST)
    (COMMON-LISP:SETF (CFFI:MEM-REF ILAST-REF10242 :INT32) ILAST)
    (COMMON-LISP:SETF (CFFI:MEM-REF RTOL-REF10243 :DOUBLE) RTOL)
    (COMMON-LISP:SETF (CFFI:MEM-REF OFFSET-REF10244 :INT32) OFFSET)
    (COMMON-LISP:SETF (CFFI:MEM-REF PIVMIN-REF10249 :DOUBLE) PIVMIN)
    (COMMON-LISP:SETF (CFFI:MEM-REF SPDIAM-REF10250 :DOUBLE) SPDIAM)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10251 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((D-REF10239 D)
                                            (E2-REF10240 E2)
                                            (W-REF10245 W)
                                            (WERR-REF10246 WERR)
                                            (WORK-REF10247 WORK)
                                            (IWORK-REF10248 IWORK))
      (%%DLARRJ N-REF10238 D-REF10239 E2-REF10240 IFIRST-REF10241
       ILAST-REF10242 RTOL-REF10243 OFFSET-REF10244 W-REF10245
       WERR-REF10246 WORK-REF10247 IWORK-REF10248 PIVMIN-REF10249
       SPDIAM-REF10250 INFO-REF10251))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CHEEVR "cheevr_")
  ((JOBZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (RANGE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (VL :FOREIGN-ADDRESS)
   (VU :FOREIGN-ADDRESS) (IL :FOREIGN-ADDRESS) (IU :FOREIGN-ADDRESS)
   (ABSTOL :FOREIGN-ADDRESS) (M :FOREIGN-ADDRESS) (W :FOREIGN-ADDRESS)
   (Z :FOREIGN-ADDRESS) (LDZ :FOREIGN-ADDRESS)
   (ISUPPZ :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (RWORK :FOREIGN-ADDRESS)
   (LRWORK :FOREIGN-ADDRESS) (IWORK :FOREIGN-ADDRESS)
   (LIWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CHEEVR
    (JOBZ RANGE UPLO N A LDA VL VU IL IU ABSTOL M W Z LDZ ISUPPZ WORK
     LWORK RWORK LRWORK IWORK LIWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHEEVR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBZ)
   (COMMON-LISP:TYPE COMMON-LISP:STRING RANGE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT VL)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT VU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IU)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ABSTOL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) W)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDZ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    ISUPPZ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LRWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LIWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10255 ':INT32)
                              (LDA-REF10257 ':INT32)
                              (VL-REF10258 ':FLOAT)
                              (VU-REF10259 ':FLOAT)
                              (IL-REF10260 ':INT32)
                              (IU-REF10261 ':INT32)
                              (ABSTOL-REF10262 ':FLOAT)
                              (M-REF10263 ':INT32)
                              (LDZ-REF10266 ':INT32)
                              (LWORK-REF10269 ':INT32)
                              (LRWORK-REF10271 ':INT32)
                              (LIWORK-REF10273 ':INT32)
                              (INFO-REF10274 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10255 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10257 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF VL-REF10258 :FLOAT) VL)
    (COMMON-LISP:SETF (CFFI:MEM-REF VU-REF10259 :FLOAT) VU)
    (COMMON-LISP:SETF (CFFI:MEM-REF IL-REF10260 :INT32) IL)
    (COMMON-LISP:SETF (CFFI:MEM-REF IU-REF10261 :INT32) IU)
    (COMMON-LISP:SETF (CFFI:MEM-REF ABSTOL-REF10262 :FLOAT) ABSTOL)
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF10263 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDZ-REF10266 :INT32) LDZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF10269 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF LRWORK-REF10271 :INT32) LRWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF LIWORK-REF10273 :INT32) LIWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10274 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10256 A)
                                            (W-REF10264 W)
                                            (Z-REF10265 Z)
                                            (ISUPPZ-REF10267 ISUPPZ)
                                            (WORK-REF10268 WORK)
                                            (RWORK-REF10270 RWORK)
                                            (IWORK-REF10272 IWORK))
      (%%CHEEVR JOBZ RANGE UPLO N-REF10255 A-REF10256 LDA-REF10257
       VL-REF10258 VU-REF10259 IL-REF10260 IU-REF10261 ABSTOL-REF10262
       M-REF10263 W-REF10264 Z-REF10265 LDZ-REF10266 ISUPPZ-REF10267
       WORK-REF10268 LWORK-REF10269 RWORK-REF10270 LRWORK-REF10271
       IWORK-REF10272 LIWORK-REF10273 INFO-REF10274))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZGBBRD "zgbbrd_")
  ((VECT (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (NCC :FOREIGN-ADDRESS) (KL :FOREIGN-ADDRESS)
   (KU :FOREIGN-ADDRESS) (AB :FOREIGN-ADDRESS) (LDAB :FOREIGN-ADDRESS)
   (D :FOREIGN-ADDRESS) (E :FOREIGN-ADDRESS) (Q :FOREIGN-ADDRESS)
   (LDQ :FOREIGN-ADDRESS) (PT :FOREIGN-ADDRESS) (LDPT :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (RWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZGBBRD
    (VECT M N NCC KL KU AB LDAB D E Q LDQ PT LDPT C LDC WORK RWORK
     INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGBBRD)
   (COMMON-LISP:TYPE COMMON-LISP:STRING VECT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NCC)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) E)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    Q)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDQ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    PT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDPT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF10276 ':INT32) (N-REF10277 ':INT32)
                              (NCC-REF10278 ':INT32)
                              (KL-REF10279 ':INT32)
                              (KU-REF10280 ':INT32)
                              (LDAB-REF10282 ':INT32)
                              (LDQ-REF10286 ':INT32)
                              (LDPT-REF10288 ':INT32)
                              (LDC-REF10290 ':INT32)
                              (INFO-REF10293 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF10276 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10277 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NCC-REF10278 :INT32) NCC)
    (COMMON-LISP:SETF (CFFI:MEM-REF KL-REF10279 :INT32) KL)
    (COMMON-LISP:SETF (CFFI:MEM-REF KU-REF10280 :INT32) KU)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAB-REF10282 :INT32) LDAB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDQ-REF10286 :INT32) LDQ)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDPT-REF10288 :INT32) LDPT)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF10290 :INT32) LDC)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10293 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AB-REF10281 AB)
                                            (D-REF10283 D)
                                            (E-REF10284 E)
                                            (Q-REF10285 Q)
                                            (PT-REF10287 PT)
                                            (C-REF10289 C)
                                            (WORK-REF10291 WORK)
                                            (RWORK-REF10292 RWORK))
      (%%ZGBBRD VECT M-REF10276 N-REF10277 NCC-REF10278 KL-REF10279
       KU-REF10280 AB-REF10281 LDAB-REF10282 D-REF10283 E-REF10284
       Q-REF10285 LDQ-REF10286 PT-REF10287 LDPT-REF10288 C-REF10289
       LDC-REF10290 WORK-REF10291 RWORK-REF10292 INFO-REF10293))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CSPTRF "csptrf_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (AP :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CSPTRF (UPLO N AP IPIV INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSPTRF)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10295 ':INT32)
                              (INFO-REF10298 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10295 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10298 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF10296 AP)
                                            (IPIV-REF10297 IPIV))
      (%%CSPTRF UPLO N-REF10295 AP-REF10296 IPIV-REF10297
       INFO-REF10298))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZGGLSE "zgglse_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (P :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZGGLSE (M N P A LDA B LDB C D X WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGGLSE)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) P)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF10299 ':INT32) (N-REF10300 ':INT32)
                              (P-REF10301 ':INT32)
                              (LDA-REF10303 ':INT32)
                              (LDB-REF10305 ':INT32)
                              (LWORK-REF10310 ':INT32)
                              (INFO-REF10311 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF10299 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10300 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF P-REF10301 :INT32) P)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10303 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF10305 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF10310 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10311 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10302 A)
                                            (B-REF10304 B)
                                            (C-REF10306 C)
                                            (D-REF10307 D)
                                            (X-REF10308 X)
                                            (WORK-REF10309 WORK))
      (%%ZGGLSE M-REF10299 N-REF10300 P-REF10301 A-REF10302
       LDA-REF10303 B-REF10304 LDB-REF10305 C-REF10306 D-REF10307
       X-REF10308 WORK-REF10309 LWORK-REF10310 INFO-REF10311))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DPPSV "dppsv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (AP :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DPPSV (UPLO N NRHS AP B LDB INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DPPSV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10313 ':INT32)
                              (NRHS-REF10314 ':INT32)
                              (LDB-REF10317 ':INT32)
                              (INFO-REF10318 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10313 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF10314 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF10317 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10318 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF10315 AP)
                                            (B-REF10316 B))
      (%%DPPSV UPLO N-REF10313 NRHS-REF10314 AP-REF10315 B-REF10316
       LDB-REF10317 INFO-REF10318))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZLANHS "zlanhs_")
  ((NORM (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS))
  :RETURNING (:DOUBLE COMMON-LISP:DOUBLE-FLOAT) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZLANHS (NORM N A LDA WORK)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZLANHS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING NORM)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10320 ':INT32)
                              (LDA-REF10322 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10320 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10322 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10321 A)
                                            (WORK-REF10323 WORK))
      (%%ZLANHS NORM N-REF10320 A-REF10321 LDA-REF10322
       WORK-REF10323))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CSYCON_3 "csycon_3_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (E :FOREIGN-ADDRESS)
   (IPIV :FOREIGN-ADDRESS) (ANORM :FOREIGN-ADDRESS)
   (RCOND :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CSYCON_3
    (UPLO N A LDA E IPIV ANORM RCOND WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSYCON_3)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    E)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ANORM)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT RCOND)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10325 ':INT32)
                              (LDA-REF10327 ':INT32)
                              (ANORM-REF10330 ':FLOAT)
                              (RCOND-REF10331 ':FLOAT)
                              (INFO-REF10333 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10325 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10327 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF ANORM-REF10330 :FLOAT) ANORM)
    (COMMON-LISP:SETF (CFFI:MEM-REF RCOND-REF10331 :FLOAT) RCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10333 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10326 A)
                                            (E-REF10328 E)
                                            (IPIV-REF10329 IPIV)
                                            (WORK-REF10332 WORK))
      (%%CSYCON_3 UPLO N-REF10325 A-REF10326 LDA-REF10327 E-REF10328
       IPIV-REF10329 ANORM-REF10330 RCOND-REF10331 WORK-REF10332
       INFO-REF10333))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DTGSY2 "dtgsy2_")
  ((TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (IJOB :FOREIGN-ADDRESS) (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS)
   (D :FOREIGN-ADDRESS) (LDD :FOREIGN-ADDRESS) (E :FOREIGN-ADDRESS)
   (LDE :FOREIGN-ADDRESS) (F :FOREIGN-ADDRESS) (LDF :FOREIGN-ADDRESS)
   (SCALE :FOREIGN-ADDRESS) (RDSUM :FOREIGN-ADDRESS)
   (RDSCAL :FOREIGN-ADDRESS) (IWORK :FOREIGN-ADDRESS)
   (PQ :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DTGSY2
    (TRANS IJOB M N A LDA B LDB C LDC D LDD E LDE F LDF SCALE RDSUM
     RDSCAL IWORK PQ INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTGSY2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IJOB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) D)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDD)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) E)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDE)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) F)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDF)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT SCALE)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT RDSUM)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT RDSCAL)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) PQ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((IJOB-REF10335 ':INT32)
                              (M-REF10336 ':INT32) (N-REF10337 ':INT32)
                              (LDA-REF10339 ':INT32)
                              (LDB-REF10341 ':INT32)
                              (LDC-REF10343 ':INT32)
                              (LDD-REF10345 ':INT32)
                              (LDE-REF10347 ':INT32)
                              (LDF-REF10349 ':INT32)
                              (SCALE-REF10350 ':DOUBLE)
                              (RDSUM-REF10351 ':DOUBLE)
                              (RDSCAL-REF10352 ':DOUBLE)
                              (PQ-REF10354 ':INT32)
                              (INFO-REF10355 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF IJOB-REF10335 :INT32) IJOB)
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF10336 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10337 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10339 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF10341 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF10343 :INT32) LDC)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDD-REF10345 :INT32) LDD)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDE-REF10347 :INT32) LDE)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDF-REF10349 :INT32) LDF)
    (COMMON-LISP:SETF (CFFI:MEM-REF SCALE-REF10350 :DOUBLE) SCALE)
    (COMMON-LISP:SETF (CFFI:MEM-REF RDSUM-REF10351 :DOUBLE) RDSUM)
    (COMMON-LISP:SETF (CFFI:MEM-REF RDSCAL-REF10352 :DOUBLE) RDSCAL)
    (COMMON-LISP:SETF (CFFI:MEM-REF PQ-REF10354 :INT32) PQ)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10355 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10338 A)
                                            (B-REF10340 B)
                                            (C-REF10342 C)
                                            (D-REF10344 D)
                                            (E-REF10346 E)
                                            (F-REF10348 F)
                                            (IWORK-REF10353 IWORK))
      (%%DTGSY2 TRANS IJOB-REF10335 M-REF10336 N-REF10337 A-REF10338
       LDA-REF10339 B-REF10340 LDB-REF10341 C-REF10342 LDC-REF10343
       D-REF10344 LDD-REF10345 E-REF10346 LDE-REF10347 F-REF10348
       LDF-REF10349 SCALE-REF10350 RDSUM-REF10351 RDSCAL-REF10352
       IWORK-REF10353 PQ-REF10354 INFO-REF10355))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DTPQRT2 "dtpqrt2_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (L :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (T :FOREIGN-ADDRESS) (LDT :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DTPQRT2 (M N L A LDA B LDB T LDT INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTPQRT2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) L)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) T)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF10356 ':INT32) (N-REF10357 ':INT32)
                              (L-REF10358 ':INT32)
                              (LDA-REF10360 ':INT32)
                              (LDB-REF10362 ':INT32)
                              (LDT-REF10364 ':INT32)
                              (INFO-REF10365 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF10356 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10357 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF L-REF10358 :INT32) L)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10360 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF10362 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDT-REF10364 :INT32) LDT)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10365 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10359 A)
                                            (B-REF10361 B)
                                            (T-REF10363 T))
      (%%DTPQRT2 M-REF10356 N-REF10357 L-REF10358 A-REF10359
       LDA-REF10360 B-REF10361 LDB-REF10362 T-REF10363 LDT-REF10364
       INFO-REF10365))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DTPMLQT "dtpmlqt_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (L :FOREIGN-ADDRESS) (MB :FOREIGN-ADDRESS) (V :FOREIGN-ADDRESS)
   (LDV :FOREIGN-ADDRESS) (T :FOREIGN-ADDRESS) (LDT :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DTPMLQT
    (SIDE TRANS M N K L MB V LDV T LDT A LDA B LDB WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTPMLQT)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) L)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) MB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) V)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) T)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF10368 ':INT32) (N-REF10369 ':INT32)
                              (K-REF10370 ':INT32) (L-REF10371 ':INT32)
                              (MB-REF10372 ':INT32)
                              (LDV-REF10374 ':INT32)
                              (LDT-REF10376 ':INT32)
                              (LDA-REF10378 ':INT32)
                              (LDB-REF10380 ':INT32)
                              (INFO-REF10382 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF10368 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10369 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF10370 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF L-REF10371 :INT32) L)
    (COMMON-LISP:SETF (CFFI:MEM-REF MB-REF10372 :INT32) MB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDV-REF10374 :INT32) LDV)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDT-REF10376 :INT32) LDT)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10378 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF10380 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10382 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((V-REF10373 V)
                                            (T-REF10375 T)
                                            (A-REF10377 A)
                                            (B-REF10379 B)
                                            (WORK-REF10381 WORK))
      (%%DTPMLQT SIDE TRANS M-REF10368 N-REF10369 K-REF10370 L-REF10371
       MB-REF10372 V-REF10373 LDV-REF10374 T-REF10375 LDT-REF10376
       A-REF10377 LDA-REF10378 B-REF10379 LDB-REF10380 WORK-REF10381
       INFO-REF10382))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DLA_GERCOND "dla_gercond_")
  ((TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (AF :FOREIGN-ADDRESS) (LDAF :FOREIGN-ADDRESS)
   (IPIV :FOREIGN-ADDRESS) (CMODE :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (IWORK :FOREIGN-ADDRESS))
  :RETURNING (:DOUBLE COMMON-LISP:DOUBLE-FLOAT) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DLA_GERCOND
    (TRANS N A LDA AF LDAF IPIV CMODE C INFO WORK IWORK)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DLA_GERCOND)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AF)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAF)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) CMODE)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10384 ':INT32)
                              (LDA-REF10386 ':INT32)
                              (LDAF-REF10388 ':INT32)
                              (CMODE-REF10390 ':INT32)
                              (INFO-REF10392 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10384 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10386 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAF-REF10388 :INT32) LDAF)
    (COMMON-LISP:SETF (CFFI:MEM-REF CMODE-REF10390 :INT32) CMODE)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10392 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10385 A)
                                            (AF-REF10387 AF)
                                            (IPIV-REF10389 IPIV)
                                            (C-REF10391 C)
                                            (WORK-REF10393 WORK)
                                            (IWORK-REF10394 IWORK))
      (%%DLA_GERCOND TRANS N-REF10384 A-REF10385 LDA-REF10386
       AF-REF10387 LDAF-REF10388 IPIV-REF10389 CMODE-REF10390
       C-REF10391 INFO-REF10392 WORK-REF10393 IWORK-REF10394))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CTGEXC "ctgexc_")
  ((WANTQ :FOREIGN-ADDRESS) (WANTZ :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS) (Q :FOREIGN-ADDRESS)
   (LDQ :FOREIGN-ADDRESS) (Z :FOREIGN-ADDRESS) (LDZ :FOREIGN-ADDRESS)
   (IFST :FOREIGN-ADDRESS) (ILST :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CTGEXC
    (WANTQ WANTZ N A LDA B LDB Q LDQ Z LDZ IFST ILST INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTGEXC)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) WANTQ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) WANTZ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Q)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDQ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDZ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IFST)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ILST)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((WANTQ-REF10395 ':INT32)
                              (WANTZ-REF10396 ':INT32)
                              (N-REF10397 ':INT32)
                              (LDA-REF10399 ':INT32)
                              (LDB-REF10401 ':INT32)
                              (LDQ-REF10403 ':INT32)
                              (LDZ-REF10405 ':INT32)
                              (IFST-REF10406 ':INT32)
                              (ILST-REF10407 ':INT32)
                              (INFO-REF10408 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF WANTQ-REF10395 :INT32) WANTQ)
    (COMMON-LISP:SETF (CFFI:MEM-REF WANTZ-REF10396 :INT32) WANTZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10397 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10399 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF10401 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDQ-REF10403 :INT32) LDQ)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDZ-REF10405 :INT32) LDZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF IFST-REF10406 :INT32) IFST)
    (COMMON-LISP:SETF (CFFI:MEM-REF ILST-REF10407 :INT32) ILST)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10408 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10398 A)
                                            (B-REF10400 B)
                                            (Q-REF10402 Q)
                                            (Z-REF10404 Z))
      (%%CTGEXC WANTQ-REF10395 WANTZ-REF10396 N-REF10397 A-REF10398
       LDA-REF10399 B-REF10400 LDB-REF10401 Q-REF10402 LDQ-REF10403
       Z-REF10404 LDZ-REF10405 IFST-REF10406 ILST-REF10407
       INFO-REF10408))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SGGEVX "sggevx_")
  ((BALANC (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (JOBVL (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (JOBVR (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (SENSE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (ALPHAR :FOREIGN-ADDRESS) (ALPHAI :FOREIGN-ADDRESS)
   (BETA :FOREIGN-ADDRESS) (VL :FOREIGN-ADDRESS)
   (LDVL :FOREIGN-ADDRESS) (VR :FOREIGN-ADDRESS)
   (LDVR :FOREIGN-ADDRESS) (ILO :FOREIGN-ADDRESS)
   (IHI :FOREIGN-ADDRESS) (LSCALE :FOREIGN-ADDRESS)
   (RSCALE :FOREIGN-ADDRESS) (ABNRM :FOREIGN-ADDRESS)
   (BBNRM :FOREIGN-ADDRESS) (RCONDE :FOREIGN-ADDRESS)
   (RCONDV :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (IWORK :FOREIGN-ADDRESS)
   (BWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SGGEVX
    (BALANC JOBVL JOBVR SENSE N A LDA B LDB ALPHAR ALPHAI BETA VL LDVL
     VR LDVR ILO IHI LSCALE RSCALE ABNRM BBNRM RCONDE RCONDV WORK LWORK
     IWORK BWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SGGEVX)
   (COMMON-LISP:TYPE COMMON-LISP:STRING BALANC)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBVL)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBVR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SENSE)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) ALPHAR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) ALPHAI)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) VL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDVL)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) VR)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDVR)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ILO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IHI)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) LSCALE)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) RSCALE)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ABNRM)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BBNRM)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) RCONDE)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) RCONDV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    BWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10413 ':INT32)
                              (LDA-REF10415 ':INT32)
                              (LDB-REF10417 ':INT32)
                              (LDVL-REF10422 ':INT32)
                              (LDVR-REF10424 ':INT32)
                              (ILO-REF10425 ':INT32)
                              (IHI-REF10426 ':INT32)
                              (ABNRM-REF10429 ':FLOAT)
                              (BBNRM-REF10430 ':FLOAT)
                              (LWORK-REF10434 ':INT32)
                              (INFO-REF10437 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10413 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10415 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF10417 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDVL-REF10422 :INT32) LDVL)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDVR-REF10424 :INT32) LDVR)
    (COMMON-LISP:SETF (CFFI:MEM-REF ILO-REF10425 :INT32) ILO)
    (COMMON-LISP:SETF (CFFI:MEM-REF IHI-REF10426 :INT32) IHI)
    (COMMON-LISP:SETF (CFFI:MEM-REF ABNRM-REF10429 :FLOAT) ABNRM)
    (COMMON-LISP:SETF (CFFI:MEM-REF BBNRM-REF10430 :FLOAT) BBNRM)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF10434 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10437 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10414 A)
                                            (B-REF10416 B)
                                            (ALPHAR-REF10418 ALPHAR)
                                            (ALPHAI-REF10419 ALPHAI)
                                            (BETA-REF10420 BETA)
                                            (VL-REF10421 VL)
                                            (VR-REF10423 VR)
                                            (LSCALE-REF10427 LSCALE)
                                            (RSCALE-REF10428 RSCALE)
                                            (RCONDE-REF10431 RCONDE)
                                            (RCONDV-REF10432 RCONDV)
                                            (WORK-REF10433 WORK)
                                            (IWORK-REF10435 IWORK)
                                            (BWORK-REF10436 BWORK))
      (%%SGGEVX BALANC JOBVL JOBVR SENSE N-REF10413 A-REF10414
       LDA-REF10415 B-REF10416 LDB-REF10417 ALPHAR-REF10418
       ALPHAI-REF10419 BETA-REF10420 VL-REF10421 LDVL-REF10422
       VR-REF10423 LDVR-REF10424 ILO-REF10425 IHI-REF10426
       LSCALE-REF10427 RSCALE-REF10428 ABNRM-REF10429 BBNRM-REF10430
       RCONDE-REF10431 RCONDV-REF10432 WORK-REF10433 LWORK-REF10434
       IWORK-REF10435 BWORK-REF10436 INFO-REF10437))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DLARNV "dlarnv_")
  ((IDIST :FOREIGN-ADDRESS) (ISEED :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DLARNV (IDIST ISEED N X)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DLARNV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IDIST)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    ISEED)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X))
  (CFFI:WITH-FOREIGN-OBJECTS ((IDIST-REF10438 ':INT32)
                              (N-REF10440 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF IDIST-REF10438 :INT32) IDIST)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10440 :INT32) N)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((ISEED-REF10439 ISEED)
                                            (X-REF10441 X))
      (%%DLARNV IDIST-REF10438 ISEED-REF10439 N-REF10440 X-REF10441))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CLAR2V "clar2v_")
  ((N :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (Z :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (S :FOREIGN-ADDRESS) (INCC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CLAR2V (N X Y Z INCX C S INCC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CLAR2V)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Y)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) C)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    S)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10442 ':INT32)
                              (INCX-REF10446 ':INT32)
                              (INCC-REF10449 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10442 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF10446 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCC-REF10449 :INT32) INCC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF10443 X)
                                            (Y-REF10444 Y)
                                            (Z-REF10445 Z)
                                            (C-REF10447 C)
                                            (S-REF10448 S))
      (%%CLAR2V N-REF10442 X-REF10443 Y-REF10444 Z-REF10445
       INCX-REF10446 C-REF10447 S-REF10448 INCC-REF10449))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZLARFGP "zlarfgp_")
  ((N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZLARFGP (N ALPHA X INCX TAU)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZLARFGP)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    TAU))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10450 ':INT32)
                              (ALPHA-REF10451
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCX-REF10453 ':INT32)
                              (TAU-REF10454
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10450 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF10451
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF10453 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              TAU-REF10454
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART TAU)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART TAU)))
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF10452 X))
      (%%ZLARFGP N-REF10450 ALPHA-REF10451 X-REF10452 INCX-REF10453
       TAU-REF10454))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHEEV_2STAGE "zheev_2stage_")
  ((JOBZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (W :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (RWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHEEV_2STAGE
    (JOBZ UPLO N A LDA W WORK LWORK RWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHEEV_2STAGE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBZ)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) W)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10457 ':INT32)
                              (LDA-REF10459 ':INT32)
                              (LWORK-REF10462 ':INT32)
                              (INFO-REF10464 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10457 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10459 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF10462 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10464 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10458 A)
                                            (W-REF10460 W)
                                            (WORK-REF10461 WORK)
                                            (RWORK-REF10463 RWORK))
      (%%ZHEEV_2STAGE JOBZ UPLO N-REF10457 A-REF10458 LDA-REF10459
       W-REF10460 WORK-REF10461 LWORK-REF10462 RWORK-REF10463
       INFO-REF10464))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DGEES "dgees_")
  ((JOBVS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (SORT (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (SELECT :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (SDIM :FOREIGN-ADDRESS) (WR :FOREIGN-ADDRESS)
   (WI :FOREIGN-ADDRESS) (VS :FOREIGN-ADDRESS) (LDVS :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (BWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DGEES
    (JOBVS SORT SELECT N A LDA SDIM WR WI VS LDVS WORK LWORK BWORK
     INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGEES)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBVS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SORT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) SELECT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) SDIM)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WI)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) VS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDVS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    BWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((SELECT-REF10467 ':INT32)
                              (N-REF10468 ':INT32)
                              (LDA-REF10470 ':INT32)
                              (SDIM-REF10471 ':INT32)
                              (LDVS-REF10475 ':INT32)
                              (LWORK-REF10477 ':INT32)
                              (INFO-REF10479 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF SELECT-REF10467 :INT32) SELECT)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10468 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10470 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF SDIM-REF10471 :INT32) SDIM)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDVS-REF10475 :INT32) LDVS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF10477 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10479 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10469 A)
                                            (WR-REF10472 WR)
                                            (WI-REF10473 WI)
                                            (VS-REF10474 VS)
                                            (WORK-REF10476 WORK)
                                            (BWORK-REF10478 BWORK))
      (%%DGEES JOBVS SORT SELECT-REF10467 N-REF10468 A-REF10469
       LDA-REF10470 SDIM-REF10471 WR-REF10472 WI-REF10473 VS-REF10474
       LDVS-REF10475 WORK-REF10476 LWORK-REF10477 BWORK-REF10478
       INFO-REF10479))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL
  (%%DLA_PORFSX_EXTENDED "dla_porfsx_extended_")
  ((PREC_TYPE :FOREIGN-ADDRESS)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (AF :FOREIGN-ADDRESS) (LDAF :FOREIGN-ADDRESS)
   (COLEQU :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS) (LDY :FOREIGN-ADDRESS)
   (BERR_OUT :FOREIGN-ADDRESS) (N_NORMS :FOREIGN-ADDRESS)
   (ERR_BNDS_NORM :FOREIGN-ADDRESS) (ERR_BNDS_COMP :FOREIGN-ADDRESS)
   (RES :FOREIGN-ADDRESS) (AYB :FOREIGN-ADDRESS) (DY :FOREIGN-ADDRESS)
   (Y_TAIL :FOREIGN-ADDRESS) (RCOND :FOREIGN-ADDRESS)
   (ITHRESH :FOREIGN-ADDRESS) (RTHRESH :FOREIGN-ADDRESS)
   (DZ_UB :FOREIGN-ADDRESS) (IGNORE_CWISE :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DLA_PORFSX_EXTENDED
    (PREC_TYPE UPLO N NRHS A LDA AF LDAF COLEQU C B LDB Y LDY BERR_OUT
     N_NORMS ERR_BNDS_NORM ERR_BNDS_COMP RES AYB DY Y_TAIL RCOND
     ITHRESH RTHRESH DZ_UB IGNORE_CWISE INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DLA_PORFSX_EXTENDED)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) PREC_TYPE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AF)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAF)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) COLEQU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) C)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDY)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) BERR_OUT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N_NORMS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) ERR_BNDS_NORM)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) ERR_BNDS_COMP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) RES)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AYB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DY)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Y_TAIL)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT RCOND)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ITHRESH)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT RTHRESH)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DZ_UB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IGNORE_CWISE)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((PREC_TYPE-REF10480 ':INT32)
                              (N-REF10482 ':INT32)
                              (NRHS-REF10483 ':INT32)
                              (LDA-REF10485 ':INT32)
                              (LDAF-REF10487 ':INT32)
                              (COLEQU-REF10488 ':INT32)
                              (LDB-REF10491 ':INT32)
                              (LDY-REF10493 ':INT32)
                              (N_NORMS-REF10495 ':INT32)
                              (RCOND-REF10502 ':DOUBLE)
                              (ITHRESH-REF10503 ':INT32)
                              (RTHRESH-REF10504 ':DOUBLE)
                              (DZ_UB-REF10505 ':DOUBLE)
                              (IGNORE_CWISE-REF10506 ':INT32)
                              (INFO-REF10507 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF PREC_TYPE-REF10480 :INT32)
                      PREC_TYPE)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10482 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF10483 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10485 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAF-REF10487 :INT32) LDAF)
    (COMMON-LISP:SETF (CFFI:MEM-REF COLEQU-REF10488 :INT32) COLEQU)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF10491 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDY-REF10493 :INT32) LDY)
    (COMMON-LISP:SETF (CFFI:MEM-REF N_NORMS-REF10495 :INT32) N_NORMS)
    (COMMON-LISP:SETF (CFFI:MEM-REF RCOND-REF10502 :DOUBLE) RCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF ITHRESH-REF10503 :INT32) ITHRESH)
    (COMMON-LISP:SETF (CFFI:MEM-REF RTHRESH-REF10504 :DOUBLE) RTHRESH)
    (COMMON-LISP:SETF (CFFI:MEM-REF DZ_UB-REF10505 :DOUBLE) DZ_UB)
    (COMMON-LISP:SETF (CFFI:MEM-REF IGNORE_CWISE-REF10506 :INT32)
                      IGNORE_CWISE)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10507 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10484 A)
                                            (AF-REF10486 AF)
                                            (C-REF10489 C)
                                            (B-REF10490 B)
                                            (Y-REF10492 Y)
                                            (BERR_OUT-REF10494
                                             BERR_OUT)
                                            (ERR_BNDS_NORM-REF10496
                                             ERR_BNDS_NORM)
                                            (ERR_BNDS_COMP-REF10497
                                             ERR_BNDS_COMP)
                                            (RES-REF10498 RES)
                                            (AYB-REF10499 AYB)
                                            (DY-REF10500 DY)
                                            (Y_TAIL-REF10501 Y_TAIL))
      (%%DLA_PORFSX_EXTENDED PREC_TYPE-REF10480 UPLO N-REF10482
       NRHS-REF10483 A-REF10484 LDA-REF10485 AF-REF10486 LDAF-REF10487
       COLEQU-REF10488 C-REF10489 B-REF10490 LDB-REF10491 Y-REF10492
       LDY-REF10493 BERR_OUT-REF10494 N_NORMS-REF10495
       ERR_BNDS_NORM-REF10496 ERR_BNDS_COMP-REF10497 RES-REF10498
       AYB-REF10499 DY-REF10500 Y_TAIL-REF10501 RCOND-REF10502
       ITHRESH-REF10503 RTHRESH-REF10504 DZ_UB-REF10505
       IGNORE_CWISE-REF10506 INFO-REF10507))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DLAEV2 "dlaev2_")
  ((A :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (RT1 :FOREIGN-ADDRESS) (RT2 :FOREIGN-ADDRESS) (CS1 :FOREIGN-ADDRESS)
   (SN1 :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DLAEV2 (A B C RT1 RT2 CS1 SN1)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DLAEV2)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT A)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT B)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT C)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT RT1)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT RT2)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT CS1)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT SN1))
  (CFFI:WITH-FOREIGN-OBJECTS ((A-REF10508 ':DOUBLE)
                              (B-REF10509 ':DOUBLE)
                              (C-REF10510 ':DOUBLE)
                              (RT1-REF10511 ':DOUBLE)
                              (RT2-REF10512 ':DOUBLE)
                              (CS1-REF10513 ':DOUBLE)
                              (SN1-REF10514 ':DOUBLE))
    (COMMON-LISP:SETF (CFFI:MEM-REF A-REF10508 :DOUBLE) A)
    (COMMON-LISP:SETF (CFFI:MEM-REF B-REF10509 :DOUBLE) B)
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF10510 :DOUBLE) C)
    (COMMON-LISP:SETF (CFFI:MEM-REF RT1-REF10511 :DOUBLE) RT1)
    (COMMON-LISP:SETF (CFFI:MEM-REF RT2-REF10512 :DOUBLE) RT2)
    (COMMON-LISP:SETF (CFFI:MEM-REF CS1-REF10513 :DOUBLE) CS1)
    (COMMON-LISP:SETF (CFFI:MEM-REF SN1-REF10514 :DOUBLE) SN1)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%DLAEV2 A-REF10508 B-REF10509 C-REF10510 RT1-REF10511
       RT2-REF10512 CS1-REF10513 SN1-REF10514))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZLANHP "zlanhp_")
  ((NORM (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (AP :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS))
  :RETURNING (:DOUBLE COMMON-LISP:DOUBLE-FLOAT) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZLANHP (NORM UPLO N AP WORK)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZLANHP)
   (COMMON-LISP:TYPE COMMON-LISP:STRING NORM)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10517 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10517 :INT32) N)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF10518 AP)
                                            (WORK-REF10519 WORK))
      (%%ZLANHP NORM UPLO N-REF10517 AP-REF10518 WORK-REF10519))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL
  (%%CHETRS_AA_2STAGE "chetrs_aa_2stage_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (TB :FOREIGN-ADDRESS) (LTB :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (IPIV2 :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CHETRS_AA_2STAGE
    (UPLO N NRHS A LDA TB LTB IPIV IPIV2 B LDB INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHETRS_AA_2STAGE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    TB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LTB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV2)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10521 ':INT32)
                              (NRHS-REF10522 ':INT32)
                              (LDA-REF10524 ':INT32)
                              (LTB-REF10526 ':INT32)
                              (LDB-REF10530 ':INT32)
                              (INFO-REF10531 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10521 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF10522 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10524 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LTB-REF10526 :INT32) LTB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF10530 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10531 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10523 A)
                                            (TB-REF10525 TB)
                                            (IPIV-REF10527 IPIV)
                                            (IPIV2-REF10528 IPIV2)
                                            (B-REF10529 B))
      (%%CHETRS_AA_2STAGE UPLO N-REF10521 NRHS-REF10522 A-REF10523
       LDA-REF10524 TB-REF10525 LTB-REF10526 IPIV-REF10527
       IPIV2-REF10528 B-REF10529 LDB-REF10530 INFO-REF10531))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CHSEQR "chseqr_")
  ((JOB (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (COMPZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (ILO :FOREIGN-ADDRESS) (IHI :FOREIGN-ADDRESS)
   (H :FOREIGN-ADDRESS) (LDH :FOREIGN-ADDRESS) (W :FOREIGN-ADDRESS)
   (Z :FOREIGN-ADDRESS) (LDZ :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CHSEQR
    (JOB COMPZ N ILO IHI H LDH W Z LDZ WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHSEQR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOB)
   (COMMON-LISP:TYPE COMMON-LISP:STRING COMPZ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ILO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IHI)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    H)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDH)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    W)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDZ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10534 ':INT32)
                              (ILO-REF10535 ':INT32)
                              (IHI-REF10536 ':INT32)
                              (LDH-REF10538 ':INT32)
                              (LDZ-REF10541 ':INT32)
                              (LWORK-REF10543 ':INT32)
                              (INFO-REF10544 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10534 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ILO-REF10535 :INT32) ILO)
    (COMMON-LISP:SETF (CFFI:MEM-REF IHI-REF10536 :INT32) IHI)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDH-REF10538 :INT32) LDH)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDZ-REF10541 :INT32) LDZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF10543 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10544 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((H-REF10537 H)
                                            (W-REF10539 W)
                                            (Z-REF10540 Z)
                                            (WORK-REF10542 WORK))
      (%%CHSEQR JOB COMPZ N-REF10534 ILO-REF10535 IHI-REF10536
       H-REF10537 LDH-REF10538 W-REF10539 Z-REF10540 LDZ-REF10541
       WORK-REF10542 LWORK-REF10543 INFO-REF10544))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CPFTRI "cpftri_")
  ((TRANSR (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CPFTRI (TRANSR UPLO N A INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CPFTRI)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10547 ':INT32)
                              (INFO-REF10549 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10547 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10549 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10548 A))
      (%%CPFTRI TRANSR UPLO N-REF10547 A-REF10548 INFO-REF10549))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SGTRFS "sgtrfs_")
  ((TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (NRHS :FOREIGN-ADDRESS) (DL :FOREIGN-ADDRESS)
   (D :FOREIGN-ADDRESS) (DU :FOREIGN-ADDRESS) (DLF :FOREIGN-ADDRESS)
   (DF :FOREIGN-ADDRESS) (DUF :FOREIGN-ADDRESS) (DU2 :FOREIGN-ADDRESS)
   (IPIV :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (LDX :FOREIGN-ADDRESS) (FERR :FOREIGN-ADDRESS)
   (BERR :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (IWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SGTRFS
    (TRANS N NRHS DL D DU DLF DF DUF DU2 IPIV B LDB X LDX FERR BERR
     WORK IWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SGTRFS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) DL)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) DU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) DLF)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) DF)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) DUF)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) DU2)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) FERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) BERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10551 ':INT32)
                              (NRHS-REF10552 ':INT32)
                              (LDB-REF10562 ':INT32)
                              (LDX-REF10564 ':INT32)
                              (INFO-REF10569 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10551 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF10552 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF10562 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX-REF10564 :INT32) LDX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10569 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DL-REF10553 DL)
                                            (D-REF10554 D)
                                            (DU-REF10555 DU)
                                            (DLF-REF10556 DLF)
                                            (DF-REF10557 DF)
                                            (DUF-REF10558 DUF)
                                            (DU2-REF10559 DU2)
                                            (IPIV-REF10560 IPIV)
                                            (B-REF10561 B)
                                            (X-REF10563 X)
                                            (FERR-REF10565 FERR)
                                            (BERR-REF10566 BERR)
                                            (WORK-REF10567 WORK)
                                            (IWORK-REF10568 IWORK))
      (%%SGTRFS TRANS N-REF10551 NRHS-REF10552 DL-REF10553 D-REF10554
       DU-REF10555 DLF-REF10556 DF-REF10557 DUF-REF10558 DU2-REF10559
       IPIV-REF10560 B-REF10561 LDB-REF10562 X-REF10563 LDX-REF10564
       FERR-REF10565 BERR-REF10566 WORK-REF10567 IWORK-REF10568
       INFO-REF10569))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CGEQRFP "cgeqrfp_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CGEQRFP (M N A LDA TAU WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGEQRFP)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF10570 ':INT32) (N-REF10571 ':INT32)
                              (LDA-REF10573 ':INT32)
                              (LWORK-REF10576 ':INT32)
                              (INFO-REF10577 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF10570 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10571 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10573 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF10576 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10577 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10572 A)
                                            (TAU-REF10574 TAU)
                                            (WORK-REF10575 WORK))
      (%%CGEQRFP M-REF10570 N-REF10571 A-REF10572 LDA-REF10573
       TAU-REF10574 WORK-REF10575 LWORK-REF10576 INFO-REF10577))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ILASLC "ilaslc_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS))
  :RETURNING :INT :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ILASLC (M N A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ILASLC)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF10578 ':INT32) (N-REF10579 ':INT32)
                              (LDA-REF10581 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF10578 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10579 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10581 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10580 A))
      (%%ILASLC M-REF10578 N-REF10579 A-REF10580 LDA-REF10581))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%LSAMEN "lsamen_")
  ((N :FOREIGN-ADDRESS) (CA (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (CB (COMMON-LISP:* :CHAR) COMMON-LISP:STRING))
  :RETURNING (:INT (COMMON-LISP:SIGNED-BYTE 32)) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %LSAMEN (N CA CB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%LSAMEN)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:STRING CA)
   (COMMON-LISP:TYPE COMMON-LISP:STRING CB))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10582 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10582 :INT32) N)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%LSAMEN N-REF10582 CA CB))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CLAPMR "clapmr_")
  ((FORWRD :FOREIGN-ADDRESS) (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (LDX :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CLAPMR (FORWRD M N X LDX K)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CLAPMR)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) FORWRD)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    K))
  (CFFI:WITH-FOREIGN-OBJECTS ((FORWRD-REF10585 ':INT32)
                              (M-REF10586 ':INT32) (N-REF10587 ':INT32)
                              (LDX-REF10589 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF FORWRD-REF10585 :INT32) FORWRD)
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF10586 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10587 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX-REF10589 :INT32) LDX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF10588 X)
                                            (K-REF10590 K))
      (%%CLAPMR FORWRD-REF10585 M-REF10586 N-REF10587 X-REF10588
       LDX-REF10589 K-REF10590))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DSPSVX "dspsvx_")
  ((FACT (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (AP :FOREIGN-ADDRESS) (AFP :FOREIGN-ADDRESS)
   (IPIV :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (LDX :FOREIGN-ADDRESS) (RCOND :FOREIGN-ADDRESS)
   (FERR :FOREIGN-ADDRESS) (BERR :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (IWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSPSVX
    (FACT UPLO N NRHS AP AFP IPIV B LDB X LDX RCOND FERR BERR WORK
     IWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSPSVX)
   (COMMON-LISP:TYPE COMMON-LISP:STRING FACT)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AFP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT RCOND)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) FERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) BERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10593 ':INT32)
                              (NRHS-REF10594 ':INT32)
                              (LDB-REF10599 ':INT32)
                              (LDX-REF10601 ':INT32)
                              (RCOND-REF10602 ':DOUBLE)
                              (INFO-REF10607 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10593 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF10594 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF10599 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX-REF10601 :INT32) LDX)
    (COMMON-LISP:SETF (CFFI:MEM-REF RCOND-REF10602 :DOUBLE) RCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10607 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF10595 AP)
                                            (AFP-REF10596 AFP)
                                            (IPIV-REF10597 IPIV)
                                            (B-REF10598 B)
                                            (X-REF10600 X)
                                            (FERR-REF10603 FERR)
                                            (BERR-REF10604 BERR)
                                            (WORK-REF10605 WORK)
                                            (IWORK-REF10606 IWORK))
      (%%DSPSVX FACT UPLO N-REF10593 NRHS-REF10594 AP-REF10595
       AFP-REF10596 IPIV-REF10597 B-REF10598 LDB-REF10599 X-REF10600
       LDX-REF10601 RCOND-REF10602 FERR-REF10603 BERR-REF10604
       WORK-REF10605 IWORK-REF10606 INFO-REF10607))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZGBRFS "zgbrfs_")
  ((TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (KL :FOREIGN-ADDRESS) (KU :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (AB :FOREIGN-ADDRESS)
   (LDAB :FOREIGN-ADDRESS) (AFB :FOREIGN-ADDRESS)
   (LDAFB :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (LDX :FOREIGN-ADDRESS) (FERR :FOREIGN-ADDRESS)
   (BERR :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (RWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZGBRFS
    (TRANS N KL KU NRHS AB LDAB AFB LDAFB IPIV B LDB X LDX FERR BERR
     WORK RWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGBRFS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AFB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAFB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) FERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) BERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10609 ':INT32)
                              (KL-REF10610 ':INT32)
                              (KU-REF10611 ':INT32)
                              (NRHS-REF10612 ':INT32)
                              (LDAB-REF10614 ':INT32)
                              (LDAFB-REF10616 ':INT32)
                              (LDB-REF10619 ':INT32)
                              (LDX-REF10621 ':INT32)
                              (INFO-REF10626 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10609 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KL-REF10610 :INT32) KL)
    (COMMON-LISP:SETF (CFFI:MEM-REF KU-REF10611 :INT32) KU)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF10612 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAB-REF10614 :INT32) LDAB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAFB-REF10616 :INT32) LDAFB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF10619 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX-REF10621 :INT32) LDX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10626 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AB-REF10613 AB)
                                            (AFB-REF10615 AFB)
                                            (IPIV-REF10617 IPIV)
                                            (B-REF10618 B)
                                            (X-REF10620 X)
                                            (FERR-REF10622 FERR)
                                            (BERR-REF10623 BERR)
                                            (WORK-REF10624 WORK)
                                            (RWORK-REF10625 RWORK))
      (%%ZGBRFS TRANS N-REF10609 KL-REF10610 KU-REF10611 NRHS-REF10612
       AB-REF10613 LDAB-REF10614 AFB-REF10615 LDAFB-REF10616
       IPIV-REF10617 B-REF10618 LDB-REF10619 X-REF10620 LDX-REF10621
       FERR-REF10622 BERR-REF10623 WORK-REF10624 RWORK-REF10625
       INFO-REF10626))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHBEVX "zhbevx_")
  ((JOBZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (RANGE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (KD :FOREIGN-ADDRESS) (AB :FOREIGN-ADDRESS) (LDAB :FOREIGN-ADDRESS)
   (Q :FOREIGN-ADDRESS) (LDQ :FOREIGN-ADDRESS) (VL :FOREIGN-ADDRESS)
   (VU :FOREIGN-ADDRESS) (IL :FOREIGN-ADDRESS) (IU :FOREIGN-ADDRESS)
   (ABSTOL :FOREIGN-ADDRESS) (M :FOREIGN-ADDRESS) (W :FOREIGN-ADDRESS)
   (Z :FOREIGN-ADDRESS) (LDZ :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (RWORK :FOREIGN-ADDRESS) (IWORK :FOREIGN-ADDRESS)
   (IFAIL :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHBEVX
    (JOBZ RANGE UPLO N KD AB LDAB Q LDQ VL VU IL IU ABSTOL M W Z LDZ
     WORK RWORK IWORK IFAIL INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHBEVX)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBZ)
   (COMMON-LISP:TYPE COMMON-LISP:STRING RANGE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KD)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    Q)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDQ)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT VL)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT VU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IU)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ABSTOL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) W)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDZ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IFAIL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10630 ':INT32)
                              (KD-REF10631 ':INT32)
                              (LDAB-REF10633 ':INT32)
                              (LDQ-REF10635 ':INT32)
                              (VL-REF10636 ':DOUBLE)
                              (VU-REF10637 ':DOUBLE)
                              (IL-REF10638 ':INT32)
                              (IU-REF10639 ':INT32)
                              (ABSTOL-REF10640 ':DOUBLE)
                              (M-REF10641 ':INT32)
                              (LDZ-REF10644 ':INT32)
                              (INFO-REF10649 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10630 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KD-REF10631 :INT32) KD)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAB-REF10633 :INT32) LDAB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDQ-REF10635 :INT32) LDQ)
    (COMMON-LISP:SETF (CFFI:MEM-REF VL-REF10636 :DOUBLE) VL)
    (COMMON-LISP:SETF (CFFI:MEM-REF VU-REF10637 :DOUBLE) VU)
    (COMMON-LISP:SETF (CFFI:MEM-REF IL-REF10638 :INT32) IL)
    (COMMON-LISP:SETF (CFFI:MEM-REF IU-REF10639 :INT32) IU)
    (COMMON-LISP:SETF (CFFI:MEM-REF ABSTOL-REF10640 :DOUBLE) ABSTOL)
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF10641 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDZ-REF10644 :INT32) LDZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10649 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AB-REF10632 AB)
                                            (Q-REF10634 Q)
                                            (W-REF10642 W)
                                            (Z-REF10643 Z)
                                            (WORK-REF10645 WORK)
                                            (RWORK-REF10646 RWORK)
                                            (IWORK-REF10647 IWORK)
                                            (IFAIL-REF10648 IFAIL))
      (%%ZHBEVX JOBZ RANGE UPLO N-REF10630 KD-REF10631 AB-REF10632
       LDAB-REF10633 Q-REF10634 LDQ-REF10635 VL-REF10636 VU-REF10637
       IL-REF10638 IU-REF10639 ABSTOL-REF10640 M-REF10641 W-REF10642
       Z-REF10643 LDZ-REF10644 WORK-REF10645 RWORK-REF10646
       IWORK-REF10647 IFAIL-REF10648 INFO-REF10649))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DGTSV "dgtsv_")
  ((N :FOREIGN-ADDRESS) (NRHS :FOREIGN-ADDRESS) (DL :FOREIGN-ADDRESS)
   (D :FOREIGN-ADDRESS) (DU :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DGTSV (N NRHS DL D DU B LDB INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGTSV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DL)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10650 ':INT32)
                              (NRHS-REF10651 ':INT32)
                              (LDB-REF10656 ':INT32)
                              (INFO-REF10657 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10650 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF10651 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF10656 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10657 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DL-REF10652 DL)
                                            (D-REF10653 D)
                                            (DU-REF10654 DU)
                                            (B-REF10655 B))
      (%%DGTSV N-REF10650 NRHS-REF10651 DL-REF10652 D-REF10653
       DU-REF10654 B-REF10655 LDB-REF10656 INFO-REF10657))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CLAQPS "claqps_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (OFFSET :FOREIGN-ADDRESS)
   (NB :FOREIGN-ADDRESS) (KB :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (JPVT :FOREIGN-ADDRESS)
   (TAU :FOREIGN-ADDRESS) (VN1 :FOREIGN-ADDRESS) (VN2 :FOREIGN-ADDRESS)
   (AUXV :FOREIGN-ADDRESS) (F :FOREIGN-ADDRESS) (LDF :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CLAQPS
    (M N OFFSET NB KB A LDA JPVT TAU VN1 VN2 AUXV F LDF)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CLAQPS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) OFFSET)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    JPVT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) VN1)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) VN2)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    AUXV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    F)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDF))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF10658 ':INT32) (N-REF10659 ':INT32)
                              (OFFSET-REF10660 ':INT32)
                              (NB-REF10661 ':INT32)
                              (KB-REF10662 ':INT32)
                              (LDA-REF10664 ':INT32)
                              (LDF-REF10671 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF10658 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10659 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF OFFSET-REF10660 :INT32) OFFSET)
    (COMMON-LISP:SETF (CFFI:MEM-REF NB-REF10661 :INT32) NB)
    (COMMON-LISP:SETF (CFFI:MEM-REF KB-REF10662 :INT32) KB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10664 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDF-REF10671 :INT32) LDF)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10663 A)
                                            (JPVT-REF10665 JPVT)
                                            (TAU-REF10666 TAU)
                                            (VN1-REF10667 VN1)
                                            (VN2-REF10668 VN2)
                                            (AUXV-REF10669 AUXV)
                                            (F-REF10670 F))
      (%%CLAQPS M-REF10658 N-REF10659 OFFSET-REF10660 NB-REF10661
       KB-REF10662 A-REF10663 LDA-REF10664 JPVT-REF10665 TAU-REF10666
       VN1-REF10667 VN2-REF10668 AUXV-REF10669 F-REF10670
       LDF-REF10671))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SORGTR "sorgtr_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SORGTR (UPLO N A LDA TAU WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SORGTR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10673 ':INT32)
                              (LDA-REF10675 ':INT32)
                              (LWORK-REF10678 ':INT32)
                              (INFO-REF10679 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10673 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10675 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF10678 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10679 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10674 A)
                                            (TAU-REF10676 TAU)
                                            (WORK-REF10677 WORK))
      (%%SORGTR UPLO N-REF10673 A-REF10674 LDA-REF10675 TAU-REF10676
       WORK-REF10677 LWORK-REF10678 INFO-REF10679))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SLALSD "slalsd_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (SMLSIZ :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS) (E :FOREIGN-ADDRESS)
   (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS) (RCOND :FOREIGN-ADDRESS)
   (RANK :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (IWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SLALSD
    (UPLO SMLSIZ N NRHS D E B LDB RCOND RANK WORK IWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SLALSD)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) SMLSIZ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) E)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT RCOND)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) RANK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((SMLSIZ-REF10681 ':INT32)
                              (N-REF10682 ':INT32)
                              (NRHS-REF10683 ':INT32)
                              (LDB-REF10687 ':INT32)
                              (RCOND-REF10688 ':FLOAT)
                              (RANK-REF10689 ':INT32)
                              (INFO-REF10692 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF SMLSIZ-REF10681 :INT32) SMLSIZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10682 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF10683 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF10687 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF RCOND-REF10688 :FLOAT) RCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF RANK-REF10689 :INT32) RANK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10692 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((D-REF10684 D)
                                            (E-REF10685 E)
                                            (B-REF10686 B)
                                            (WORK-REF10690 WORK)
                                            (IWORK-REF10691 IWORK))
      (%%SLALSD UPLO SMLSIZ-REF10681 N-REF10682 NRHS-REF10683
       D-REF10684 E-REF10685 B-REF10686 LDB-REF10687 RCOND-REF10688
       RANK-REF10689 WORK-REF10690 IWORK-REF10691 INFO-REF10692))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%STGSJA "stgsja_")
  ((JOBU (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (JOBV (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (JOBQ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (P :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (L :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS) (TOLA :FOREIGN-ADDRESS)
   (TOLB :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (BETA :FOREIGN-ADDRESS) (U :FOREIGN-ADDRESS) (LDU :FOREIGN-ADDRESS)
   (V :FOREIGN-ADDRESS) (LDV :FOREIGN-ADDRESS) (Q :FOREIGN-ADDRESS)
   (LDQ :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (NCYCLE :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %STGSJA
    (JOBU JOBV JOBQ M P N K L A LDA B LDB TOLA TOLB ALPHA BETA U LDU V
     LDV Q LDQ WORK NCYCLE INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STGSJA)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBU)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBQ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) P)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) L)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT TOLA)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT TOLB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) U)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) V)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Q)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDQ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NCYCLE)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF10696 ':INT32) (P-REF10697 ':INT32)
                              (N-REF10698 ':INT32) (K-REF10699 ':INT32)
                              (L-REF10700 ':INT32)
                              (LDA-REF10702 ':INT32)
                              (LDB-REF10704 ':INT32)
                              (TOLA-REF10705 ':FLOAT)
                              (TOLB-REF10706 ':FLOAT)
                              (LDU-REF10710 ':INT32)
                              (LDV-REF10712 ':INT32)
                              (LDQ-REF10714 ':INT32)
                              (NCYCLE-REF10716 ':INT32)
                              (INFO-REF10717 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF10696 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF P-REF10697 :INT32) P)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10698 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF10699 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF L-REF10700 :INT32) L)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10702 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF10704 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF TOLA-REF10705 :FLOAT) TOLA)
    (COMMON-LISP:SETF (CFFI:MEM-REF TOLB-REF10706 :FLOAT) TOLB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDU-REF10710 :INT32) LDU)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDV-REF10712 :INT32) LDV)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDQ-REF10714 :INT32) LDQ)
    (COMMON-LISP:SETF (CFFI:MEM-REF NCYCLE-REF10716 :INT32) NCYCLE)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10717 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10701 A)
                                            (B-REF10703 B)
                                            (ALPHA-REF10707 ALPHA)
                                            (BETA-REF10708 BETA)
                                            (U-REF10709 U)
                                            (V-REF10711 V)
                                            (Q-REF10713 Q)
                                            (WORK-REF10715 WORK))
      (%%STGSJA JOBU JOBV JOBQ M-REF10696 P-REF10697 N-REF10698
       K-REF10699 L-REF10700 A-REF10701 LDA-REF10702 B-REF10703
       LDB-REF10704 TOLA-REF10705 TOLB-REF10706 ALPHA-REF10707
       BETA-REF10708 U-REF10709 LDU-REF10710 V-REF10711 LDV-REF10712
       Q-REF10713 LDQ-REF10714 WORK-REF10715 NCYCLE-REF10716
       INFO-REF10717))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL
  (%%CSYSV_AA_2STAGE "csysv_aa_2stage_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (TB :FOREIGN-ADDRESS) (LTB :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (IPIV2 :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CSYSV_AA_2STAGE
    (UPLO N NRHS A LDA TB LTB IPIV IPIV2 B LDB WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSYSV_AA_2STAGE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    TB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LTB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV2)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10719 ':INT32)
                              (NRHS-REF10720 ':INT32)
                              (LDA-REF10722 ':INT32)
                              (LTB-REF10724 ':INT32)
                              (LDB-REF10728 ':INT32)
                              (LWORK-REF10730 ':INT32)
                              (INFO-REF10731 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10719 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF10720 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10722 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LTB-REF10724 :INT32) LTB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF10728 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF10730 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10731 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10721 A)
                                            (TB-REF10723 TB)
                                            (IPIV-REF10725 IPIV)
                                            (IPIV2-REF10726 IPIV2)
                                            (B-REF10727 B)
                                            (WORK-REF10729 WORK))
      (%%CSYSV_AA_2STAGE UPLO N-REF10719 NRHS-REF10720 A-REF10721
       LDA-REF10722 TB-REF10723 LTB-REF10724 IPIV-REF10725
       IPIV2-REF10726 B-REF10727 LDB-REF10728 WORK-REF10729
       LWORK-REF10730 INFO-REF10731))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL
  (%%DSYSV_AA_2STAGE "dsysv_aa_2stage_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (TB :FOREIGN-ADDRESS) (LTB :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (IPIV2 :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSYSV_AA_2STAGE
    (UPLO N NRHS A LDA TB LTB IPIV IPIV2 B LDB WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSYSV_AA_2STAGE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) TB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LTB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV2)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10733 ':INT32)
                              (NRHS-REF10734 ':INT32)
                              (LDA-REF10736 ':INT32)
                              (LTB-REF10738 ':INT32)
                              (LDB-REF10742 ':INT32)
                              (LWORK-REF10744 ':INT32)
                              (INFO-REF10745 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10733 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF10734 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10736 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LTB-REF10738 :INT32) LTB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF10742 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF10744 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10745 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10735 A)
                                            (TB-REF10737 TB)
                                            (IPIV-REF10739 IPIV)
                                            (IPIV2-REF10740 IPIV2)
                                            (B-REF10741 B)
                                            (WORK-REF10743 WORK))
      (%%DSYSV_AA_2STAGE UPLO N-REF10733 NRHS-REF10734 A-REF10735
       LDA-REF10736 TB-REF10737 LTB-REF10738 IPIV-REF10739
       IPIV2-REF10740 B-REF10741 LDB-REF10742 WORK-REF10743
       LWORK-REF10744 INFO-REF10745))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZPPTRF "zpptrf_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (AP :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZPPTRF (UPLO N AP INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZPPTRF)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AP)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10747 ':INT32)
                              (INFO-REF10749 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10747 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10749 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF10748 AP))
      (%%ZPPTRF UPLO N-REF10747 AP-REF10748 INFO-REF10749))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CGETRS "cgetrs_")
  ((TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (NRHS :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CGETRS (TRANS N NRHS A LDA IPIV B LDB INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGETRS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10751 ':INT32)
                              (NRHS-REF10752 ':INT32)
                              (LDA-REF10754 ':INT32)
                              (LDB-REF10757 ':INT32)
                              (INFO-REF10758 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10751 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF10752 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10754 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF10757 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10758 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10753 A)
                                            (IPIV-REF10755 IPIV)
                                            (B-REF10756 B))
      (%%CGETRS TRANS N-REF10751 NRHS-REF10752 A-REF10753 LDA-REF10754
       IPIV-REF10755 B-REF10756 LDB-REF10757 INFO-REF10758))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHETRI2 "zhetri2_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHETRI2 (UPLO N A LDA IPIV WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHETRI2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10760 ':INT32)
                              (LDA-REF10762 ':INT32)
                              (LWORK-REF10765 ':INT32)
                              (INFO-REF10766 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10760 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10762 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF10765 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10766 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10761 A)
                                            (IPIV-REF10763 IPIV)
                                            (WORK-REF10764 WORK))
      (%%ZHETRI2 UPLO N-REF10760 A-REF10761 LDA-REF10762 IPIV-REF10763
       WORK-REF10764 LWORK-REF10765 INFO-REF10766))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CLACRM "clacrm_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS)
   (RWORK :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CLACRM (M N A LDA B LDB C LDC RWORK)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CLACRM)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) RWORK))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF10767 ':INT32) (N-REF10768 ':INT32)
                              (LDA-REF10770 ':INT32)
                              (LDB-REF10772 ':INT32)
                              (LDC-REF10774 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF10767 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10768 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10770 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF10772 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF10774 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10769 A)
                                            (B-REF10771 B)
                                            (C-REF10773 C)
                                            (RWORK-REF10775 RWORK))
      (%%CLACRM M-REF10767 N-REF10768 A-REF10769 LDA-REF10770
       B-REF10771 LDB-REF10772 C-REF10773 LDC-REF10774
       RWORK-REF10775))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL
  (%%DLAORHR_COL_GETRFNP "dlaorhr_col_getrfnp_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DLAORHR_COL_GETRFNP (M N A LDA D INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DLAORHR_COL_GETRFNP)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) D)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF10776 ':INT32) (N-REF10777 ':INT32)
                              (LDA-REF10779 ':INT32)
                              (INFO-REF10781 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF10776 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10777 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10779 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10781 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10778 A)
                                            (D-REF10780 D))
      (%%DLAORHR_COL_GETRFNP M-REF10776 N-REF10777 A-REF10778
       LDA-REF10779 D-REF10780 INFO-REF10781))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL
  (%%CLA_GBRFSX_EXTENDED "cla_gbrfsx_extended_")
  ((PREC_TYPE :FOREIGN-ADDRESS) (TRANS_TYPE :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (KL :FOREIGN-ADDRESS) (KU :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (AB :FOREIGN-ADDRESS)
   (LDAB :FOREIGN-ADDRESS) (AFB :FOREIGN-ADDRESS)
   (LDAFB :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (COLEQU :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS) (LDY :FOREIGN-ADDRESS)
   (BERR_OUT :FOREIGN-ADDRESS) (N_NORMS :FOREIGN-ADDRESS)
   (ERR_BNDS_NORM :FOREIGN-ADDRESS) (ERR_BNDS_COMP :FOREIGN-ADDRESS)
   (RES :FOREIGN-ADDRESS) (AYB :FOREIGN-ADDRESS) (DY :FOREIGN-ADDRESS)
   (Y_TAIL :FOREIGN-ADDRESS) (RCOND :FOREIGN-ADDRESS)
   (ITHRESH :FOREIGN-ADDRESS) (RTHRESH :FOREIGN-ADDRESS)
   (DZ_UB :FOREIGN-ADDRESS) (IGNORE_CWISE :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CLA_GBRFSX_EXTENDED
    (PREC_TYPE TRANS_TYPE N KL KU NRHS AB LDAB AFB LDAFB IPIV COLEQU C
     B LDB Y LDY BERR_OUT N_NORMS ERR_BNDS_NORM ERR_BNDS_COMP RES AYB
     DY Y_TAIL RCOND ITHRESH RTHRESH DZ_UB IGNORE_CWISE INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CLA_GBRFSX_EXTENDED)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) PREC_TYPE)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) TRANS_TYPE)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    AB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    AFB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAFB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) COLEQU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) C)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDY)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) BERR_OUT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N_NORMS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) ERR_BNDS_NORM)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) ERR_BNDS_COMP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    RES)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) AYB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    DY)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Y_TAIL)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT RCOND)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ITHRESH)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT RTHRESH)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT DZ_UB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IGNORE_CWISE)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((PREC_TYPE-REF10782 ':INT32)
                              (TRANS_TYPE-REF10783 ':INT32)
                              (N-REF10784 ':INT32)
                              (KL-REF10785 ':INT32)
                              (KU-REF10786 ':INT32)
                              (NRHS-REF10787 ':INT32)
                              (LDAB-REF10789 ':INT32)
                              (LDAFB-REF10791 ':INT32)
                              (COLEQU-REF10793 ':INT32)
                              (LDB-REF10796 ':INT32)
                              (LDY-REF10798 ':INT32)
                              (N_NORMS-REF10800 ':INT32)
                              (RCOND-REF10807 ':FLOAT)
                              (ITHRESH-REF10808 ':INT32)
                              (RTHRESH-REF10809 ':FLOAT)
                              (DZ_UB-REF10810 ':FLOAT)
                              (IGNORE_CWISE-REF10811 ':INT32)
                              (INFO-REF10812 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF PREC_TYPE-REF10782 :INT32)
                      PREC_TYPE)
    (COMMON-LISP:SETF (CFFI:MEM-REF TRANS_TYPE-REF10783 :INT32)
                      TRANS_TYPE)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10784 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KL-REF10785 :INT32) KL)
    (COMMON-LISP:SETF (CFFI:MEM-REF KU-REF10786 :INT32) KU)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF10787 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAB-REF10789 :INT32) LDAB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAFB-REF10791 :INT32) LDAFB)
    (COMMON-LISP:SETF (CFFI:MEM-REF COLEQU-REF10793 :INT32) COLEQU)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF10796 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDY-REF10798 :INT32) LDY)
    (COMMON-LISP:SETF (CFFI:MEM-REF N_NORMS-REF10800 :INT32) N_NORMS)
    (COMMON-LISP:SETF (CFFI:MEM-REF RCOND-REF10807 :FLOAT) RCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF ITHRESH-REF10808 :INT32) ITHRESH)
    (COMMON-LISP:SETF (CFFI:MEM-REF RTHRESH-REF10809 :FLOAT) RTHRESH)
    (COMMON-LISP:SETF (CFFI:MEM-REF DZ_UB-REF10810 :FLOAT) DZ_UB)
    (COMMON-LISP:SETF (CFFI:MEM-REF IGNORE_CWISE-REF10811 :INT32)
                      IGNORE_CWISE)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10812 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AB-REF10788 AB)
                                            (AFB-REF10790 AFB)
                                            (IPIV-REF10792 IPIV)
                                            (C-REF10794 C)
                                            (B-REF10795 B)
                                            (Y-REF10797 Y)
                                            (BERR_OUT-REF10799
                                             BERR_OUT)
                                            (ERR_BNDS_NORM-REF10801
                                             ERR_BNDS_NORM)
                                            (ERR_BNDS_COMP-REF10802
                                             ERR_BNDS_COMP)
                                            (RES-REF10803 RES)
                                            (AYB-REF10804 AYB)
                                            (DY-REF10805 DY)
                                            (Y_TAIL-REF10806 Y_TAIL))
      (%%CLA_GBRFSX_EXTENDED PREC_TYPE-REF10782 TRANS_TYPE-REF10783
       N-REF10784 KL-REF10785 KU-REF10786 NRHS-REF10787 AB-REF10788
       LDAB-REF10789 AFB-REF10790 LDAFB-REF10791 IPIV-REF10792
       COLEQU-REF10793 C-REF10794 B-REF10795 LDB-REF10796 Y-REF10797
       LDY-REF10798 BERR_OUT-REF10799 N_NORMS-REF10800
       ERR_BNDS_NORM-REF10801 ERR_BNDS_COMP-REF10802 RES-REF10803
       AYB-REF10804 DY-REF10805 Y_TAIL-REF10806 RCOND-REF10807
       ITHRESH-REF10808 RTHRESH-REF10809 DZ_UB-REF10810
       IGNORE_CWISE-REF10811 INFO-REF10812))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZTPTTR "ztpttr_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (AP :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZTPTTR (UPLO N AP A LDA INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTPTTR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10814 ':INT32)
                              (LDA-REF10817 ':INT32)
                              (INFO-REF10818 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10814 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10817 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10818 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF10815 AP)
                                            (A-REF10816 A))
      (%%ZTPTTR UPLO N-REF10814 AP-REF10815 A-REF10816 LDA-REF10817
       INFO-REF10818))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CPBTF2 "cpbtf2_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (KD :FOREIGN-ADDRESS) (AB :FOREIGN-ADDRESS) (LDAB :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CPBTF2 (UPLO N KD AB LDAB INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CPBTF2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KD)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    AB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10820 ':INT32)
                              (KD-REF10821 ':INT32)
                              (LDAB-REF10823 ':INT32)
                              (INFO-REF10824 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10820 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KD-REF10821 :INT32) KD)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAB-REF10823 :INT32) LDAB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10824 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AB-REF10822 AB))
      (%%CPBTF2 UPLO N-REF10820 KD-REF10821 AB-REF10822 LDAB-REF10823
       INFO-REF10824))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CLAQSY "claqsy_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (S :FOREIGN-ADDRESS)
   (SCOND :FOREIGN-ADDRESS) (AMAX :FOREIGN-ADDRESS)
   (EQUED (COMMON-LISP:* :CHAR) COMMON-LISP:STRING))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CLAQSY (UPLO N A LDA S SCOND AMAX EQUED)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CLAQSY)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) S)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SCOND)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT AMAX)
   (COMMON-LISP:TYPE COMMON-LISP:STRING EQUED))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10826 ':INT32)
                              (LDA-REF10828 ':INT32)
                              (SCOND-REF10830 ':FLOAT)
                              (AMAX-REF10831 ':FLOAT))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10826 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10828 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF SCOND-REF10830 :FLOAT) SCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF AMAX-REF10831 :FLOAT) AMAX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10827 A)
                                            (S-REF10829 S))
      (%%CLAQSY UPLO N-REF10826 A-REF10827 LDA-REF10828 S-REF10829
       SCOND-REF10830 AMAX-REF10831 EQUED))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZTRTTP "ztrttp_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (AP :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZTRTTP (UPLO N A LDA AP INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTRTTP)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AP)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10834 ':INT32)
                              (LDA-REF10836 ':INT32)
                              (INFO-REF10838 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10834 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10836 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10838 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10835 A)
                                            (AP-REF10837 AP))
      (%%ZTRTTP UPLO N-REF10834 A-REF10835 LDA-REF10836 AP-REF10837
       INFO-REF10838))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZLANTR "zlantr_")
  ((NORM (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS))
  :RETURNING (:DOUBLE COMMON-LISP:DOUBLE-FLOAT) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZLANTR (NORM UPLO DIAG M N A LDA WORK)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZLANTR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING NORM)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF10842 ':INT32) (N-REF10843 ':INT32)
                              (LDA-REF10845 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF10842 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10843 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10845 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10844 A)
                                            (WORK-REF10846 WORK))
      (%%ZLANTR NORM UPLO DIAG M-REF10842 N-REF10843 A-REF10844
       LDA-REF10845 WORK-REF10846))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SHSEIN "shsein_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (EIGSRC (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (INITV (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (SELECT :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (H :FOREIGN-ADDRESS)
   (LDH :FOREIGN-ADDRESS) (WR :FOREIGN-ADDRESS) (WI :FOREIGN-ADDRESS)
   (VL :FOREIGN-ADDRESS) (LDVL :FOREIGN-ADDRESS) (VR :FOREIGN-ADDRESS)
   (LDVR :FOREIGN-ADDRESS) (MM :FOREIGN-ADDRESS) (M :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (IFAILL :FOREIGN-ADDRESS)
   (IFAILR :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SHSEIN
    (SIDE EIGSRC INITV SELECT N H LDH WR WI VL LDVL VR LDVR MM M WORK
     IFAILL IFAILR INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SHSEIN)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING EIGSRC)
   (COMMON-LISP:TYPE COMMON-LISP:STRING INITV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    SELECT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) H)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDH)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WI)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) VL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDVL)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) VR)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDVR)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) MM)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IFAILL)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IFAILR)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10851 ':INT32)
                              (LDH-REF10853 ':INT32)
                              (LDVL-REF10857 ':INT32)
                              (LDVR-REF10859 ':INT32)
                              (MM-REF10860 ':INT32)
                              (M-REF10861 ':INT32)
                              (INFO-REF10865 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10851 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDH-REF10853 :INT32) LDH)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDVL-REF10857 :INT32) LDVL)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDVR-REF10859 :INT32) LDVR)
    (COMMON-LISP:SETF (CFFI:MEM-REF MM-REF10860 :INT32) MM)
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF10861 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10865 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SELECT-REF10850 SELECT)
                                            (H-REF10852 H)
                                            (WR-REF10854 WR)
                                            (WI-REF10855 WI)
                                            (VL-REF10856 VL)
                                            (VR-REF10858 VR)
                                            (WORK-REF10862 WORK)
                                            (IFAILL-REF10863 IFAILL)
                                            (IFAILR-REF10864 IFAILR))
      (%%SHSEIN SIDE EIGSRC INITV SELECT-REF10850 N-REF10851 H-REF10852
       LDH-REF10853 WR-REF10854 WI-REF10855 VL-REF10856 LDVL-REF10857
       VR-REF10858 LDVR-REF10859 MM-REF10860 M-REF10861 WORK-REF10862
       IFAILL-REF10863 IFAILR-REF10864 INFO-REF10865))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SPTSVX "sptsvx_")
  ((FACT (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS) (E :FOREIGN-ADDRESS)
   (DF :FOREIGN-ADDRESS) (EF :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (LDX :FOREIGN-ADDRESS)
   (RCOND :FOREIGN-ADDRESS) (FERR :FOREIGN-ADDRESS)
   (BERR :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SPTSVX
    (FACT N NRHS D E DF EF B LDB X LDX RCOND FERR BERR WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SPTSVX)
   (COMMON-LISP:TYPE COMMON-LISP:STRING FACT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) E)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) DF)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) EF)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT RCOND)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) FERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) BERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10867 ':INT32)
                              (NRHS-REF10868 ':INT32)
                              (LDB-REF10874 ':INT32)
                              (LDX-REF10876 ':INT32)
                              (RCOND-REF10877 ':FLOAT)
                              (INFO-REF10881 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10867 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF10868 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF10874 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX-REF10876 :INT32) LDX)
    (COMMON-LISP:SETF (CFFI:MEM-REF RCOND-REF10877 :FLOAT) RCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10881 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((D-REF10869 D)
                                            (E-REF10870 E)
                                            (DF-REF10871 DF)
                                            (EF-REF10872 EF)
                                            (B-REF10873 B)
                                            (X-REF10875 X)
                                            (FERR-REF10878 FERR)
                                            (BERR-REF10879 BERR)
                                            (WORK-REF10880 WORK))
      (%%SPTSVX FACT N-REF10867 NRHS-REF10868 D-REF10869 E-REF10870
       DF-REF10871 EF-REF10872 B-REF10873 LDB-REF10874 X-REF10875
       LDX-REF10876 RCOND-REF10877 FERR-REF10878 BERR-REF10879
       WORK-REF10880 INFO-REF10881))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DSYTRI "dsytri_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSYTRI (UPLO N A LDA IPIV WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSYTRI)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10883 ':INT32)
                              (LDA-REF10885 ':INT32)
                              (INFO-REF10888 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10883 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10885 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10888 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10884 A)
                                            (IPIV-REF10886 IPIV)
                                            (WORK-REF10887 WORK))
      (%%DSYTRI UPLO N-REF10883 A-REF10884 LDA-REF10885 IPIV-REF10886
       WORK-REF10887 INFO-REF10888))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CLARZ "clarz_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (L :FOREIGN-ADDRESS) (V :FOREIGN-ADDRESS)
   (INCV :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (LDC :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CLARZ (SIDE M N L V INCV TAU C LDC WORK)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CLARZ)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) L)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    V)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCV)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF10890 ':INT32) (N-REF10891 ':INT32)
                              (L-REF10892 ':INT32)
                              (INCV-REF10894 ':INT32)
                              (TAU-REF10895
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDC-REF10897 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF10890 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10891 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF L-REF10892 :INT32) L)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCV-REF10894 :INT32) INCV)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              TAU-REF10895
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART TAU)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART TAU)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF10897 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((V-REF10893 V)
                                            (C-REF10896 C)
                                            (WORK-REF10898 WORK))
      (%%CLARZ SIDE M-REF10890 N-REF10891 L-REF10892 V-REF10893
       INCV-REF10894 TAU-REF10895 C-REF10896 LDC-REF10897
       WORK-REF10898))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZUNGQL "zungql_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZUNGQL (M N K A LDA TAU WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZUNGQL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF10899 ':INT32) (N-REF10900 ':INT32)
                              (K-REF10901 ':INT32)
                              (LDA-REF10903 ':INT32)
                              (LWORK-REF10906 ':INT32)
                              (INFO-REF10907 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF10899 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10900 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF10901 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10903 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF10906 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10907 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10902 A)
                                            (TAU-REF10904 TAU)
                                            (WORK-REF10905 WORK))
      (%%ZUNGQL M-REF10899 N-REF10900 K-REF10901 A-REF10902
       LDA-REF10903 TAU-REF10904 WORK-REF10905 LWORK-REF10906
       INFO-REF10907))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SSYTRI "ssytri_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SSYTRI (UPLO N A LDA IPIV WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYTRI)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10909 ':INT32)
                              (LDA-REF10911 ':INT32)
                              (INFO-REF10914 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10909 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10911 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10914 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10910 A)
                                            (IPIV-REF10912 IPIV)
                                            (WORK-REF10913 WORK))
      (%%SSYTRI UPLO N-REF10909 A-REF10910 LDA-REF10911 IPIV-REF10912
       WORK-REF10913 INFO-REF10914))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHETRD_2STAGE "zhetrd_2stage_")
  ((VECT (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS)
   (E :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS) (HOUS2 :FOREIGN-ADDRESS)
   (LHOUS2 :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHETRD_2STAGE
    (VECT UPLO N A LDA D E TAU HOUS2 LHOUS2 WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHETRD_2STAGE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING VECT)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) E)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    HOUS2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LHOUS2)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10917 ':INT32)
                              (LDA-REF10919 ':INT32)
                              (LHOUS2-REF10924 ':INT32)
                              (LWORK-REF10926 ':INT32)
                              (INFO-REF10927 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10917 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10919 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LHOUS2-REF10924 :INT32) LHOUS2)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF10926 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10927 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10918 A)
                                            (D-REF10920 D)
                                            (E-REF10921 E)
                                            (TAU-REF10922 TAU)
                                            (HOUS2-REF10923 HOUS2)
                                            (WORK-REF10925 WORK))
      (%%ZHETRD_2STAGE VECT UPLO N-REF10917 A-REF10918 LDA-REF10919
       D-REF10920 E-REF10921 TAU-REF10922 HOUS2-REF10923
       LHOUS2-REF10924 WORK-REF10925 LWORK-REF10926 INFO-REF10927))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%STRTI2 "strti2_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %STRTI2 (UPLO DIAG N A LDA INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STRTI2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10930 ':INT32)
                              (LDA-REF10932 ':INT32)
                              (INFO-REF10933 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10930 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10932 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10933 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10931 A))
      (%%STRTI2 UPLO DIAG N-REF10930 A-REF10931 LDA-REF10932
       INFO-REF10933))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SSYEVX "ssyevx_")
  ((JOBZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (RANGE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (VL :FOREIGN-ADDRESS)
   (VU :FOREIGN-ADDRESS) (IL :FOREIGN-ADDRESS) (IU :FOREIGN-ADDRESS)
   (ABSTOL :FOREIGN-ADDRESS) (M :FOREIGN-ADDRESS) (W :FOREIGN-ADDRESS)
   (Z :FOREIGN-ADDRESS) (LDZ :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (IWORK :FOREIGN-ADDRESS)
   (IFAIL :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SSYEVX
    (JOBZ RANGE UPLO N A LDA VL VU IL IU ABSTOL M W Z LDZ WORK LWORK
     IWORK IFAIL INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYEVX)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBZ)
   (COMMON-LISP:TYPE COMMON-LISP:STRING RANGE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT VL)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT VU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IU)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ABSTOL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) W)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDZ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IFAIL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10937 ':INT32)
                              (LDA-REF10939 ':INT32)
                              (VL-REF10940 ':FLOAT)
                              (VU-REF10941 ':FLOAT)
                              (IL-REF10942 ':INT32)
                              (IU-REF10943 ':INT32)
                              (ABSTOL-REF10944 ':FLOAT)
                              (M-REF10945 ':INT32)
                              (LDZ-REF10948 ':INT32)
                              (LWORK-REF10950 ':INT32)
                              (INFO-REF10953 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10937 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10939 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF VL-REF10940 :FLOAT) VL)
    (COMMON-LISP:SETF (CFFI:MEM-REF VU-REF10941 :FLOAT) VU)
    (COMMON-LISP:SETF (CFFI:MEM-REF IL-REF10942 :INT32) IL)
    (COMMON-LISP:SETF (CFFI:MEM-REF IU-REF10943 :INT32) IU)
    (COMMON-LISP:SETF (CFFI:MEM-REF ABSTOL-REF10944 :FLOAT) ABSTOL)
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF10945 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDZ-REF10948 :INT32) LDZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF10950 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10953 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10938 A)
                                            (W-REF10946 W)
                                            (Z-REF10947 Z)
                                            (WORK-REF10949 WORK)
                                            (IWORK-REF10951 IWORK)
                                            (IFAIL-REF10952 IFAIL))
      (%%SSYEVX JOBZ RANGE UPLO N-REF10937 A-REF10938 LDA-REF10939
       VL-REF10940 VU-REF10941 IL-REF10942 IU-REF10943 ABSTOL-REF10944
       M-REF10945 W-REF10946 Z-REF10947 LDZ-REF10948 WORK-REF10949
       LWORK-REF10950 IWORK-REF10951 IFAIL-REF10952 INFO-REF10953))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SGBRFS "sgbrfs_")
  ((TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (KL :FOREIGN-ADDRESS) (KU :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (AB :FOREIGN-ADDRESS)
   (LDAB :FOREIGN-ADDRESS) (AFB :FOREIGN-ADDRESS)
   (LDAFB :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (LDX :FOREIGN-ADDRESS) (FERR :FOREIGN-ADDRESS)
   (BERR :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (IWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SGBRFS
    (TRANS N KL KU NRHS AB LDAB AFB LDAFB IPIV B LDB X LDX FERR BERR
     WORK IWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SGBRFS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) AB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) AFB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAFB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) FERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) BERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10955 ':INT32)
                              (KL-REF10956 ':INT32)
                              (KU-REF10957 ':INT32)
                              (NRHS-REF10958 ':INT32)
                              (LDAB-REF10960 ':INT32)
                              (LDAFB-REF10962 ':INT32)
                              (LDB-REF10965 ':INT32)
                              (LDX-REF10967 ':INT32)
                              (INFO-REF10972 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10955 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KL-REF10956 :INT32) KL)
    (COMMON-LISP:SETF (CFFI:MEM-REF KU-REF10957 :INT32) KU)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF10958 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAB-REF10960 :INT32) LDAB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAFB-REF10962 :INT32) LDAFB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF10965 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX-REF10967 :INT32) LDX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10972 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AB-REF10959 AB)
                                            (AFB-REF10961 AFB)
                                            (IPIV-REF10963 IPIV)
                                            (B-REF10964 B)
                                            (X-REF10966 X)
                                            (FERR-REF10968 FERR)
                                            (BERR-REF10969 BERR)
                                            (WORK-REF10970 WORK)
                                            (IWORK-REF10971 IWORK))
      (%%SGBRFS TRANS N-REF10955 KL-REF10956 KU-REF10957 NRHS-REF10958
       AB-REF10959 LDAB-REF10960 AFB-REF10961 LDAFB-REF10962
       IPIV-REF10963 B-REF10964 LDB-REF10965 X-REF10966 LDX-REF10967
       FERR-REF10968 BERR-REF10969 WORK-REF10970 IWORK-REF10971
       INFO-REF10972))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CUNGLQ "cunglq_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CUNGLQ (M N K A LDA TAU WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CUNGLQ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF10973 ':INT32) (N-REF10974 ':INT32)
                              (K-REF10975 ':INT32)
                              (LDA-REF10977 ':INT32)
                              (LWORK-REF10980 ':INT32)
                              (INFO-REF10981 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF10973 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10974 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF10975 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10977 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF10980 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10981 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10976 A)
                                            (TAU-REF10978 TAU)
                                            (WORK-REF10979 WORK))
      (%%CUNGLQ M-REF10973 N-REF10974 K-REF10975 A-REF10976
       LDA-REF10977 TAU-REF10978 WORK-REF10979 LWORK-REF10980
       INFO-REF10981))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DLACON "dlacon_")
  ((N :FOREIGN-ADDRESS) (V :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (ISGN :FOREIGN-ADDRESS) (EST :FOREIGN-ADDRESS)
   (KASE :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DLACON (N V X ISGN EST KASE)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DLACON)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) V)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    ISGN)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT EST)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KASE))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10982 ':INT32)
                              (EST-REF10986 ':DOUBLE)
                              (KASE-REF10987 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10982 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF EST-REF10986 :DOUBLE) EST)
    (COMMON-LISP:SETF (CFFI:MEM-REF KASE-REF10987 :INT32) KASE)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((V-REF10983 V)
                                            (X-REF10984 X)
                                            (ISGN-REF10985 ISGN))
      (%%DLACON N-REF10982 V-REF10983 X-REF10984 ISGN-REF10985
       EST-REF10986 KASE-REF10987))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZGEQRF "zgeqrf_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZGEQRF (M N A LDA TAU WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGEQRF)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF10988 ':INT32) (N-REF10989 ':INT32)
                              (LDA-REF10991 ':INT32)
                              (LWORK-REF10994 ':INT32)
                              (INFO-REF10995 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF10988 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10989 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF10991 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF10994 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF10995 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF10990 A)
                                            (TAU-REF10992 TAU)
                                            (WORK-REF10993 WORK))
      (%%ZGEQRF M-REF10988 N-REF10989 A-REF10990 LDA-REF10991
       TAU-REF10992 WORK-REF10993 LWORK-REF10994 INFO-REF10995))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%STBTRS "stbtrs_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (KD :FOREIGN-ADDRESS) (NRHS :FOREIGN-ADDRESS) (AB :FOREIGN-ADDRESS)
   (LDAB :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %STBTRS
    (UPLO TRANS DIAG N KD NRHS AB LDAB B LDB INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STBTRS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KD)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) AB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF10999 ':INT32)
                              (KD-REF11000 ':INT32)
                              (NRHS-REF11001 ':INT32)
                              (LDAB-REF11003 ':INT32)
                              (LDB-REF11005 ':INT32)
                              (INFO-REF11006 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF10999 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KD-REF11000 :INT32) KD)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF11001 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAB-REF11003 :INT32) LDAB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF11005 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11006 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AB-REF11002 AB)
                                            (B-REF11004 B))
      (%%STBTRS UPLO TRANS DIAG N-REF10999 KD-REF11000 NRHS-REF11001
       AB-REF11002 LDAB-REF11003 B-REF11004 LDB-REF11005
       INFO-REF11006))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHEEVD_2STAGE "zheevd_2stage_")
  ((JOBZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (W :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (RWORK :FOREIGN-ADDRESS) (LRWORK :FOREIGN-ADDRESS)
   (IWORK :FOREIGN-ADDRESS) (LIWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHEEVD_2STAGE
    (JOBZ UPLO N A LDA W WORK LWORK RWORK LRWORK IWORK LIWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHEEVD_2STAGE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBZ)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) W)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LRWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LIWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11009 ':INT32)
                              (LDA-REF11011 ':INT32)
                              (LWORK-REF11014 ':INT32)
                              (LRWORK-REF11016 ':INT32)
                              (LIWORK-REF11018 ':INT32)
                              (INFO-REF11019 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11009 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11011 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11014 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF LRWORK-REF11016 :INT32) LRWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF LIWORK-REF11018 :INT32) LIWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11019 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11010 A)
                                            (W-REF11012 W)
                                            (WORK-REF11013 WORK)
                                            (RWORK-REF11015 RWORK)
                                            (IWORK-REF11017 IWORK))
      (%%ZHEEVD_2STAGE JOBZ UPLO N-REF11009 A-REF11010 LDA-REF11011
       W-REF11012 WORK-REF11013 LWORK-REF11014 RWORK-REF11015
       LRWORK-REF11016 IWORK-REF11017 LIWORK-REF11018 INFO-REF11019))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CTRTRI "ctrtri_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CTRTRI (UPLO DIAG N A LDA INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTRTRI)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11022 ':INT32)
                              (LDA-REF11024 ':INT32)
                              (INFO-REF11025 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11022 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11024 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11025 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11023 A))
      (%%CTRTRI UPLO DIAG N-REF11022 A-REF11023 LDA-REF11024
       INFO-REF11025))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DGEEQUB "dgeequb_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (R :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (ROWCND :FOREIGN-ADDRESS) (COLCND :FOREIGN-ADDRESS)
   (AMAX :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DGEEQUB (M N A LDA R C ROWCND COLCND AMAX INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGEEQUB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) R)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) C)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ROWCND)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT COLCND)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT AMAX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11026 ':INT32) (N-REF11027 ':INT32)
                              (LDA-REF11029 ':INT32)
                              (ROWCND-REF11032 ':DOUBLE)
                              (COLCND-REF11033 ':DOUBLE)
                              (AMAX-REF11034 ':DOUBLE)
                              (INFO-REF11035 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11026 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11027 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11029 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF ROWCND-REF11032 :DOUBLE) ROWCND)
    (COMMON-LISP:SETF (CFFI:MEM-REF COLCND-REF11033 :DOUBLE) COLCND)
    (COMMON-LISP:SETF (CFFI:MEM-REF AMAX-REF11034 :DOUBLE) AMAX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11035 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11028 A)
                                            (R-REF11030 R)
                                            (C-REF11031 C))
      (%%DGEEQUB M-REF11026 N-REF11027 A-REF11028 LDA-REF11029
       R-REF11030 C-REF11031 ROWCND-REF11032 COLCND-REF11033
       AMAX-REF11034 INFO-REF11035))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CUNMTR "cunmtr_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (LDC :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CUNMTR
    (SIDE UPLO TRANS M N A LDA TAU C LDC WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CUNMTR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11039 ':INT32) (N-REF11040 ':INT32)
                              (LDA-REF11042 ':INT32)
                              (LDC-REF11045 ':INT32)
                              (LWORK-REF11047 ':INT32)
                              (INFO-REF11048 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11039 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11040 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11042 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF11045 :INT32) LDC)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11047 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11048 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11041 A)
                                            (TAU-REF11043 TAU)
                                            (C-REF11044 C)
                                            (WORK-REF11046 WORK))
      (%%CUNMTR SIDE UPLO TRANS M-REF11039 N-REF11040 A-REF11041
       LDA-REF11042 TAU-REF11043 C-REF11044 LDC-REF11045 WORK-REF11046
       LWORK-REF11047 INFO-REF11048))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SPTCON "sptcon_")
  ((N :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS) (E :FOREIGN-ADDRESS)
   (ANORM :FOREIGN-ADDRESS) (RCOND :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SPTCON (N D E ANORM RCOND WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SPTCON)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) E)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ANORM)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT RCOND)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11049 ':INT32)
                              (ANORM-REF11052 ':FLOAT)
                              (RCOND-REF11053 ':FLOAT)
                              (INFO-REF11055 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11049 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ANORM-REF11052 :FLOAT) ANORM)
    (COMMON-LISP:SETF (CFFI:MEM-REF RCOND-REF11053 :FLOAT) RCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11055 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((D-REF11050 D)
                                            (E-REF11051 E)
                                            (WORK-REF11054 WORK))
      (%%SPTCON N-REF11049 D-REF11050 E-REF11051 ANORM-REF11052
       RCOND-REF11053 WORK-REF11054 INFO-REF11055))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZSTEGR "zstegr_")
  ((JOBZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (RANGE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS) (E :FOREIGN-ADDRESS)
   (VL :FOREIGN-ADDRESS) (VU :FOREIGN-ADDRESS) (IL :FOREIGN-ADDRESS)
   (IU :FOREIGN-ADDRESS) (ABSTOL :FOREIGN-ADDRESS) (M :FOREIGN-ADDRESS)
   (W :FOREIGN-ADDRESS) (Z :FOREIGN-ADDRESS) (LDZ :FOREIGN-ADDRESS)
   (ISUPPZ :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (IWORK :FOREIGN-ADDRESS)
   (LIWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZSTEGR
    (JOBZ RANGE N D E VL VU IL IU ABSTOL M W Z LDZ ISUPPZ WORK LWORK
     IWORK LIWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZSTEGR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBZ)
   (COMMON-LISP:TYPE COMMON-LISP:STRING RANGE)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) E)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT VL)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT VU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IU)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ABSTOL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) W)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDZ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    ISUPPZ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LIWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11058 ':INT32)
                              (VL-REF11061 ':DOUBLE)
                              (VU-REF11062 ':DOUBLE)
                              (IL-REF11063 ':INT32)
                              (IU-REF11064 ':INT32)
                              (ABSTOL-REF11065 ':DOUBLE)
                              (M-REF11066 ':INT32)
                              (LDZ-REF11069 ':INT32)
                              (LWORK-REF11072 ':INT32)
                              (LIWORK-REF11074 ':INT32)
                              (INFO-REF11075 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11058 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF VL-REF11061 :DOUBLE) VL)
    (COMMON-LISP:SETF (CFFI:MEM-REF VU-REF11062 :DOUBLE) VU)
    (COMMON-LISP:SETF (CFFI:MEM-REF IL-REF11063 :INT32) IL)
    (COMMON-LISP:SETF (CFFI:MEM-REF IU-REF11064 :INT32) IU)
    (COMMON-LISP:SETF (CFFI:MEM-REF ABSTOL-REF11065 :DOUBLE) ABSTOL)
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11066 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDZ-REF11069 :INT32) LDZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11072 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF LIWORK-REF11074 :INT32) LIWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11075 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((D-REF11059 D)
                                            (E-REF11060 E)
                                            (W-REF11067 W)
                                            (Z-REF11068 Z)
                                            (ISUPPZ-REF11070 ISUPPZ)
                                            (WORK-REF11071 WORK)
                                            (IWORK-REF11073 IWORK))
      (%%ZSTEGR JOBZ RANGE N-REF11058 D-REF11059 E-REF11060 VL-REF11061
       VU-REF11062 IL-REF11063 IU-REF11064 ABSTOL-REF11065 M-REF11066
       W-REF11067 Z-REF11068 LDZ-REF11069 ISUPPZ-REF11070 WORK-REF11071
       LWORK-REF11072 IWORK-REF11073 LIWORK-REF11074 INFO-REF11075))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZGGEV "zggev_")
  ((JOBVL (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (JOBVR (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (BETA :FOREIGN-ADDRESS) (VL :FOREIGN-ADDRESS)
   (LDVL :FOREIGN-ADDRESS) (VR :FOREIGN-ADDRESS)
   (LDVR :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (RWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZGGEV
    (JOBVL JOBVR N A LDA B LDB ALPHA BETA VL LDVL VR LDVR WORK LWORK
     RWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGGEV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBVL)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBVR)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    VL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDVL)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    VR)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDVR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11078 ':INT32)
                              (LDA-REF11080 ':INT32)
                              (LDB-REF11082 ':INT32)
                              (LDVL-REF11086 ':INT32)
                              (LDVR-REF11088 ':INT32)
                              (LWORK-REF11090 ':INT32)
                              (INFO-REF11092 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11078 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11080 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF11082 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDVL-REF11086 :INT32) LDVL)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDVR-REF11088 :INT32) LDVR)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11090 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11092 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11079 A)
                                            (B-REF11081 B)
                                            (ALPHA-REF11083 ALPHA)
                                            (BETA-REF11084 BETA)
                                            (VL-REF11085 VL)
                                            (VR-REF11087 VR)
                                            (WORK-REF11089 WORK)
                                            (RWORK-REF11091 RWORK))
      (%%ZGGEV JOBVL JOBVR N-REF11078 A-REF11079 LDA-REF11080
       B-REF11081 LDB-REF11082 ALPHA-REF11083 BETA-REF11084 VL-REF11085
       LDVL-REF11086 VR-REF11087 LDVR-REF11088 WORK-REF11089
       LWORK-REF11090 RWORK-REF11091 INFO-REF11092))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CGGQRF "cggqrf_")
  ((N :FOREIGN-ADDRESS) (M :FOREIGN-ADDRESS) (P :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (TAUA :FOREIGN-ADDRESS)
   (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS) (TAUB :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CGGQRF
    (N M P A LDA TAUA B LDB TAUB WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGGQRF)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) P)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    TAUA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    TAUB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11093 ':INT32) (M-REF11094 ':INT32)
                              (P-REF11095 ':INT32)
                              (LDA-REF11097 ':INT32)
                              (LDB-REF11100 ':INT32)
                              (LWORK-REF11103 ':INT32)
                              (INFO-REF11104 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11093 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11094 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF P-REF11095 :INT32) P)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11097 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF11100 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11103 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11104 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11096 A)
                                            (TAUA-REF11098 TAUA)
                                            (B-REF11099 B)
                                            (TAUB-REF11101 TAUB)
                                            (WORK-REF11102 WORK))
      (%%CGGQRF N-REF11093 M-REF11094 P-REF11095 A-REF11096
       LDA-REF11097 TAUA-REF11098 B-REF11099 LDB-REF11100 TAUB-REF11101
       WORK-REF11102 LWORK-REF11103 INFO-REF11104))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SSTEVD "sstevd_")
  ((JOBZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (D :FOREIGN-ADDRESS) (E :FOREIGN-ADDRESS) (Z :FOREIGN-ADDRESS)
   (LDZ :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (IWORK :FOREIGN-ADDRESS)
   (LIWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SSTEVD
    (JOBZ N D E Z LDZ WORK LWORK IWORK LIWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSTEVD)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBZ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) E)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDZ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LIWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11106 ':INT32)
                              (LDZ-REF11110 ':INT32)
                              (LWORK-REF11112 ':INT32)
                              (LIWORK-REF11114 ':INT32)
                              (INFO-REF11115 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11106 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDZ-REF11110 :INT32) LDZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11112 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF LIWORK-REF11114 :INT32) LIWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11115 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((D-REF11107 D)
                                            (E-REF11108 E)
                                            (Z-REF11109 Z)
                                            (WORK-REF11111 WORK)
                                            (IWORK-REF11113 IWORK))
      (%%SSTEVD JOBZ N-REF11106 D-REF11107 E-REF11108 Z-REF11109
       LDZ-REF11110 WORK-REF11111 LWORK-REF11112 IWORK-REF11113
       LIWORK-REF11114 INFO-REF11115))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CTPMQRT "ctpmqrt_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (L :FOREIGN-ADDRESS) (NB :FOREIGN-ADDRESS) (V :FOREIGN-ADDRESS)
   (LDV :FOREIGN-ADDRESS) (T :FOREIGN-ADDRESS) (LDT :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CTPMQRT
    (SIDE TRANS M N K L NB V LDV T LDT A LDA B LDB WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTPMQRT)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) L)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    V)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    T)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11118 ':INT32) (N-REF11119 ':INT32)
                              (K-REF11120 ':INT32) (L-REF11121 ':INT32)
                              (NB-REF11122 ':INT32)
                              (LDV-REF11124 ':INT32)
                              (LDT-REF11126 ':INT32)
                              (LDA-REF11128 ':INT32)
                              (LDB-REF11130 ':INT32)
                              (INFO-REF11132 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11118 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11119 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF11120 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF L-REF11121 :INT32) L)
    (COMMON-LISP:SETF (CFFI:MEM-REF NB-REF11122 :INT32) NB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDV-REF11124 :INT32) LDV)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDT-REF11126 :INT32) LDT)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11128 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF11130 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11132 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((V-REF11123 V)
                                            (T-REF11125 T)
                                            (A-REF11127 A)
                                            (B-REF11129 B)
                                            (WORK-REF11131 WORK))
      (%%CTPMQRT SIDE TRANS M-REF11118 N-REF11119 K-REF11120 L-REF11121
       NB-REF11122 V-REF11123 LDV-REF11124 T-REF11125 LDT-REF11126
       A-REF11127 LDA-REF11128 B-REF11129 LDB-REF11130 WORK-REF11131
       INFO-REF11132))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DPTCON "dptcon_")
  ((N :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS) (E :FOREIGN-ADDRESS)
   (ANORM :FOREIGN-ADDRESS) (RCOND :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DPTCON (N D E ANORM RCOND WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DPTCON)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) E)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ANORM)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT RCOND)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11133 ':INT32)
                              (ANORM-REF11136 ':DOUBLE)
                              (RCOND-REF11137 ':DOUBLE)
                              (INFO-REF11139 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11133 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ANORM-REF11136 :DOUBLE) ANORM)
    (COMMON-LISP:SETF (CFFI:MEM-REF RCOND-REF11137 :DOUBLE) RCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11139 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((D-REF11134 D)
                                            (E-REF11135 E)
                                            (WORK-REF11138 WORK))
      (%%DPTCON N-REF11133 D-REF11134 E-REF11135 ANORM-REF11136
       RCOND-REF11137 WORK-REF11138 INFO-REF11139))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CSYTF2 "csytf2_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CSYTF2 (UPLO N A LDA IPIV INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSYTF2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11141 ':INT32)
                              (LDA-REF11143 ':INT32)
                              (INFO-REF11145 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11141 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11143 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11145 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11142 A)
                                            (IPIV-REF11144 IPIV))
      (%%CSYTF2 UPLO N-REF11141 A-REF11142 LDA-REF11143 IPIV-REF11144
       INFO-REF11145))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CUNGBR "cungbr_")
  ((VECT (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CUNGBR (VECT M N K A LDA TAU WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CUNGBR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING VECT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11147 ':INT32) (N-REF11148 ':INT32)
                              (K-REF11149 ':INT32)
                              (LDA-REF11151 ':INT32)
                              (LWORK-REF11154 ':INT32)
                              (INFO-REF11155 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11147 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11148 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF11149 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11151 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11154 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11155 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11150 A)
                                            (TAU-REF11152 TAU)
                                            (WORK-REF11153 WORK))
      (%%CUNGBR VECT M-REF11147 N-REF11148 K-REF11149 A-REF11150
       LDA-REF11151 TAU-REF11152 WORK-REF11153 LWORK-REF11154
       INFO-REF11155))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SLACPY "slacpy_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SLACPY (UPLO M N A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SLACPY)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11157 ':INT32) (N-REF11158 ':INT32)
                              (LDA-REF11160 ':INT32)
                              (LDB-REF11162 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11157 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11158 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11160 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF11162 :INT32) LDB)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11159 A)
                                            (B-REF11161 B))
      (%%SLACPY UPLO M-REF11157 N-REF11158 A-REF11159 LDA-REF11160
       B-REF11161 LDB-REF11162))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DPOEQUB "dpoequb_")
  ((N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (S :FOREIGN-ADDRESS) (SCOND :FOREIGN-ADDRESS)
   (AMAX :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DPOEQUB (N A LDA S SCOND AMAX INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DPOEQUB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) S)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT SCOND)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT AMAX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11163 ':INT32)
                              (LDA-REF11165 ':INT32)
                              (SCOND-REF11167 ':DOUBLE)
                              (AMAX-REF11168 ':DOUBLE)
                              (INFO-REF11169 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11163 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11165 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF SCOND-REF11167 :DOUBLE) SCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF AMAX-REF11168 :DOUBLE) AMAX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11169 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11164 A)
                                            (S-REF11166 S))
      (%%DPOEQUB N-REF11163 A-REF11164 LDA-REF11165 S-REF11166
       SCOND-REF11167 AMAX-REF11168 INFO-REF11169))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CLASYF_AA "clasyf_aa_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (J1 :FOREIGN-ADDRESS) (M :FOREIGN-ADDRESS) (NB :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (H :FOREIGN-ADDRESS) (LDH :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CLASYF_AA (UPLO J1 M NB A LDA IPIV H LDH WORK)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CLASYF_AA)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) J1)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    H)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDH)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK))
  (CFFI:WITH-FOREIGN-OBJECTS ((J1-REF11171 ':INT32)
                              (M-REF11172 ':INT32)
                              (NB-REF11173 ':INT32)
                              (LDA-REF11175 ':INT32)
                              (LDH-REF11178 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF J1-REF11171 :INT32) J1)
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11172 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF NB-REF11173 :INT32) NB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11175 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDH-REF11178 :INT32) LDH)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11174 A)
                                            (IPIV-REF11176 IPIV)
                                            (H-REF11177 H)
                                            (WORK-REF11179 WORK))
      (%%CLASYF_AA UPLO J1-REF11171 M-REF11172 NB-REF11173 A-REF11174
       LDA-REF11175 IPIV-REF11176 H-REF11177 LDH-REF11178
       WORK-REF11179))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZUNGLQ "zunglq_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZUNGLQ (M N K A LDA TAU WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZUNGLQ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11180 ':INT32) (N-REF11181 ':INT32)
                              (K-REF11182 ':INT32)
                              (LDA-REF11184 ':INT32)
                              (LWORK-REF11187 ':INT32)
                              (INFO-REF11188 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11180 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11181 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF11182 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11184 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11187 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11188 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11183 A)
                                            (TAU-REF11185 TAU)
                                            (WORK-REF11186 WORK))
      (%%ZUNGLQ M-REF11180 N-REF11181 K-REF11182 A-REF11183
       LDA-REF11184 TAU-REF11185 WORK-REF11186 LWORK-REF11187
       INFO-REF11188))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SORGTSQR "sorgtsqr_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (MB :FOREIGN-ADDRESS)
   (NB :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (T :FOREIGN-ADDRESS) (LDT :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SORGTSQR (M N MB NB A LDA T LDT WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SORGTSQR)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) MB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) T)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11189 ':INT32) (N-REF11190 ':INT32)
                              (MB-REF11191 ':INT32)
                              (NB-REF11192 ':INT32)
                              (LDA-REF11194 ':INT32)
                              (LDT-REF11196 ':INT32)
                              (LWORK-REF11198 ':INT32)
                              (INFO-REF11199 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11189 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11190 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF MB-REF11191 :INT32) MB)
    (COMMON-LISP:SETF (CFFI:MEM-REF NB-REF11192 :INT32) NB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11194 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDT-REF11196 :INT32) LDT)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11198 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11199 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11193 A)
                                            (T-REF11195 T)
                                            (WORK-REF11197 WORK))
      (%%SORGTSQR M-REF11189 N-REF11190 MB-REF11191 NB-REF11192
       A-REF11193 LDA-REF11194 T-REF11195 LDT-REF11196 WORK-REF11197
       LWORK-REF11198 INFO-REF11199))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZUNMQR "zunmqr_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZUNMQR
    (SIDE TRANS M N K A LDA TAU C LDC WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZUNMQR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11202 ':INT32) (N-REF11203 ':INT32)
                              (K-REF11204 ':INT32)
                              (LDA-REF11206 ':INT32)
                              (LDC-REF11209 ':INT32)
                              (LWORK-REF11211 ':INT32)
                              (INFO-REF11212 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11202 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11203 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF11204 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11206 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF11209 :INT32) LDC)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11211 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11212 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11205 A)
                                            (TAU-REF11207 TAU)
                                            (C-REF11208 C)
                                            (WORK-REF11210 WORK))
      (%%ZUNMQR SIDE TRANS M-REF11202 N-REF11203 K-REF11204 A-REF11205
       LDA-REF11206 TAU-REF11207 C-REF11208 LDC-REF11209 WORK-REF11210
       LWORK-REF11211 INFO-REF11212))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZLACRT "zlacrt_")
  ((N :FOREIGN-ADDRESS) (CX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (CY :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (S :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZLACRT (N CX INCX CY INCY C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZLACRT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    CX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    CY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) C)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) S))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11213 ':INT32)
                              (INCX-REF11215 ':INT32)
                              (INCY-REF11217 ':INT32)
                              (C-REF11218
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (S-REF11219
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11213 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF11215 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF11217 :INT32) INCY)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              C-REF11218
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART C)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART C)))
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              S-REF11219
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART S)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART S)))
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF11214 CX)
                                            (CY-REF11216 CY))
      (%%ZLACRT N-REF11213 CX-REF11214 INCX-REF11215 CY-REF11216
       INCY-REF11217 C-REF11218 S-REF11219))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CHEEVD "cheevd_")
  ((JOBZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (W :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (RWORK :FOREIGN-ADDRESS) (LRWORK :FOREIGN-ADDRESS)
   (IWORK :FOREIGN-ADDRESS) (LIWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CHEEVD
    (JOBZ UPLO N A LDA W WORK LWORK RWORK LRWORK IWORK LIWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHEEVD)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBZ)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) W)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LRWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LIWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11222 ':INT32)
                              (LDA-REF11224 ':INT32)
                              (LWORK-REF11227 ':INT32)
                              (LRWORK-REF11229 ':INT32)
                              (LIWORK-REF11231 ':INT32)
                              (INFO-REF11232 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11222 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11224 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11227 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF LRWORK-REF11229 :INT32) LRWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF LIWORK-REF11231 :INT32) LIWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11232 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11223 A)
                                            (W-REF11225 W)
                                            (WORK-REF11226 WORK)
                                            (RWORK-REF11228 RWORK)
                                            (IWORK-REF11230 IWORK))
      (%%CHEEVD JOBZ UPLO N-REF11222 A-REF11223 LDA-REF11224 W-REF11225
       WORK-REF11226 LWORK-REF11227 RWORK-REF11228 LRWORK-REF11229
       IWORK-REF11230 LIWORK-REF11231 INFO-REF11232))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DTFTTR "dtfttr_")
  ((TRANSR (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ARF :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DTFTTR (TRANSR UPLO N ARF A LDA INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTFTTR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) ARF)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11235 ':INT32)
                              (LDA-REF11238 ':INT32)
                              (INFO-REF11239 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11235 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11238 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11239 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((ARF-REF11236 ARF)
                                            (A-REF11237 A))
      (%%DTFTTR TRANSR UPLO N-REF11235 ARF-REF11236 A-REF11237
       LDA-REF11238 INFO-REF11239))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHETF2_ROOK "zhetf2_rook_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHETF2_ROOK (UPLO N A LDA IPIV INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHETF2_ROOK)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11241 ':INT32)
                              (LDA-REF11243 ':INT32)
                              (INFO-REF11245 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11241 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11243 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11245 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11242 A)
                                            (IPIV-REF11244 IPIV))
      (%%ZHETF2_ROOK UPLO N-REF11241 A-REF11242 LDA-REF11243
       IPIV-REF11244 INFO-REF11245))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SLAQR1 "slaqr1_")
  ((N :FOREIGN-ADDRESS) (H :FOREIGN-ADDRESS) (LDH :FOREIGN-ADDRESS)
   (SR1 :FOREIGN-ADDRESS) (SI1 :FOREIGN-ADDRESS) (SR2 :FOREIGN-ADDRESS)
   (SI2 :FOREIGN-ADDRESS) (V :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SLAQR1 (N H LDH SR1 SI1 SR2 SI2 V)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SLAQR1)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) H)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDH)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SR1)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SI1)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SR2)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SI2)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) V))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11246 ':INT32)
                              (LDH-REF11248 ':INT32)
                              (SR1-REF11249 ':FLOAT)
                              (SI1-REF11250 ':FLOAT)
                              (SR2-REF11251 ':FLOAT)
                              (SI2-REF11252 ':FLOAT))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11246 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDH-REF11248 :INT32) LDH)
    (COMMON-LISP:SETF (CFFI:MEM-REF SR1-REF11249 :FLOAT) SR1)
    (COMMON-LISP:SETF (CFFI:MEM-REF SI1-REF11250 :FLOAT) SI1)
    (COMMON-LISP:SETF (CFFI:MEM-REF SR2-REF11251 :FLOAT) SR2)
    (COMMON-LISP:SETF (CFFI:MEM-REF SI2-REF11252 :FLOAT) SI2)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((H-REF11247 H)
                                            (V-REF11253 V))
      (%%SLAQR1 N-REF11246 H-REF11247 LDH-REF11248 SR1-REF11249
       SI1-REF11250 SR2-REF11251 SI2-REF11252 V-REF11253))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SBDSDC "sbdsdc_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (COMPQ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS) (E :FOREIGN-ADDRESS)
   (U :FOREIGN-ADDRESS) (LDU :FOREIGN-ADDRESS) (VT :FOREIGN-ADDRESS)
   (LDVT :FOREIGN-ADDRESS) (Q :FOREIGN-ADDRESS) (IQ :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (IWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SBDSDC
    (UPLO COMPQ N D E U LDU VT LDVT Q IQ WORK IWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SBDSDC)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING COMPQ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) E)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) U)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) VT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDVT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Q)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IQ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11256 ':INT32)
                              (LDU-REF11260 ':INT32)
                              (LDVT-REF11262 ':INT32)
                              (INFO-REF11267 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11256 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDU-REF11260 :INT32) LDU)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDVT-REF11262 :INT32) LDVT)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11267 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((D-REF11257 D)
                                            (E-REF11258 E)
                                            (U-REF11259 U)
                                            (VT-REF11261 VT)
                                            (Q-REF11263 Q)
                                            (IQ-REF11264 IQ)
                                            (WORK-REF11265 WORK)
                                            (IWORK-REF11266 IWORK))
      (%%SBDSDC UPLO COMPQ N-REF11256 D-REF11257 E-REF11258 U-REF11259
       LDU-REF11260 VT-REF11261 LDVT-REF11262 Q-REF11263 IQ-REF11264
       WORK-REF11265 IWORK-REF11266 INFO-REF11267))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DGETSLS "dgetsls_")
  ((TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (NRHS :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DGETSLS
    (TRANS M N NRHS A LDA B LDB WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGETSLS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11269 ':INT32) (N-REF11270 ':INT32)
                              (NRHS-REF11271 ':INT32)
                              (LDA-REF11273 ':INT32)
                              (LDB-REF11275 ':INT32)
                              (LWORK-REF11277 ':INT32)
                              (INFO-REF11278 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11269 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11270 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF11271 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11273 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF11275 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11277 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11278 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11272 A)
                                            (B-REF11274 B)
                                            (WORK-REF11276 WORK))
      (%%DGETSLS TRANS M-REF11269 N-REF11270 NRHS-REF11271 A-REF11272
       LDA-REF11273 B-REF11274 LDB-REF11275 WORK-REF11276
       LWORK-REF11277 INFO-REF11278))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DLASYF_AA "dlasyf_aa_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (J1 :FOREIGN-ADDRESS) (M :FOREIGN-ADDRESS) (NB :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (H :FOREIGN-ADDRESS) (LDH :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DLASYF_AA (UPLO J1 M NB A LDA IPIV H LDH WORK)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DLASYF_AA)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) J1)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) H)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDH)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK))
  (CFFI:WITH-FOREIGN-OBJECTS ((J1-REF11280 ':INT32)
                              (M-REF11281 ':INT32)
                              (NB-REF11282 ':INT32)
                              (LDA-REF11284 ':INT32)
                              (LDH-REF11287 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF J1-REF11280 :INT32) J1)
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11281 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF NB-REF11282 :INT32) NB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11284 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDH-REF11287 :INT32) LDH)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11283 A)
                                            (IPIV-REF11285 IPIV)
                                            (H-REF11286 H)
                                            (WORK-REF11288 WORK))
      (%%DLASYF_AA UPLO J1-REF11280 M-REF11281 NB-REF11282 A-REF11283
       LDA-REF11284 IPIV-REF11285 H-REF11286 LDH-REF11287
       WORK-REF11288))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DSGESV "dsgesv_")
  ((N :FOREIGN-ADDRESS) (NRHS :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (LDX :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (SWORK :FOREIGN-ADDRESS)
   (ITER :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSGESV
    (N NRHS A LDA IPIV B LDB X LDX WORK SWORK ITER INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSGESV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ITER)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11289 ':INT32)
                              (NRHS-REF11290 ':INT32)
                              (LDA-REF11292 ':INT32)
                              (LDB-REF11295 ':INT32)
                              (LDX-REF11297 ':INT32)
                              (ITER-REF11300 ':INT32)
                              (INFO-REF11301 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11289 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF11290 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11292 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF11295 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX-REF11297 :INT32) LDX)
    (COMMON-LISP:SETF (CFFI:MEM-REF ITER-REF11300 :INT32) ITER)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11301 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11291 A)
                                            (IPIV-REF11293 IPIV)
                                            (B-REF11294 B)
                                            (X-REF11296 X)
                                            (WORK-REF11298 WORK)
                                            (SWORK-REF11299 SWORK))
      (%%DSGESV N-REF11289 NRHS-REF11290 A-REF11291 LDA-REF11292
       IPIV-REF11293 B-REF11294 LDB-REF11295 X-REF11296 LDX-REF11297
       WORK-REF11298 SWORK-REF11299 ITER-REF11300 INFO-REF11301))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZGESVD "zgesvd_")
  ((JOBU (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (JOBVT (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (S :FOREIGN-ADDRESS) (U :FOREIGN-ADDRESS)
   (LDU :FOREIGN-ADDRESS) (VT :FOREIGN-ADDRESS) (LDVT :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (RWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZGESVD
    (JOBU JOBVT M N A LDA S U LDU VT LDVT WORK LWORK RWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGESVD)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBU)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBVT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) S)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    U)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    VT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDVT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11304 ':INT32) (N-REF11305 ':INT32)
                              (LDA-REF11307 ':INT32)
                              (LDU-REF11310 ':INT32)
                              (LDVT-REF11312 ':INT32)
                              (LWORK-REF11314 ':INT32)
                              (INFO-REF11316 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11304 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11305 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11307 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDU-REF11310 :INT32) LDU)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDVT-REF11312 :INT32) LDVT)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11314 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11316 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11306 A)
                                            (S-REF11308 S)
                                            (U-REF11309 U)
                                            (VT-REF11311 VT)
                                            (WORK-REF11313 WORK)
                                            (RWORK-REF11315 RWORK))
      (%%ZGESVD JOBU JOBVT M-REF11304 N-REF11305 A-REF11306
       LDA-REF11307 S-REF11308 U-REF11309 LDU-REF11310 VT-REF11311
       LDVT-REF11312 WORK-REF11313 LWORK-REF11314 RWORK-REF11315
       INFO-REF11316))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SLARRB "slarrb_")
  ((N :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS) (LLD :FOREIGN-ADDRESS)
   (IFIRST :FOREIGN-ADDRESS) (ILAST :FOREIGN-ADDRESS)
   (RTOL1 :FOREIGN-ADDRESS) (RTOL2 :FOREIGN-ADDRESS)
   (OFFSET :FOREIGN-ADDRESS) (W :FOREIGN-ADDRESS)
   (WGAP :FOREIGN-ADDRESS) (WERR :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (IWORK :FOREIGN-ADDRESS)
   (PIVMIN :FOREIGN-ADDRESS) (SPDIAM :FOREIGN-ADDRESS)
   (TWIST :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SLARRB
    (N D LLD IFIRST ILAST RTOL1 RTOL2 OFFSET W WGAP WERR WORK IWORK
     PIVMIN SPDIAM TWIST INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SLARRB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) LLD)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IFIRST)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ILAST)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT RTOL1)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT RTOL2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) OFFSET)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) W)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WGAP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT PIVMIN)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SPDIAM)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) TWIST)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11317 ':INT32)
                              (IFIRST-REF11320 ':INT32)
                              (ILAST-REF11321 ':INT32)
                              (RTOL1-REF11322 ':FLOAT)
                              (RTOL2-REF11323 ':FLOAT)
                              (OFFSET-REF11324 ':INT32)
                              (PIVMIN-REF11330 ':FLOAT)
                              (SPDIAM-REF11331 ':FLOAT)
                              (TWIST-REF11332 ':INT32)
                              (INFO-REF11333 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11317 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF IFIRST-REF11320 :INT32) IFIRST)
    (COMMON-LISP:SETF (CFFI:MEM-REF ILAST-REF11321 :INT32) ILAST)
    (COMMON-LISP:SETF (CFFI:MEM-REF RTOL1-REF11322 :FLOAT) RTOL1)
    (COMMON-LISP:SETF (CFFI:MEM-REF RTOL2-REF11323 :FLOAT) RTOL2)
    (COMMON-LISP:SETF (CFFI:MEM-REF OFFSET-REF11324 :INT32) OFFSET)
    (COMMON-LISP:SETF (CFFI:MEM-REF PIVMIN-REF11330 :FLOAT) PIVMIN)
    (COMMON-LISP:SETF (CFFI:MEM-REF SPDIAM-REF11331 :FLOAT) SPDIAM)
    (COMMON-LISP:SETF (CFFI:MEM-REF TWIST-REF11332 :INT32) TWIST)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11333 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((D-REF11318 D)
                                            (LLD-REF11319 LLD)
                                            (W-REF11325 W)
                                            (WGAP-REF11326 WGAP)
                                            (WERR-REF11327 WERR)
                                            (WORK-REF11328 WORK)
                                            (IWORK-REF11329 IWORK))
      (%%SLARRB N-REF11317 D-REF11318 LLD-REF11319 IFIRST-REF11320
       ILAST-REF11321 RTOL1-REF11322 RTOL2-REF11323 OFFSET-REF11324
       W-REF11325 WGAP-REF11326 WERR-REF11327 WORK-REF11328
       IWORK-REF11329 PIVMIN-REF11330 SPDIAM-REF11331 TWIST-REF11332
       INFO-REF11333))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CGEQL2 "cgeql2_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CGEQL2 (M N A LDA TAU WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGEQL2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11334 ':INT32) (N-REF11335 ':INT32)
                              (LDA-REF11337 ':INT32)
                              (INFO-REF11340 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11334 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11335 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11337 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11340 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11336 A)
                                            (TAU-REF11338 TAU)
                                            (WORK-REF11339 WORK))
      (%%CGEQL2 M-REF11334 N-REF11335 A-REF11336 LDA-REF11337
       TAU-REF11338 WORK-REF11339 INFO-REF11340))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZPORFS "zporfs_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (AF :FOREIGN-ADDRESS) (LDAF :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (LDX :FOREIGN-ADDRESS)
   (FERR :FOREIGN-ADDRESS) (BERR :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (RWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZPORFS
    (UPLO N NRHS A LDA AF LDAF B LDB X LDX FERR BERR WORK RWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZPORFS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AF)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAF)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) FERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) BERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11342 ':INT32)
                              (NRHS-REF11343 ':INT32)
                              (LDA-REF11345 ':INT32)
                              (LDAF-REF11347 ':INT32)
                              (LDB-REF11349 ':INT32)
                              (LDX-REF11351 ':INT32)
                              (INFO-REF11356 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11342 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF11343 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11345 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAF-REF11347 :INT32) LDAF)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF11349 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX-REF11351 :INT32) LDX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11356 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11344 A)
                                            (AF-REF11346 AF)
                                            (B-REF11348 B)
                                            (X-REF11350 X)
                                            (FERR-REF11352 FERR)
                                            (BERR-REF11353 BERR)
                                            (WORK-REF11354 WORK)
                                            (RWORK-REF11355 RWORK))
      (%%ZPORFS UPLO N-REF11342 NRHS-REF11343 A-REF11344 LDA-REF11345
       AF-REF11346 LDAF-REF11347 B-REF11348 LDB-REF11349 X-REF11350
       LDX-REF11351 FERR-REF11352 BERR-REF11353 WORK-REF11354
       RWORK-REF11355 INFO-REF11356))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZGETF2 "zgetf2_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZGETF2 (M N A LDA IPIV INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGETF2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11357 ':INT32) (N-REF11358 ':INT32)
                              (LDA-REF11360 ':INT32)
                              (INFO-REF11362 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11357 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11358 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11360 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11362 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11359 A)
                                            (IPIV-REF11361 IPIV))
      (%%ZGETF2 M-REF11357 N-REF11358 A-REF11359 LDA-REF11360
       IPIV-REF11361 INFO-REF11362))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZGERQ2 "zgerq2_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZGERQ2 (M N A LDA TAU WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGERQ2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11363 ':INT32) (N-REF11364 ':INT32)
                              (LDA-REF11366 ':INT32)
                              (INFO-REF11369 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11363 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11364 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11366 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11369 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11365 A)
                                            (TAU-REF11367 TAU)
                                            (WORK-REF11368 WORK))
      (%%ZGERQ2 M-REF11363 N-REF11364 A-REF11365 LDA-REF11366
       TAU-REF11367 WORK-REF11368 INFO-REF11369))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CLA_GERCOND_C "cla_gercond_c_")
  ((TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (AF :FOREIGN-ADDRESS) (LDAF :FOREIGN-ADDRESS)
   (IPIV :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (CAPPLY :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (RWORK :FOREIGN-ADDRESS))
  :RETURNING (:FLOAT COMMON-LISP:SINGLE-FLOAT) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CLA_GERCOND_C
    (TRANS N A LDA AF LDAF IPIV C CAPPLY INFO WORK RWORK)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CLA_GERCOND_C)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    AF)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAF)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) CAPPLY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) RWORK))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11371 ':INT32)
                              (LDA-REF11373 ':INT32)
                              (LDAF-REF11375 ':INT32)
                              (CAPPLY-REF11378 ':INT32)
                              (INFO-REF11379 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11371 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11373 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAF-REF11375 :INT32) LDAF)
    (COMMON-LISP:SETF (CFFI:MEM-REF CAPPLY-REF11378 :INT32) CAPPLY)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11379 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11372 A)
                                            (AF-REF11374 AF)
                                            (IPIV-REF11376 IPIV)
                                            (C-REF11377 C)
                                            (WORK-REF11380 WORK)
                                            (RWORK-REF11381 RWORK))
      (%%CLA_GERCOND_C TRANS N-REF11371 A-REF11372 LDA-REF11373
       AF-REF11374 LDAF-REF11375 IPIV-REF11376 C-REF11377
       CAPPLY-REF11378 INFO-REF11379 WORK-REF11380 RWORK-REF11381))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DLARTG "dlartg_")
  ((F :FOREIGN-ADDRESS) (G :FOREIGN-ADDRESS) (CS :FOREIGN-ADDRESS)
   (SN :FOREIGN-ADDRESS) (R :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DLARTG (F G CS SN R)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DLARTG)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT F)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT G)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT CS)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT SN)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT R))
  (CFFI:WITH-FOREIGN-OBJECTS ((F-REF11382 ':DOUBLE)
                              (G-REF11383 ':DOUBLE)
                              (CS-REF11384 ':DOUBLE)
                              (SN-REF11385 ':DOUBLE)
                              (R-REF11386 ':DOUBLE))
    (COMMON-LISP:SETF (CFFI:MEM-REF F-REF11382 :DOUBLE) F)
    (COMMON-LISP:SETF (CFFI:MEM-REF G-REF11383 :DOUBLE) G)
    (COMMON-LISP:SETF (CFFI:MEM-REF CS-REF11384 :DOUBLE) CS)
    (COMMON-LISP:SETF (CFFI:MEM-REF SN-REF11385 :DOUBLE) SN)
    (COMMON-LISP:SETF (CFFI:MEM-REF R-REF11386 :DOUBLE) R)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%DLARTG F-REF11382 G-REF11383 CS-REF11384 SN-REF11385
       R-REF11386))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL
  (%%DSB2ST_KERNELS "dsb2st_kernels_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (WANTZ :FOREIGN-ADDRESS) (TTYPE :FOREIGN-ADDRESS)
   (ST :FOREIGN-ADDRESS) (ED :FOREIGN-ADDRESS) (SWEEP :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (NB :FOREIGN-ADDRESS) (IB :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (V :FOREIGN-ADDRESS)
   (TAU :FOREIGN-ADDRESS) (LDVT :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSB2ST_KERNELS
    (UPLO WANTZ TTYPE ST ED SWEEP N NB IB A LDA V TAU LDVT WORK)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSB2ST_KERNELS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) WANTZ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) TTYPE)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ST)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ED)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) SWEEP)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) V)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) TAU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDVT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK))
  (CFFI:WITH-FOREIGN-OBJECTS ((WANTZ-REF11388 ':INT32)
                              (TTYPE-REF11389 ':INT32)
                              (ST-REF11390 ':INT32)
                              (ED-REF11391 ':INT32)
                              (SWEEP-REF11392 ':INT32)
                              (N-REF11393 ':INT32)
                              (NB-REF11394 ':INT32)
                              (IB-REF11395 ':INT32)
                              (LDA-REF11397 ':INT32)
                              (LDVT-REF11400 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF WANTZ-REF11388 :INT32) WANTZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF TTYPE-REF11389 :INT32) TTYPE)
    (COMMON-LISP:SETF (CFFI:MEM-REF ST-REF11390 :INT32) ST)
    (COMMON-LISP:SETF (CFFI:MEM-REF ED-REF11391 :INT32) ED)
    (COMMON-LISP:SETF (CFFI:MEM-REF SWEEP-REF11392 :INT32) SWEEP)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11393 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NB-REF11394 :INT32) NB)
    (COMMON-LISP:SETF (CFFI:MEM-REF IB-REF11395 :INT32) IB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11397 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDVT-REF11400 :INT32) LDVT)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11396 A)
                                            (V-REF11398 V)
                                            (TAU-REF11399 TAU)
                                            (WORK-REF11401 WORK))
      (%%DSB2ST_KERNELS UPLO WANTZ-REF11388 TTYPE-REF11389 ST-REF11390
       ED-REF11391 SWEEP-REF11392 N-REF11393 NB-REF11394 IB-REF11395
       A-REF11396 LDA-REF11397 V-REF11398 TAU-REF11399 LDVT-REF11400
       WORK-REF11401))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZLAQSB "zlaqsb_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (KD :FOREIGN-ADDRESS) (AB :FOREIGN-ADDRESS) (LDAB :FOREIGN-ADDRESS)
   (S :FOREIGN-ADDRESS) (SCOND :FOREIGN-ADDRESS)
   (AMAX :FOREIGN-ADDRESS)
   (EQUED (COMMON-LISP:* :CHAR) COMMON-LISP:STRING))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZLAQSB (UPLO N KD AB LDAB S SCOND AMAX EQUED)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZLAQSB)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KD)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) S)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT SCOND)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT AMAX)
   (COMMON-LISP:TYPE COMMON-LISP:STRING EQUED))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11403 ':INT32)
                              (KD-REF11404 ':INT32)
                              (LDAB-REF11406 ':INT32)
                              (SCOND-REF11408 ':DOUBLE)
                              (AMAX-REF11409 ':DOUBLE))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11403 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KD-REF11404 :INT32) KD)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAB-REF11406 :INT32) LDAB)
    (COMMON-LISP:SETF (CFFI:MEM-REF SCOND-REF11408 :DOUBLE) SCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF AMAX-REF11409 :DOUBLE) AMAX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AB-REF11405 AB)
                                            (S-REF11407 S))
      (%%ZLAQSB UPLO N-REF11403 KD-REF11404 AB-REF11405 LDAB-REF11406
       S-REF11407 SCOND-REF11408 AMAX-REF11409 EQUED))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CLAED8 "claed8_")
  ((K :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (QSIZ :FOREIGN-ADDRESS)
   (Q :FOREIGN-ADDRESS) (LDQ :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS)
   (RHO :FOREIGN-ADDRESS) (CUTPNT :FOREIGN-ADDRESS)
   (Z :FOREIGN-ADDRESS) (DLAMDA :FOREIGN-ADDRESS) (Q2 :FOREIGN-ADDRESS)
   (LDQ2 :FOREIGN-ADDRESS) (W :FOREIGN-ADDRESS)
   (INDXP :FOREIGN-ADDRESS) (INDX :FOREIGN-ADDRESS)
   (INDXQ :FOREIGN-ADDRESS) (PERM :FOREIGN-ADDRESS)
   (GIVPTR :FOREIGN-ADDRESS) (GIVCOL :FOREIGN-ADDRESS)
   (GIVNUM :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CLAED8
    (K N QSIZ Q LDQ D RHO CUTPNT Z DLAMDA Q2 LDQ2 W INDXP INDX INDXQ
     PERM GIVPTR GIVCOL GIVNUM INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CLAED8)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) QSIZ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Q)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDQ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) D)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT RHO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) CUTPNT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Z)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) DLAMDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Q2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDQ2)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) W)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    INDXP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    INDX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    INDXQ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    PERM)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) GIVPTR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    GIVCOL)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) GIVNUM)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((K-REF11411 ':INT32) (N-REF11412 ':INT32)
                              (QSIZ-REF11413 ':INT32)
                              (LDQ-REF11415 ':INT32)
                              (RHO-REF11417 ':FLOAT)
                              (CUTPNT-REF11418 ':INT32)
                              (LDQ2-REF11422 ':INT32)
                              (GIVPTR-REF11428 ':INT32)
                              (INFO-REF11431 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF11411 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11412 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF QSIZ-REF11413 :INT32) QSIZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDQ-REF11415 :INT32) LDQ)
    (COMMON-LISP:SETF (CFFI:MEM-REF RHO-REF11417 :FLOAT) RHO)
    (COMMON-LISP:SETF (CFFI:MEM-REF CUTPNT-REF11418 :INT32) CUTPNT)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDQ2-REF11422 :INT32) LDQ2)
    (COMMON-LISP:SETF (CFFI:MEM-REF GIVPTR-REF11428 :INT32) GIVPTR)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11431 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((Q-REF11414 Q)
                                            (D-REF11416 D)
                                            (Z-REF11419 Z)
                                            (DLAMDA-REF11420 DLAMDA)
                                            (Q2-REF11421 Q2)
                                            (W-REF11423 W)
                                            (INDXP-REF11424 INDXP)
                                            (INDX-REF11425 INDX)
                                            (INDXQ-REF11426 INDXQ)
                                            (PERM-REF11427 PERM)
                                            (GIVCOL-REF11429 GIVCOL)
                                            (GIVNUM-REF11430 GIVNUM))
      (%%CLAED8 K-REF11411 N-REF11412 QSIZ-REF11413 Q-REF11414
       LDQ-REF11415 D-REF11416 RHO-REF11417 CUTPNT-REF11418 Z-REF11419
       DLAMDA-REF11420 Q2-REF11421 LDQ2-REF11422 W-REF11423
       INDXP-REF11424 INDX-REF11425 INDXQ-REF11426 PERM-REF11427
       GIVPTR-REF11428 GIVCOL-REF11429 GIVNUM-REF11430 INFO-REF11431))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CSYSV "csysv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (IPIV :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CSYSV
    (UPLO N NRHS A LDA IPIV B LDB WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSYSV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11433 ':INT32)
                              (NRHS-REF11434 ':INT32)
                              (LDA-REF11436 ':INT32)
                              (LDB-REF11439 ':INT32)
                              (LWORK-REF11441 ':INT32)
                              (INFO-REF11442 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11433 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF11434 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11436 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF11439 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11441 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11442 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11435 A)
                                            (IPIV-REF11437 IPIV)
                                            (B-REF11438 B)
                                            (WORK-REF11440 WORK))
      (%%CSYSV UPLO N-REF11433 NRHS-REF11434 A-REF11435 LDA-REF11436
       IPIV-REF11437 B-REF11438 LDB-REF11439 WORK-REF11440
       LWORK-REF11441 INFO-REF11442))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CPSTRF "cpstrf_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (PIV :FOREIGN-ADDRESS)
   (RANK :FOREIGN-ADDRESS) (TOL :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CPSTRF (UPLO N A LDA PIV RANK TOL WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CPSTRF)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    PIV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) RANK)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT TOL)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11444 ':INT32)
                              (LDA-REF11446 ':INT32)
                              (RANK-REF11448 ':INT32)
                              (TOL-REF11449 ':FLOAT)
                              (INFO-REF11451 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11444 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11446 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF RANK-REF11448 :INT32) RANK)
    (COMMON-LISP:SETF (CFFI:MEM-REF TOL-REF11449 :FLOAT) TOL)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11451 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11445 A)
                                            (PIV-REF11447 PIV)
                                            (WORK-REF11450 WORK))
      (%%CPSTRF UPLO N-REF11444 A-REF11445 LDA-REF11446 PIV-REF11447
       RANK-REF11448 TOL-REF11449 WORK-REF11450 INFO-REF11451))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZGEES "zgees_")
  ((JOBVS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (SORT (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (SELECT :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (SDIM :FOREIGN-ADDRESS) (W :FOREIGN-ADDRESS)
   (VS :FOREIGN-ADDRESS) (LDVS :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (RWORK :FOREIGN-ADDRESS) (BWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZGEES
    (JOBVS SORT SELECT N A LDA SDIM W VS LDVS WORK LWORK RWORK BWORK
     INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGEES)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBVS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SORT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) SELECT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) SDIM)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    W)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    VS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDVS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    BWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((SELECT-REF11454 ':INT32)
                              (N-REF11455 ':INT32)
                              (LDA-REF11457 ':INT32)
                              (SDIM-REF11458 ':INT32)
                              (LDVS-REF11461 ':INT32)
                              (LWORK-REF11463 ':INT32)
                              (INFO-REF11466 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF SELECT-REF11454 :INT32) SELECT)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11455 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11457 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF SDIM-REF11458 :INT32) SDIM)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDVS-REF11461 :INT32) LDVS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11463 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11466 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11456 A)
                                            (W-REF11459 W)
                                            (VS-REF11460 VS)
                                            (WORK-REF11462 WORK)
                                            (RWORK-REF11464 RWORK)
                                            (BWORK-REF11465 BWORK))
      (%%ZGEES JOBVS SORT SELECT-REF11454 N-REF11455 A-REF11456
       LDA-REF11457 SDIM-REF11458 W-REF11459 VS-REF11460 LDVS-REF11461
       WORK-REF11462 LWORK-REF11463 RWORK-REF11464 BWORK-REF11465
       INFO-REF11466))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZGEHD2 "zgehd2_")
  ((N :FOREIGN-ADDRESS) (ILO :FOREIGN-ADDRESS) (IHI :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZGEHD2 (N ILO IHI A LDA TAU WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGEHD2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ILO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IHI)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11467 ':INT32)
                              (ILO-REF11468 ':INT32)
                              (IHI-REF11469 ':INT32)
                              (LDA-REF11471 ':INT32)
                              (INFO-REF11474 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11467 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ILO-REF11468 :INT32) ILO)
    (COMMON-LISP:SETF (CFFI:MEM-REF IHI-REF11469 :INT32) IHI)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11471 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11474 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11470 A)
                                            (TAU-REF11472 TAU)
                                            (WORK-REF11473 WORK))
      (%%ZGEHD2 N-REF11467 ILO-REF11468 IHI-REF11469 A-REF11470
       LDA-REF11471 TAU-REF11472 WORK-REF11473 INFO-REF11474))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CHETRI2X "chetri2x_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (NB :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CHETRI2X (UPLO N A LDA IPIV WORK NB INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHETRI2X)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11476 ':INT32)
                              (LDA-REF11478 ':INT32)
                              (NB-REF11481 ':INT32)
                              (INFO-REF11482 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11476 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11478 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF NB-REF11481 :INT32) NB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11482 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11477 A)
                                            (IPIV-REF11479 IPIV)
                                            (WORK-REF11480 WORK))
      (%%CHETRI2X UPLO N-REF11476 A-REF11477 LDA-REF11478 IPIV-REF11479
       WORK-REF11480 NB-REF11481 INFO-REF11482))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DPOEQU "dpoequ_")
  ((N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (S :FOREIGN-ADDRESS) (SCOND :FOREIGN-ADDRESS)
   (AMAX :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DPOEQU (N A LDA S SCOND AMAX INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DPOEQU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) S)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT SCOND)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT AMAX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11483 ':INT32)
                              (LDA-REF11485 ':INT32)
                              (SCOND-REF11487 ':DOUBLE)
                              (AMAX-REF11488 ':DOUBLE)
                              (INFO-REF11489 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11483 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11485 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF SCOND-REF11487 :DOUBLE) SCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF AMAX-REF11488 :DOUBLE) AMAX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11489 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11484 A)
                                            (S-REF11486 S))
      (%%DPOEQU N-REF11483 A-REF11484 LDA-REF11485 S-REF11486
       SCOND-REF11487 AMAX-REF11488 INFO-REF11489))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZLAPMT "zlapmt_")
  ((FORWRD :FOREIGN-ADDRESS) (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (LDX :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZLAPMT (FORWRD M N X LDX K)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZLAPMT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) FORWRD)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    K))
  (CFFI:WITH-FOREIGN-OBJECTS ((FORWRD-REF11490 ':INT32)
                              (M-REF11491 ':INT32) (N-REF11492 ':INT32)
                              (LDX-REF11494 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF FORWRD-REF11490 :INT32) FORWRD)
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11491 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11492 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX-REF11494 :INT32) LDX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF11493 X)
                                            (K-REF11495 K))
      (%%ZLAPMT FORWRD-REF11490 M-REF11491 N-REF11492 X-REF11493
       LDX-REF11494 K-REF11495))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DSPGVD "dspgvd_")
  ((ITYPE :FOREIGN-ADDRESS)
   (JOBZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (AP :FOREIGN-ADDRESS) (BP :FOREIGN-ADDRESS) (W :FOREIGN-ADDRESS)
   (Z :FOREIGN-ADDRESS) (LDZ :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (IWORK :FOREIGN-ADDRESS)
   (LIWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSPGVD
    (ITYPE JOBZ UPLO N AP BP W Z LDZ WORK LWORK IWORK LIWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSPGVD)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ITYPE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBZ)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) BP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) W)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDZ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LIWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((ITYPE-REF11496 ':INT32)
                              (N-REF11499 ':INT32)
                              (LDZ-REF11504 ':INT32)
                              (LWORK-REF11506 ':INT32)
                              (LIWORK-REF11508 ':INT32)
                              (INFO-REF11509 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF ITYPE-REF11496 :INT32) ITYPE)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11499 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDZ-REF11504 :INT32) LDZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11506 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF LIWORK-REF11508 :INT32) LIWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11509 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF11500 AP)
                                            (BP-REF11501 BP)
                                            (W-REF11502 W)
                                            (Z-REF11503 Z)
                                            (WORK-REF11505 WORK)
                                            (IWORK-REF11507 IWORK))
      (%%DSPGVD ITYPE-REF11496 JOBZ UPLO N-REF11499 AP-REF11500
       BP-REF11501 W-REF11502 Z-REF11503 LDZ-REF11504 WORK-REF11505
       LWORK-REF11506 IWORK-REF11507 LIWORK-REF11508 INFO-REF11509))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DLAPLL "dlapll_")
  ((N :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (Y :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS)
   (SSMIN :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DLAPLL (N X INCX Y INCY SSMIN)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DLAPLL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT SSMIN))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11510 ':INT32)
                              (INCX-REF11512 ':INT32)
                              (INCY-REF11514 ':INT32)
                              (SSMIN-REF11515 ':DOUBLE))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11510 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF11512 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF11514 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF SSMIN-REF11515 :DOUBLE) SSMIN)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF11511 X)
                                            (Y-REF11513 Y))
      (%%DLAPLL N-REF11510 X-REF11511 INCX-REF11512 Y-REF11513
       INCY-REF11514 SSMIN-REF11515))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DPOTRF2 "dpotrf2_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DPOTRF2 (UPLO N A LDA INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DPOTRF2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11517 ':INT32)
                              (LDA-REF11519 ':INT32)
                              (INFO-REF11520 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11517 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11519 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11520 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11518 A))
      (%%DPOTRF2 UPLO N-REF11517 A-REF11518 LDA-REF11519
       INFO-REF11520))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DLAS2 "dlas2_")
  ((F :FOREIGN-ADDRESS) (G :FOREIGN-ADDRESS) (H :FOREIGN-ADDRESS)
   (SSMIN :FOREIGN-ADDRESS) (SSMAX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DLAS2 (F G H SSMIN SSMAX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DLAS2)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT F)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT G)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT H)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT SSMIN)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT SSMAX))
  (CFFI:WITH-FOREIGN-OBJECTS ((F-REF11521 ':DOUBLE)
                              (G-REF11522 ':DOUBLE)
                              (H-REF11523 ':DOUBLE)
                              (SSMIN-REF11524 ':DOUBLE)
                              (SSMAX-REF11525 ':DOUBLE))
    (COMMON-LISP:SETF (CFFI:MEM-REF F-REF11521 :DOUBLE) F)
    (COMMON-LISP:SETF (CFFI:MEM-REF G-REF11522 :DOUBLE) G)
    (COMMON-LISP:SETF (CFFI:MEM-REF H-REF11523 :DOUBLE) H)
    (COMMON-LISP:SETF (CFFI:MEM-REF SSMIN-REF11524 :DOUBLE) SSMIN)
    (COMMON-LISP:SETF (CFFI:MEM-REF SSMAX-REF11525 :DOUBLE) SSMAX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%DLAS2 F-REF11521 G-REF11522 H-REF11523 SSMIN-REF11524
       SSMAX-REF11525))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZGBSV "zgbsv_")
  ((N :FOREIGN-ADDRESS) (KL :FOREIGN-ADDRESS) (KU :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (AB :FOREIGN-ADDRESS)
   (LDAB :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZGBSV (N KL KU NRHS AB LDAB IPIV B LDB INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGBSV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11526 ':INT32)
                              (KL-REF11527 ':INT32)
                              (KU-REF11528 ':INT32)
                              (NRHS-REF11529 ':INT32)
                              (LDAB-REF11531 ':INT32)
                              (LDB-REF11534 ':INT32)
                              (INFO-REF11535 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11526 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KL-REF11527 :INT32) KL)
    (COMMON-LISP:SETF (CFFI:MEM-REF KU-REF11528 :INT32) KU)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF11529 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAB-REF11531 :INT32) LDAB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF11534 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11535 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AB-REF11530 AB)
                                            (IPIV-REF11532 IPIV)
                                            (B-REF11533 B))
      (%%ZGBSV N-REF11526 KL-REF11527 KU-REF11528 NRHS-REF11529
       AB-REF11530 LDAB-REF11531 IPIV-REF11532 B-REF11533 LDB-REF11534
       INFO-REF11535))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SLARTV "slartv_")
  ((N :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (Y :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (S :FOREIGN-ADDRESS) (INCC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SLARTV (N X INCX Y INCY C S INCC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SLARTV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) C)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) S)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11536 ':INT32)
                              (INCX-REF11538 ':INT32)
                              (INCY-REF11540 ':INT32)
                              (INCC-REF11543 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11536 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF11538 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF11540 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCC-REF11543 :INT32) INCC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF11537 X)
                                            (Y-REF11539 Y)
                                            (C-REF11541 C)
                                            (S-REF11542 S))
      (%%SLARTV N-REF11536 X-REF11537 INCX-REF11538 Y-REF11539
       INCY-REF11540 C-REF11541 S-REF11542 INCC-REF11543))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CGGES "cgges_")
  ((JOBVSL (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (JOBVSR (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (SORT (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (SELCTG :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (SDIM :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (BETA :FOREIGN-ADDRESS) (VSL :FOREIGN-ADDRESS)
   (LDVSL :FOREIGN-ADDRESS) (VSR :FOREIGN-ADDRESS)
   (LDVSR :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (RWORK :FOREIGN-ADDRESS)
   (BWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CGGES
    (JOBVSL JOBVSR SORT SELCTG N A LDA B LDB SDIM ALPHA BETA VSL LDVSL
     VSR LDVSR WORK LWORK RWORK BWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGGES)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBVSL)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBVSR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SORT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) SELCTG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) SDIM)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    VSL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDVSL)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    VSR)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDVSR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    BWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((SELCTG-REF11547 ':INT32)
                              (N-REF11548 ':INT32)
                              (LDA-REF11550 ':INT32)
                              (LDB-REF11552 ':INT32)
                              (SDIM-REF11553 ':INT32)
                              (LDVSL-REF11557 ':INT32)
                              (LDVSR-REF11559 ':INT32)
                              (LWORK-REF11561 ':INT32)
                              (INFO-REF11564 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF SELCTG-REF11547 :INT32) SELCTG)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11548 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11550 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF11552 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF SDIM-REF11553 :INT32) SDIM)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDVSL-REF11557 :INT32) LDVSL)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDVSR-REF11559 :INT32) LDVSR)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11561 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11564 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11549 A)
                                            (B-REF11551 B)
                                            (ALPHA-REF11554 ALPHA)
                                            (BETA-REF11555 BETA)
                                            (VSL-REF11556 VSL)
                                            (VSR-REF11558 VSR)
                                            (WORK-REF11560 WORK)
                                            (RWORK-REF11562 RWORK)
                                            (BWORK-REF11563 BWORK))
      (%%CGGES JOBVSL JOBVSR SORT SELCTG-REF11547 N-REF11548 A-REF11549
       LDA-REF11550 B-REF11551 LDB-REF11552 SDIM-REF11553
       ALPHA-REF11554 BETA-REF11555 VSL-REF11556 LDVSL-REF11557
       VSR-REF11558 LDVSR-REF11559 WORK-REF11560 LWORK-REF11561
       RWORK-REF11562 BWORK-REF11563 INFO-REF11564))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SPSTF2 "spstf2_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (PIV :FOREIGN-ADDRESS)
   (RANK :FOREIGN-ADDRESS) (TOL :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SPSTF2 (UPLO N A LDA PIV RANK TOL WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SPSTF2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    PIV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) RANK)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT TOL)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11566 ':INT32)
                              (LDA-REF11568 ':INT32)
                              (RANK-REF11570 ':INT32)
                              (TOL-REF11571 ':FLOAT)
                              (INFO-REF11573 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11566 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11568 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF RANK-REF11570 :INT32) RANK)
    (COMMON-LISP:SETF (CFFI:MEM-REF TOL-REF11571 :FLOAT) TOL)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11573 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11567 A)
                                            (PIV-REF11569 PIV)
                                            (WORK-REF11572 WORK))
      (%%SPSTF2 UPLO N-REF11566 A-REF11567 LDA-REF11568 PIV-REF11569
       RANK-REF11570 TOL-REF11571 WORK-REF11572 INFO-REF11573))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZUNM2R "zunm2r_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZUNM2R (SIDE TRANS M N K A LDA TAU C LDC WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZUNM2R)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11576 ':INT32) (N-REF11577 ':INT32)
                              (K-REF11578 ':INT32)
                              (LDA-REF11580 ':INT32)
                              (LDC-REF11583 ':INT32)
                              (INFO-REF11585 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11576 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11577 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF11578 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11580 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF11583 :INT32) LDC)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11585 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11579 A)
                                            (TAU-REF11581 TAU)
                                            (C-REF11582 C)
                                            (WORK-REF11584 WORK))
      (%%ZUNM2R SIDE TRANS M-REF11576 N-REF11577 K-REF11578 A-REF11579
       LDA-REF11580 TAU-REF11581 C-REF11582 LDC-REF11583 WORK-REF11584
       INFO-REF11585))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZPBCON "zpbcon_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (KD :FOREIGN-ADDRESS) (AB :FOREIGN-ADDRESS) (LDAB :FOREIGN-ADDRESS)
   (ANORM :FOREIGN-ADDRESS) (RCOND :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (RWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZPBCON
    (UPLO N KD AB LDAB ANORM RCOND WORK RWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZPBCON)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KD)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAB)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ANORM)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT RCOND)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11587 ':INT32)
                              (KD-REF11588 ':INT32)
                              (LDAB-REF11590 ':INT32)
                              (ANORM-REF11591 ':DOUBLE)
                              (RCOND-REF11592 ':DOUBLE)
                              (INFO-REF11595 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11587 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KD-REF11588 :INT32) KD)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAB-REF11590 :INT32) LDAB)
    (COMMON-LISP:SETF (CFFI:MEM-REF ANORM-REF11591 :DOUBLE) ANORM)
    (COMMON-LISP:SETF (CFFI:MEM-REF RCOND-REF11592 :DOUBLE) RCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11595 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AB-REF11589 AB)
                                            (WORK-REF11593 WORK)
                                            (RWORK-REF11594 RWORK))
      (%%ZPBCON UPLO N-REF11587 KD-REF11588 AB-REF11589 LDAB-REF11590
       ANORM-REF11591 RCOND-REF11592 WORK-REF11593 RWORK-REF11594
       INFO-REF11595))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DPBTF2 "dpbtf2_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (KD :FOREIGN-ADDRESS) (AB :FOREIGN-ADDRESS) (LDAB :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DPBTF2 (UPLO N KD AB LDAB INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DPBTF2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KD)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11597 ':INT32)
                              (KD-REF11598 ':INT32)
                              (LDAB-REF11600 ':INT32)
                              (INFO-REF11601 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11597 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KD-REF11598 :INT32) KD)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAB-REF11600 :INT32) LDAB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11601 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AB-REF11599 AB))
      (%%DPBTF2 UPLO N-REF11597 KD-REF11598 AB-REF11599 LDAB-REF11600
       INFO-REF11601))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DLARFX "dlarfx_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (V :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DLARFX (SIDE M N V TAU C LDC WORK)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DLARFX)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) V)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11603 ':INT32) (N-REF11604 ':INT32)
                              (TAU-REF11606 ':DOUBLE)
                              (LDC-REF11608 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11603 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11604 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF TAU-REF11606 :DOUBLE) TAU)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF11608 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((V-REF11605 V)
                                            (C-REF11607 C)
                                            (WORK-REF11609 WORK))
      (%%DLARFX SIDE M-REF11603 N-REF11604 V-REF11605 TAU-REF11606
       C-REF11607 LDC-REF11608 WORK-REF11609))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZSYEQUB "zsyequb_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (S :FOREIGN-ADDRESS)
   (SCOND :FOREIGN-ADDRESS) (AMAX :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZSYEQUB (UPLO N A LDA S SCOND AMAX WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZSYEQUB)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) S)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT SCOND)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT AMAX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11611 ':INT32)
                              (LDA-REF11613 ':INT32)
                              (SCOND-REF11615 ':DOUBLE)
                              (AMAX-REF11616 ':DOUBLE)
                              (INFO-REF11618 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11611 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11613 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF SCOND-REF11615 :DOUBLE) SCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF AMAX-REF11616 :DOUBLE) AMAX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11618 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11612 A)
                                            (S-REF11614 S)
                                            (WORK-REF11617 WORK))
      (%%ZSYEQUB UPLO N-REF11611 A-REF11612 LDA-REF11613 S-REF11614
       SCOND-REF11615 AMAX-REF11616 WORK-REF11617 INFO-REF11618))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DLARRC "dlarrc_")
  ((JOBT (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (VL :FOREIGN-ADDRESS) (VU :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS)
   (E :FOREIGN-ADDRESS) (PIVMIN :FOREIGN-ADDRESS)
   (EIGCNT :FOREIGN-ADDRESS) (LCNT :FOREIGN-ADDRESS)
   (RCNT :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DLARRC
    (JOBT N VL VU D E PIVMIN EIGCNT LCNT RCNT INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DLARRC)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT VL)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT VU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) E)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT PIVMIN)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) EIGCNT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LCNT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) RCNT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11620 ':INT32)
                              (VL-REF11621 ':DOUBLE)
                              (VU-REF11622 ':DOUBLE)
                              (PIVMIN-REF11625 ':DOUBLE)
                              (EIGCNT-REF11626 ':INT32)
                              (LCNT-REF11627 ':INT32)
                              (RCNT-REF11628 ':INT32)
                              (INFO-REF11629 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11620 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF VL-REF11621 :DOUBLE) VL)
    (COMMON-LISP:SETF (CFFI:MEM-REF VU-REF11622 :DOUBLE) VU)
    (COMMON-LISP:SETF (CFFI:MEM-REF PIVMIN-REF11625 :DOUBLE) PIVMIN)
    (COMMON-LISP:SETF (CFFI:MEM-REF EIGCNT-REF11626 :INT32) EIGCNT)
    (COMMON-LISP:SETF (CFFI:MEM-REF LCNT-REF11627 :INT32) LCNT)
    (COMMON-LISP:SETF (CFFI:MEM-REF RCNT-REF11628 :INT32) RCNT)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11629 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((D-REF11623 D)
                                            (E-REF11624 E))
      (%%DLARRC JOBT N-REF11620 VL-REF11621 VU-REF11622 D-REF11623
       E-REF11624 PIVMIN-REF11625 EIGCNT-REF11626 LCNT-REF11627
       RCNT-REF11628 INFO-REF11629))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZSPTRF "zsptrf_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (AP :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZSPTRF (UPLO N AP IPIV INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZSPTRF)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11631 ':INT32)
                              (INFO-REF11634 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11631 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11634 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF11632 AP)
                                            (IPIV-REF11633 IPIV))
      (%%ZSPTRF UPLO N-REF11631 AP-REF11632 IPIV-REF11633
       INFO-REF11634))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CPOEQUB "cpoequb_")
  ((N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (S :FOREIGN-ADDRESS) (SCOND :FOREIGN-ADDRESS)
   (AMAX :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CPOEQUB (N A LDA S SCOND AMAX INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CPOEQUB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) S)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SCOND)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT AMAX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11635 ':INT32)
                              (LDA-REF11637 ':INT32)
                              (SCOND-REF11639 ':FLOAT)
                              (AMAX-REF11640 ':FLOAT)
                              (INFO-REF11641 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11635 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11637 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF SCOND-REF11639 :FLOAT) SCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF AMAX-REF11640 :FLOAT) AMAX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11641 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11636 A)
                                            (S-REF11638 S))
      (%%CPOEQUB N-REF11635 A-REF11636 LDA-REF11637 S-REF11638
       SCOND-REF11639 AMAX-REF11640 INFO-REF11641))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DSYEVD "dsyevd_")
  ((JOBZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (W :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (IWORK :FOREIGN-ADDRESS) (LIWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSYEVD
    (JOBZ UPLO N A LDA W WORK LWORK IWORK LIWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSYEVD)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBZ)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) W)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LIWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11644 ':INT32)
                              (LDA-REF11646 ':INT32)
                              (LWORK-REF11649 ':INT32)
                              (LIWORK-REF11651 ':INT32)
                              (INFO-REF11652 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11644 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11646 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11649 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF LIWORK-REF11651 :INT32) LIWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11652 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11645 A)
                                            (W-REF11647 W)
                                            (WORK-REF11648 WORK)
                                            (IWORK-REF11650 IWORK))
      (%%DSYEVD JOBZ UPLO N-REF11644 A-REF11645 LDA-REF11646 W-REF11647
       WORK-REF11648 LWORK-REF11649 IWORK-REF11650 LIWORK-REF11651
       INFO-REF11652))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SGBSVXX "sgbsvxx_")
  ((FACT (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (KL :FOREIGN-ADDRESS) (KU :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (AB :FOREIGN-ADDRESS)
   (LDAB :FOREIGN-ADDRESS) (AFB :FOREIGN-ADDRESS)
   (LDAFB :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (EQUED (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (R :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (LDX :FOREIGN-ADDRESS)
   (RCOND :FOREIGN-ADDRESS) (RPVGRW :FOREIGN-ADDRESS)
   (BERR :FOREIGN-ADDRESS) (N_ERR_BNDS :FOREIGN-ADDRESS)
   (ERR_BNDS_NORM :FOREIGN-ADDRESS) (ERR_BNDS_COMP :FOREIGN-ADDRESS)
   (NPARAMS :FOREIGN-ADDRESS) (PARAMS :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (IWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SGBSVXX
    (FACT TRANS N KL KU NRHS AB LDAB AFB LDAFB IPIV EQUED R C B LDB X
     LDX RCOND RPVGRW BERR N_ERR_BNDS ERR_BNDS_NORM ERR_BNDS_COMP
     NPARAMS PARAMS WORK IWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SGBSVXX)
   (COMMON-LISP:TYPE COMMON-LISP:STRING FACT)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) AB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) AFB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAFB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING EQUED)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) R)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) C)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT RCOND)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT RPVGRW)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) BERR)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N_ERR_BNDS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) ERR_BNDS_NORM)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) ERR_BNDS_COMP)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NPARAMS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) PARAMS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11655 ':INT32)
                              (KL-REF11656 ':INT32)
                              (KU-REF11657 ':INT32)
                              (NRHS-REF11658 ':INT32)
                              (LDAB-REF11660 ':INT32)
                              (LDAFB-REF11662 ':INT32)
                              (LDB-REF11668 ':INT32)
                              (LDX-REF11670 ':INT32)
                              (RCOND-REF11671 ':FLOAT)
                              (RPVGRW-REF11672 ':FLOAT)
                              (N_ERR_BNDS-REF11674 ':INT32)
                              (NPARAMS-REF11677 ':INT32)
                              (INFO-REF11681 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11655 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KL-REF11656 :INT32) KL)
    (COMMON-LISP:SETF (CFFI:MEM-REF KU-REF11657 :INT32) KU)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF11658 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAB-REF11660 :INT32) LDAB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAFB-REF11662 :INT32) LDAFB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF11668 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX-REF11670 :INT32) LDX)
    (COMMON-LISP:SETF (CFFI:MEM-REF RCOND-REF11671 :FLOAT) RCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF RPVGRW-REF11672 :FLOAT) RPVGRW)
    (COMMON-LISP:SETF (CFFI:MEM-REF N_ERR_BNDS-REF11674 :INT32)
                      N_ERR_BNDS)
    (COMMON-LISP:SETF (CFFI:MEM-REF NPARAMS-REF11677 :INT32) NPARAMS)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11681 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AB-REF11659 AB)
                                            (AFB-REF11661 AFB)
                                            (IPIV-REF11663 IPIV)
                                            (R-REF11665 R)
                                            (C-REF11666 C)
                                            (B-REF11667 B)
                                            (X-REF11669 X)
                                            (BERR-REF11673 BERR)
                                            (ERR_BNDS_NORM-REF11675
                                             ERR_BNDS_NORM)
                                            (ERR_BNDS_COMP-REF11676
                                             ERR_BNDS_COMP)
                                            (PARAMS-REF11678 PARAMS)
                                            (WORK-REF11679 WORK)
                                            (IWORK-REF11680 IWORK))
      (%%SGBSVXX FACT TRANS N-REF11655 KL-REF11656 KU-REF11657
       NRHS-REF11658 AB-REF11659 LDAB-REF11660 AFB-REF11661
       LDAFB-REF11662 IPIV-REF11663 EQUED R-REF11665 C-REF11666
       B-REF11667 LDB-REF11668 X-REF11669 LDX-REF11670 RCOND-REF11671
       RPVGRW-REF11672 BERR-REF11673 N_ERR_BNDS-REF11674
       ERR_BNDS_NORM-REF11675 ERR_BNDS_COMP-REF11676 NPARAMS-REF11677
       PARAMS-REF11678 WORK-REF11679 IWORK-REF11680 INFO-REF11681))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DGELSD "dgelsd_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (NRHS :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (S :FOREIGN-ADDRESS) (RCOND :FOREIGN-ADDRESS)
   (RANK :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (IWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DGELSD
    (M N NRHS A LDA B LDB S RCOND RANK WORK LWORK IWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGELSD)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) S)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT RCOND)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) RANK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11682 ':INT32) (N-REF11683 ':INT32)
                              (NRHS-REF11684 ':INT32)
                              (LDA-REF11686 ':INT32)
                              (LDB-REF11688 ':INT32)
                              (RCOND-REF11690 ':DOUBLE)
                              (RANK-REF11691 ':INT32)
                              (LWORK-REF11693 ':INT32)
                              (INFO-REF11695 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11682 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11683 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF11684 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11686 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF11688 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF RCOND-REF11690 :DOUBLE) RCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF RANK-REF11691 :INT32) RANK)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11693 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11695 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11685 A)
                                            (B-REF11687 B)
                                            (S-REF11689 S)
                                            (WORK-REF11692 WORK)
                                            (IWORK-REF11694 IWORK))
      (%%DGELSD M-REF11682 N-REF11683 NRHS-REF11684 A-REF11685
       LDA-REF11686 B-REF11687 LDB-REF11688 S-REF11689 RCOND-REF11690
       RANK-REF11691 WORK-REF11692 LWORK-REF11693 IWORK-REF11694
       INFO-REF11695))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CUNM2L "cunm2l_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CUNM2L (SIDE TRANS M N K A LDA TAU C LDC WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CUNM2L)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11698 ':INT32) (N-REF11699 ':INT32)
                              (K-REF11700 ':INT32)
                              (LDA-REF11702 ':INT32)
                              (LDC-REF11705 ':INT32)
                              (INFO-REF11707 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11698 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11699 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF11700 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11702 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF11705 :INT32) LDC)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11707 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11701 A)
                                            (TAU-REF11703 TAU)
                                            (C-REF11704 C)
                                            (WORK-REF11706 WORK))
      (%%CUNM2L SIDE TRANS M-REF11698 N-REF11699 K-REF11700 A-REF11701
       LDA-REF11702 TAU-REF11703 C-REF11704 LDC-REF11705 WORK-REF11706
       INFO-REF11707))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SLAR1V "slar1v_")
  ((N :FOREIGN-ADDRESS) (B1 :FOREIGN-ADDRESS) (BN :FOREIGN-ADDRESS)
   (LAMBDA :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS) (L :FOREIGN-ADDRESS)
   (LD :FOREIGN-ADDRESS) (LLD :FOREIGN-ADDRESS)
   (PIVMIN :FOREIGN-ADDRESS) (GAPTOL :FOREIGN-ADDRESS)
   (Z :FOREIGN-ADDRESS) (WANTNC :FOREIGN-ADDRESS)
   (NEGCNT :FOREIGN-ADDRESS) (ZTZ :FOREIGN-ADDRESS)
   (MINGMA :FOREIGN-ADDRESS) (R :FOREIGN-ADDRESS)
   (ISUPPZ :FOREIGN-ADDRESS) (NRMINV :FOREIGN-ADDRESS)
   (RESID :FOREIGN-ADDRESS) (RQCORR :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SLAR1V
    (N B1 BN LAMBDA D L LD LLD PIVMIN GAPTOL Z WANTNC NEGCNT ZTZ MINGMA
     R ISUPPZ NRMINV RESID RQCORR WORK)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SLAR1V)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) B1)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) BN)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT LAMBDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) L)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) LD)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) LLD)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT PIVMIN)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT GAPTOL)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) WANTNC)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NEGCNT)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ZTZ)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT MINGMA)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) R)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    ISUPPZ)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT NRMINV)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT RESID)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT RQCORR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11708 ':INT32)
                              (B1-REF11709 ':INT32)
                              (BN-REF11710 ':INT32)
                              (LAMBDA-REF11711 ':FLOAT)
                              (PIVMIN-REF11716 ':FLOAT)
                              (GAPTOL-REF11717 ':FLOAT)
                              (WANTNC-REF11719 ':INT32)
                              (NEGCNT-REF11720 ':INT32)
                              (ZTZ-REF11721 ':FLOAT)
                              (MINGMA-REF11722 ':FLOAT)
                              (R-REF11723 ':INT32)
                              (NRMINV-REF11725 ':FLOAT)
                              (RESID-REF11726 ':FLOAT)
                              (RQCORR-REF11727 ':FLOAT))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11708 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF B1-REF11709 :INT32) B1)
    (COMMON-LISP:SETF (CFFI:MEM-REF BN-REF11710 :INT32) BN)
    (COMMON-LISP:SETF (CFFI:MEM-REF LAMBDA-REF11711 :FLOAT) LAMBDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF PIVMIN-REF11716 :FLOAT) PIVMIN)
    (COMMON-LISP:SETF (CFFI:MEM-REF GAPTOL-REF11717 :FLOAT) GAPTOL)
    (COMMON-LISP:SETF (CFFI:MEM-REF WANTNC-REF11719 :INT32) WANTNC)
    (COMMON-LISP:SETF (CFFI:MEM-REF NEGCNT-REF11720 :INT32) NEGCNT)
    (COMMON-LISP:SETF (CFFI:MEM-REF ZTZ-REF11721 :FLOAT) ZTZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF MINGMA-REF11722 :FLOAT) MINGMA)
    (COMMON-LISP:SETF (CFFI:MEM-REF R-REF11723 :INT32) R)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRMINV-REF11725 :FLOAT) NRMINV)
    (COMMON-LISP:SETF (CFFI:MEM-REF RESID-REF11726 :FLOAT) RESID)
    (COMMON-LISP:SETF (CFFI:MEM-REF RQCORR-REF11727 :FLOAT) RQCORR)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((D-REF11712 D)
                                            (L-REF11713 L)
                                            (LD-REF11714 LD)
                                            (LLD-REF11715 LLD)
                                            (Z-REF11718 Z)
                                            (ISUPPZ-REF11724 ISUPPZ)
                                            (WORK-REF11728 WORK))
      (%%SLAR1V N-REF11708 B1-REF11709 BN-REF11710 LAMBDA-REF11711
       D-REF11712 L-REF11713 LD-REF11714 LLD-REF11715 PIVMIN-REF11716
       GAPTOL-REF11717 Z-REF11718 WANTNC-REF11719 NEGCNT-REF11720
       ZTZ-REF11721 MINGMA-REF11722 R-REF11723 ISUPPZ-REF11724
       NRMINV-REF11725 RESID-REF11726 RQCORR-REF11727 WORK-REF11728))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CLAED7 "claed7_")
  ((N :FOREIGN-ADDRESS) (CUTPNT :FOREIGN-ADDRESS)
   (QSIZ :FOREIGN-ADDRESS) (TLVLS :FOREIGN-ADDRESS)
   (CURLVL :FOREIGN-ADDRESS) (CURPBM :FOREIGN-ADDRESS)
   (D :FOREIGN-ADDRESS) (Q :FOREIGN-ADDRESS) (LDQ :FOREIGN-ADDRESS)
   (RHO :FOREIGN-ADDRESS) (INDXQ :FOREIGN-ADDRESS)
   (QSTORE :FOREIGN-ADDRESS) (QPTR :FOREIGN-ADDRESS)
   (PRMPTR :FOREIGN-ADDRESS) (PERM :FOREIGN-ADDRESS)
   (GIVPTR :FOREIGN-ADDRESS) (GIVCOL :FOREIGN-ADDRESS)
   (GIVNUM :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (RWORK :FOREIGN-ADDRESS) (IWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CLAED7
    (N CUTPNT QSIZ TLVLS CURLVL CURPBM D Q LDQ RHO INDXQ QSTORE QPTR
     PRMPTR PERM GIVPTR GIVCOL GIVNUM WORK RWORK IWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CLAED7)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) CUTPNT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) QSIZ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) TLVLS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) CURLVL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) CURPBM)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Q)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDQ)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT RHO)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    INDXQ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) QSTORE)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    QPTR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    PRMPTR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    PERM)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    GIVPTR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    GIVCOL)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) GIVNUM)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11729 ':INT32)
                              (CUTPNT-REF11730 ':INT32)
                              (QSIZ-REF11731 ':INT32)
                              (TLVLS-REF11732 ':INT32)
                              (CURLVL-REF11733 ':INT32)
                              (CURPBM-REF11734 ':INT32)
                              (LDQ-REF11737 ':INT32)
                              (RHO-REF11738 ':FLOAT)
                              (INFO-REF11750 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11729 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF CUTPNT-REF11730 :INT32) CUTPNT)
    (COMMON-LISP:SETF (CFFI:MEM-REF QSIZ-REF11731 :INT32) QSIZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF TLVLS-REF11732 :INT32) TLVLS)
    (COMMON-LISP:SETF (CFFI:MEM-REF CURLVL-REF11733 :INT32) CURLVL)
    (COMMON-LISP:SETF (CFFI:MEM-REF CURPBM-REF11734 :INT32) CURPBM)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDQ-REF11737 :INT32) LDQ)
    (COMMON-LISP:SETF (CFFI:MEM-REF RHO-REF11738 :FLOAT) RHO)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11750 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((D-REF11735 D)
                                            (Q-REF11736 Q)
                                            (INDXQ-REF11739 INDXQ)
                                            (QSTORE-REF11740 QSTORE)
                                            (QPTR-REF11741 QPTR)
                                            (PRMPTR-REF11742 PRMPTR)
                                            (PERM-REF11743 PERM)
                                            (GIVPTR-REF11744 GIVPTR)
                                            (GIVCOL-REF11745 GIVCOL)
                                            (GIVNUM-REF11746 GIVNUM)
                                            (WORK-REF11747 WORK)
                                            (RWORK-REF11748 RWORK)
                                            (IWORK-REF11749 IWORK))
      (%%CLAED7 N-REF11729 CUTPNT-REF11730 QSIZ-REF11731 TLVLS-REF11732
       CURLVL-REF11733 CURPBM-REF11734 D-REF11735 Q-REF11736
       LDQ-REF11737 RHO-REF11738 INDXQ-REF11739 QSTORE-REF11740
       QPTR-REF11741 PRMPTR-REF11742 PERM-REF11743 GIVPTR-REF11744
       GIVCOL-REF11745 GIVNUM-REF11746 WORK-REF11747 RWORK-REF11748
       IWORK-REF11749 INFO-REF11750))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CSRSCL "csrscl_")
  ((N :FOREIGN-ADDRESS) (SA :FOREIGN-ADDRESS) (SX :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CSRSCL (N SA SX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSRSCL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    SX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11751 ':INT32)
                              (SA-REF11752 ':FLOAT)
                              (INCX-REF11754 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11751 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF SA-REF11752 :FLOAT) SA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF11754 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF11753 SX))
      (%%CSRSCL N-REF11751 SA-REF11752 SX-REF11753 INCX-REF11754))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DPOTF2 "dpotf2_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DPOTF2 (UPLO N A LDA INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DPOTF2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11756 ':INT32)
                              (LDA-REF11758 ':INT32)
                              (INFO-REF11759 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11756 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11758 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11759 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11757 A))
      (%%DPOTF2 UPLO N-REF11756 A-REF11757 LDA-REF11758
       INFO-REF11759))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DSPEVX "dspevx_")
  ((JOBZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (RANGE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (AP :FOREIGN-ADDRESS) (VL :FOREIGN-ADDRESS) (VU :FOREIGN-ADDRESS)
   (IL :FOREIGN-ADDRESS) (IU :FOREIGN-ADDRESS)
   (ABSTOL :FOREIGN-ADDRESS) (M :FOREIGN-ADDRESS) (W :FOREIGN-ADDRESS)
   (Z :FOREIGN-ADDRESS) (LDZ :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (IWORK :FOREIGN-ADDRESS) (IFAIL :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSPEVX
    (JOBZ RANGE UPLO N AP VL VU IL IU ABSTOL M W Z LDZ WORK IWORK IFAIL
     INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSPEVX)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBZ)
   (COMMON-LISP:TYPE COMMON-LISP:STRING RANGE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AP)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT VL)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT VU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IU)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ABSTOL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) W)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDZ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IFAIL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11763 ':INT32)
                              (VL-REF11765 ':DOUBLE)
                              (VU-REF11766 ':DOUBLE)
                              (IL-REF11767 ':INT32)
                              (IU-REF11768 ':INT32)
                              (ABSTOL-REF11769 ':DOUBLE)
                              (M-REF11770 ':INT32)
                              (LDZ-REF11773 ':INT32)
                              (INFO-REF11777 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11763 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF VL-REF11765 :DOUBLE) VL)
    (COMMON-LISP:SETF (CFFI:MEM-REF VU-REF11766 :DOUBLE) VU)
    (COMMON-LISP:SETF (CFFI:MEM-REF IL-REF11767 :INT32) IL)
    (COMMON-LISP:SETF (CFFI:MEM-REF IU-REF11768 :INT32) IU)
    (COMMON-LISP:SETF (CFFI:MEM-REF ABSTOL-REF11769 :DOUBLE) ABSTOL)
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11770 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDZ-REF11773 :INT32) LDZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11777 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF11764 AP)
                                            (W-REF11771 W)
                                            (Z-REF11772 Z)
                                            (WORK-REF11774 WORK)
                                            (IWORK-REF11775 IWORK)
                                            (IFAIL-REF11776 IFAIL))
      (%%DSPEVX JOBZ RANGE UPLO N-REF11763 AP-REF11764 VL-REF11765
       VU-REF11766 IL-REF11767 IU-REF11768 ABSTOL-REF11769 M-REF11770
       W-REF11771 Z-REF11772 LDZ-REF11773 WORK-REF11774 IWORK-REF11775
       IFAIL-REF11776 INFO-REF11777))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DLASDT "dlasdt_")
  ((N :FOREIGN-ADDRESS) (LVL :FOREIGN-ADDRESS) (ND :FOREIGN-ADDRESS)
   (INODE :FOREIGN-ADDRESS) (NDIML :FOREIGN-ADDRESS)
   (NDIMR :FOREIGN-ADDRESS) (MSUB :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DLASDT (N LVL ND INODE NDIML NDIMR MSUB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DLASDT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LVL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ND)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    INODE)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    NDIML)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    NDIMR)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) MSUB))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11778 ':INT32)
                              (LVL-REF11779 ':INT32)
                              (ND-REF11780 ':INT32)
                              (MSUB-REF11784 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11778 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LVL-REF11779 :INT32) LVL)
    (COMMON-LISP:SETF (CFFI:MEM-REF ND-REF11780 :INT32) ND)
    (COMMON-LISP:SETF (CFFI:MEM-REF MSUB-REF11784 :INT32) MSUB)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((INODE-REF11781 INODE)
                                            (NDIML-REF11782 NDIML)
                                            (NDIMR-REF11783 NDIMR))
      (%%DLASDT N-REF11778 LVL-REF11779 ND-REF11780 INODE-REF11781
       NDIML-REF11782 NDIMR-REF11783 MSUB-REF11784))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DSPRFS "dsprfs_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (AP :FOREIGN-ADDRESS) (AFP :FOREIGN-ADDRESS)
   (IPIV :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (LDX :FOREIGN-ADDRESS) (FERR :FOREIGN-ADDRESS)
   (BERR :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (IWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSPRFS
    (UPLO N NRHS AP AFP IPIV B LDB X LDX FERR BERR WORK IWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSPRFS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AFP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) FERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) BERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11786 ':INT32)
                              (NRHS-REF11787 ':INT32)
                              (LDB-REF11792 ':INT32)
                              (LDX-REF11794 ':INT32)
                              (INFO-REF11799 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11786 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF11787 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF11792 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX-REF11794 :INT32) LDX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11799 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF11788 AP)
                                            (AFP-REF11789 AFP)
                                            (IPIV-REF11790 IPIV)
                                            (B-REF11791 B)
                                            (X-REF11793 X)
                                            (FERR-REF11795 FERR)
                                            (BERR-REF11796 BERR)
                                            (WORK-REF11797 WORK)
                                            (IWORK-REF11798 IWORK))
      (%%DSPRFS UPLO N-REF11786 NRHS-REF11787 AP-REF11788 AFP-REF11789
       IPIV-REF11790 B-REF11791 LDB-REF11792 X-REF11793 LDX-REF11794
       FERR-REF11795 BERR-REF11796 WORK-REF11797 IWORK-REF11798
       INFO-REF11799))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CTPQRT "ctpqrt_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (L :FOREIGN-ADDRESS)
   (NB :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS) (T :FOREIGN-ADDRESS)
   (LDT :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CTPQRT (M N L NB A LDA B LDB T LDT WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTPQRT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) L)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    T)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11800 ':INT32) (N-REF11801 ':INT32)
                              (L-REF11802 ':INT32)
                              (NB-REF11803 ':INT32)
                              (LDA-REF11805 ':INT32)
                              (LDB-REF11807 ':INT32)
                              (LDT-REF11809 ':INT32)
                              (INFO-REF11811 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11800 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11801 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF L-REF11802 :INT32) L)
    (COMMON-LISP:SETF (CFFI:MEM-REF NB-REF11803 :INT32) NB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11805 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF11807 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDT-REF11809 :INT32) LDT)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11811 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11804 A)
                                            (B-REF11806 B)
                                            (T-REF11808 T)
                                            (WORK-REF11810 WORK))
      (%%CTPQRT M-REF11800 N-REF11801 L-REF11802 NB-REF11803 A-REF11804
       LDA-REF11805 B-REF11806 LDB-REF11807 T-REF11808 LDT-REF11809
       WORK-REF11810 INFO-REF11811))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SSTEMR "sstemr_")
  ((JOBZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (RANGE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS) (E :FOREIGN-ADDRESS)
   (VL :FOREIGN-ADDRESS) (VU :FOREIGN-ADDRESS) (IL :FOREIGN-ADDRESS)
   (IU :FOREIGN-ADDRESS) (M :FOREIGN-ADDRESS) (W :FOREIGN-ADDRESS)
   (Z :FOREIGN-ADDRESS) (LDZ :FOREIGN-ADDRESS) (NZC :FOREIGN-ADDRESS)
   (ISUPPZ :FOREIGN-ADDRESS) (TRYRAC :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (IWORK :FOREIGN-ADDRESS) (LIWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SSTEMR
    (JOBZ RANGE N D E VL VU IL IU M W Z LDZ NZC ISUPPZ TRYRAC WORK
     LWORK IWORK LIWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSTEMR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBZ)
   (COMMON-LISP:TYPE COMMON-LISP:STRING RANGE)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) E)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT VL)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT VU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) W)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDZ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NZC)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    ISUPPZ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) TRYRAC)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LIWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11814 ':INT32)
                              (VL-REF11817 ':FLOAT)
                              (VU-REF11818 ':FLOAT)
                              (IL-REF11819 ':INT32)
                              (IU-REF11820 ':INT32)
                              (M-REF11821 ':INT32)
                              (LDZ-REF11824 ':INT32)
                              (NZC-REF11825 ':INT32)
                              (TRYRAC-REF11827 ':INT32)
                              (LWORK-REF11829 ':INT32)
                              (LIWORK-REF11831 ':INT32)
                              (INFO-REF11832 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11814 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF VL-REF11817 :FLOAT) VL)
    (COMMON-LISP:SETF (CFFI:MEM-REF VU-REF11818 :FLOAT) VU)
    (COMMON-LISP:SETF (CFFI:MEM-REF IL-REF11819 :INT32) IL)
    (COMMON-LISP:SETF (CFFI:MEM-REF IU-REF11820 :INT32) IU)
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11821 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDZ-REF11824 :INT32) LDZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF NZC-REF11825 :INT32) NZC)
    (COMMON-LISP:SETF (CFFI:MEM-REF TRYRAC-REF11827 :INT32) TRYRAC)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11829 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF LIWORK-REF11831 :INT32) LIWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11832 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((D-REF11815 D)
                                            (E-REF11816 E)
                                            (W-REF11822 W)
                                            (Z-REF11823 Z)
                                            (ISUPPZ-REF11826 ISUPPZ)
                                            (WORK-REF11828 WORK)
                                            (IWORK-REF11830 IWORK))
      (%%SSTEMR JOBZ RANGE N-REF11814 D-REF11815 E-REF11816 VL-REF11817
       VU-REF11818 IL-REF11819 IU-REF11820 M-REF11821 W-REF11822
       Z-REF11823 LDZ-REF11824 NZC-REF11825 ISUPPZ-REF11826
       TRYRAC-REF11827 WORK-REF11828 LWORK-REF11829 IWORK-REF11830
       LIWORK-REF11831 INFO-REF11832))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DLAED4 "dlaed4_")
  ((N :FOREIGN-ADDRESS) (I :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS)
   (Z :FOREIGN-ADDRESS) (DELTA :FOREIGN-ADDRESS) (RHO :FOREIGN-ADDRESS)
   (DLAM :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DLAED4 (N I D Z DELTA RHO DLAM INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DLAED4)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) I)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Z)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DELTA)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT RHO)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DLAM)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11833 ':INT32) (I-REF11834 ':INT32)
                              (RHO-REF11838 ':DOUBLE)
                              (DLAM-REF11839 ':DOUBLE)
                              (INFO-REF11840 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11833 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF I-REF11834 :INT32) I)
    (COMMON-LISP:SETF (CFFI:MEM-REF RHO-REF11838 :DOUBLE) RHO)
    (COMMON-LISP:SETF (CFFI:MEM-REF DLAM-REF11839 :DOUBLE) DLAM)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11840 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((D-REF11835 D)
                                            (Z-REF11836 Z)
                                            (DELTA-REF11837 DELTA))
      (%%DLAED4 N-REF11833 I-REF11834 D-REF11835 Z-REF11836
       DELTA-REF11837 RHO-REF11838 DLAM-REF11839 INFO-REF11840))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SGETC2 "sgetc2_")
  ((N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (IPIV :FOREIGN-ADDRESS) (JPIV :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SGETC2 (N A LDA IPIV JPIV INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SGETC2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    JPIV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11841 ':INT32)
                              (LDA-REF11843 ':INT32)
                              (INFO-REF11846 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11841 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11843 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11846 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11842 A)
                                            (IPIV-REF11844 IPIV)
                                            (JPIV-REF11845 JPIV))
      (%%SGETC2 N-REF11841 A-REF11842 LDA-REF11843 IPIV-REF11844
       JPIV-REF11845 INFO-REF11846))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CLARFG "clarfg_")
  ((N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CLARFG (N ALPHA X INCX TAU)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CLARFG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    TAU))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11847 ':INT32)
                              (ALPHA-REF11848
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCX-REF11850 ':INT32)
                              (TAU-REF11851
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11847 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF11848
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF11850 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              TAU-REF11851
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART TAU)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART TAU)))
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF11849 X))
      (%%CLARFG N-REF11847 ALPHA-REF11848 X-REF11849 INCX-REF11850
       TAU-REF11851))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DPORFS "dporfs_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (AF :FOREIGN-ADDRESS) (LDAF :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (LDX :FOREIGN-ADDRESS)
   (FERR :FOREIGN-ADDRESS) (BERR :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (IWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DPORFS
    (UPLO N NRHS A LDA AF LDAF B LDB X LDX FERR BERR WORK IWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DPORFS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AF)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAF)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) FERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) BERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11853 ':INT32)
                              (NRHS-REF11854 ':INT32)
                              (LDA-REF11856 ':INT32)
                              (LDAF-REF11858 ':INT32)
                              (LDB-REF11860 ':INT32)
                              (LDX-REF11862 ':INT32)
                              (INFO-REF11867 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11853 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF11854 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11856 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAF-REF11858 :INT32) LDAF)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF11860 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX-REF11862 :INT32) LDX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11867 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11855 A)
                                            (AF-REF11857 AF)
                                            (B-REF11859 B)
                                            (X-REF11861 X)
                                            (FERR-REF11863 FERR)
                                            (BERR-REF11864 BERR)
                                            (WORK-REF11865 WORK)
                                            (IWORK-REF11866 IWORK))
      (%%DPORFS UPLO N-REF11853 NRHS-REF11854 A-REF11855 LDA-REF11856
       AF-REF11857 LDAF-REF11858 B-REF11859 LDB-REF11860 X-REF11861
       LDX-REF11862 FERR-REF11863 BERR-REF11864 WORK-REF11865
       IWORK-REF11866 INFO-REF11867))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DGEEQU "dgeequ_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (R :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (ROWCND :FOREIGN-ADDRESS) (COLCND :FOREIGN-ADDRESS)
   (AMAX :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DGEEQU (M N A LDA R C ROWCND COLCND AMAX INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGEEQU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) R)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) C)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ROWCND)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT COLCND)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT AMAX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11868 ':INT32) (N-REF11869 ':INT32)
                              (LDA-REF11871 ':INT32)
                              (ROWCND-REF11874 ':DOUBLE)
                              (COLCND-REF11875 ':DOUBLE)
                              (AMAX-REF11876 ':DOUBLE)
                              (INFO-REF11877 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11868 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11869 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11871 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF ROWCND-REF11874 :DOUBLE) ROWCND)
    (COMMON-LISP:SETF (CFFI:MEM-REF COLCND-REF11875 :DOUBLE) COLCND)
    (COMMON-LISP:SETF (CFFI:MEM-REF AMAX-REF11876 :DOUBLE) AMAX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11877 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11870 A)
                                            (R-REF11872 R)
                                            (C-REF11873 C))
      (%%DGEEQU M-REF11868 N-REF11869 A-REF11870 LDA-REF11871
       R-REF11872 C-REF11873 ROWCND-REF11874 COLCND-REF11875
       AMAX-REF11876 INFO-REF11877))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CTRRFS "ctrrfs_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (LDX :FOREIGN-ADDRESS) (FERR :FOREIGN-ADDRESS)
   (BERR :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (RWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CTRRFS
    (UPLO TRANS DIAG N NRHS A LDA B LDB X LDX FERR BERR WORK RWORK
     INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTRRFS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) FERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) BERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11881 ':INT32)
                              (NRHS-REF11882 ':INT32)
                              (LDA-REF11884 ':INT32)
                              (LDB-REF11886 ':INT32)
                              (LDX-REF11888 ':INT32)
                              (INFO-REF11893 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11881 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF11882 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11884 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF11886 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX-REF11888 :INT32) LDX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11893 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11883 A)
                                            (B-REF11885 B)
                                            (X-REF11887 X)
                                            (FERR-REF11889 FERR)
                                            (BERR-REF11890 BERR)
                                            (WORK-REF11891 WORK)
                                            (RWORK-REF11892 RWORK))
      (%%CTRRFS UPLO TRANS DIAG N-REF11881 NRHS-REF11882 A-REF11883
       LDA-REF11884 B-REF11885 LDB-REF11886 X-REF11887 LDX-REF11888
       FERR-REF11889 BERR-REF11890 WORK-REF11891 RWORK-REF11892
       INFO-REF11893))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%STPQRT2 "stpqrt2_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (L :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (T :FOREIGN-ADDRESS) (LDT :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %STPQRT2 (M N L A LDA B LDB T LDT INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STPQRT2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) L)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) T)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11894 ':INT32) (N-REF11895 ':INT32)
                              (L-REF11896 ':INT32)
                              (LDA-REF11898 ':INT32)
                              (LDB-REF11900 ':INT32)
                              (LDT-REF11902 ':INT32)
                              (INFO-REF11903 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11894 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11895 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF L-REF11896 :INT32) L)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11898 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF11900 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDT-REF11902 :INT32) LDT)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11903 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11897 A)
                                            (B-REF11899 B)
                                            (T-REF11901 T))
      (%%STPQRT2 M-REF11894 N-REF11895 L-REF11896 A-REF11897
       LDA-REF11898 B-REF11899 LDB-REF11900 T-REF11901 LDT-REF11902
       INFO-REF11903))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CGGHD3 "cgghd3_")
  ((COMPQ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (COMPZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (ILO :FOREIGN-ADDRESS) (IHI :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (Q :FOREIGN-ADDRESS) (LDQ :FOREIGN-ADDRESS)
   (Z :FOREIGN-ADDRESS) (LDZ :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CGGHD3
    (COMPQ COMPZ N ILO IHI A LDA B LDB Q LDQ Z LDZ WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGGHD3)
   (COMMON-LISP:TYPE COMMON-LISP:STRING COMPQ)
   (COMMON-LISP:TYPE COMMON-LISP:STRING COMPZ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ILO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IHI)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Q)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDQ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDZ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11906 ':INT32)
                              (ILO-REF11907 ':INT32)
                              (IHI-REF11908 ':INT32)
                              (LDA-REF11910 ':INT32)
                              (LDB-REF11912 ':INT32)
                              (LDQ-REF11914 ':INT32)
                              (LDZ-REF11916 ':INT32)
                              (LWORK-REF11918 ':INT32)
                              (INFO-REF11919 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11906 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ILO-REF11907 :INT32) ILO)
    (COMMON-LISP:SETF (CFFI:MEM-REF IHI-REF11908 :INT32) IHI)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11910 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF11912 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDQ-REF11914 :INT32) LDQ)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDZ-REF11916 :INT32) LDZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11918 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11919 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11909 A)
                                            (B-REF11911 B)
                                            (Q-REF11913 Q)
                                            (Z-REF11915 Z)
                                            (WORK-REF11917 WORK))
      (%%CGGHD3 COMPQ COMPZ N-REF11906 ILO-REF11907 IHI-REF11908
       A-REF11909 LDA-REF11910 B-REF11911 LDB-REF11912 Q-REF11913
       LDQ-REF11914 Z-REF11915 LDZ-REF11916 WORK-REF11917
       LWORK-REF11918 INFO-REF11919))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SORG2L "sorg2l_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SORG2L (M N K A LDA TAU WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SORG2L)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11920 ':INT32) (N-REF11921 ':INT32)
                              (K-REF11922 ':INT32)
                              (LDA-REF11924 ':INT32)
                              (INFO-REF11927 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11920 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11921 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF11922 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11924 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11927 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11923 A)
                                            (TAU-REF11925 TAU)
                                            (WORK-REF11926 WORK))
      (%%SORG2L M-REF11920 N-REF11921 K-REF11922 A-REF11923
       LDA-REF11924 TAU-REF11925 WORK-REF11926 INFO-REF11927))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SLANSF "slansf_")
  ((NORM (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANSR (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS))
  :RETURNING (:FLOAT COMMON-LISP:SINGLE-FLOAT) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SLANSF (NORM TRANSR UPLO N A WORK)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SLANSF)
   (COMMON-LISP:TYPE COMMON-LISP:STRING NORM)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11931 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11931 :INT32) N)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11932 A)
                                            (WORK-REF11933 WORK))
      (%%SLANSF NORM TRANSR UPLO N-REF11931 A-REF11932 WORK-REF11933))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SORGLQ "sorglq_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SORGLQ (M N K A LDA TAU WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SORGLQ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11934 ':INT32) (N-REF11935 ':INT32)
                              (K-REF11936 ':INT32)
                              (LDA-REF11938 ':INT32)
                              (LWORK-REF11941 ':INT32)
                              (INFO-REF11942 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11934 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11935 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF11936 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11938 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11941 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11942 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11937 A)
                                            (TAU-REF11939 TAU)
                                            (WORK-REF11940 WORK))
      (%%SORGLQ M-REF11934 N-REF11935 K-REF11936 A-REF11937
       LDA-REF11938 TAU-REF11939 WORK-REF11940 LWORK-REF11941
       INFO-REF11942))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DORCSD "dorcsd_")
  ((JOBU1 (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (JOBU2 (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (JOBV1T (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (JOBV2T (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (SIGNS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (P :FOREIGN-ADDRESS) (Q :FOREIGN-ADDRESS)
   (X11 :FOREIGN-ADDRESS) (LDX11 :FOREIGN-ADDRESS)
   (X12 :FOREIGN-ADDRESS) (LDX12 :FOREIGN-ADDRESS)
   (X21 :FOREIGN-ADDRESS) (LDX21 :FOREIGN-ADDRESS)
   (X22 :FOREIGN-ADDRESS) (LDX22 :FOREIGN-ADDRESS)
   (THETA :FOREIGN-ADDRESS) (U1 :FOREIGN-ADDRESS)
   (LDU1 :FOREIGN-ADDRESS) (U2 :FOREIGN-ADDRESS)
   (LDU2 :FOREIGN-ADDRESS) (V1T :FOREIGN-ADDRESS)
   (LDV1T :FOREIGN-ADDRESS) (V2T :FOREIGN-ADDRESS)
   (LDV2T :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (IWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DORCSD
    (JOBU1 JOBU2 JOBV1T JOBV2T TRANS SIGNS M P Q X11 LDX11 X12 LDX12
     X21 LDX21 X22 LDX22 THETA U1 LDU1 U2 LDU2 V1T LDV1T V2T LDV2T WORK
     LWORK IWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DORCSD)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBU1)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBU2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBV1T)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBV2T)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIGNS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) P)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) Q)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X11)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX11)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X12)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX12)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X21)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX21)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X22)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX22)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) THETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) U1)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDU1)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) U2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDU2)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) V1T)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDV1T)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) V2T)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDV2T)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11949 ':INT32) (P-REF11950 ':INT32)
                              (Q-REF11951 ':INT32)
                              (LDX11-REF11953 ':INT32)
                              (LDX12-REF11955 ':INT32)
                              (LDX21-REF11957 ':INT32)
                              (LDX22-REF11959 ':INT32)
                              (LDU1-REF11962 ':INT32)
                              (LDU2-REF11964 ':INT32)
                              (LDV1T-REF11966 ':INT32)
                              (LDV2T-REF11968 ':INT32)
                              (LWORK-REF11970 ':INT32)
                              (INFO-REF11972 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11949 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF P-REF11950 :INT32) P)
    (COMMON-LISP:SETF (CFFI:MEM-REF Q-REF11951 :INT32) Q)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX11-REF11953 :INT32) LDX11)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX12-REF11955 :INT32) LDX12)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX21-REF11957 :INT32) LDX21)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX22-REF11959 :INT32) LDX22)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDU1-REF11962 :INT32) LDU1)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDU2-REF11964 :INT32) LDU2)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDV1T-REF11966 :INT32) LDV1T)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDV2T-REF11968 :INT32) LDV2T)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF11970 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11972 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X11-REF11952 X11)
                                            (X12-REF11954 X12)
                                            (X21-REF11956 X21)
                                            (X22-REF11958 X22)
                                            (THETA-REF11960 THETA)
                                            (U1-REF11961 U1)
                                            (U2-REF11963 U2)
                                            (V1T-REF11965 V1T)
                                            (V2T-REF11967 V2T)
                                            (WORK-REF11969 WORK)
                                            (IWORK-REF11971 IWORK))
      (%%DORCSD JOBU1 JOBU2 JOBV1T JOBV2T TRANS SIGNS M-REF11949
       P-REF11950 Q-REF11951 X11-REF11952 LDX11-REF11953 X12-REF11954
       LDX12-REF11955 X21-REF11956 LDX21-REF11957 X22-REF11958
       LDX22-REF11959 THETA-REF11960 U1-REF11961 LDU1-REF11962
       U2-REF11963 LDU2-REF11964 V1T-REF11965 LDV1T-REF11966
       V2T-REF11967 LDV2T-REF11968 WORK-REF11969 LWORK-REF11970
       IWORK-REF11971 INFO-REF11972))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHBTRD "zhbtrd_")
  ((VECT (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (KD :FOREIGN-ADDRESS) (AB :FOREIGN-ADDRESS) (LDAB :FOREIGN-ADDRESS)
   (D :FOREIGN-ADDRESS) (E :FOREIGN-ADDRESS) (Q :FOREIGN-ADDRESS)
   (LDQ :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHBTRD (VECT UPLO N KD AB LDAB D E Q LDQ WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHBTRD)
   (COMMON-LISP:TYPE COMMON-LISP:STRING VECT)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KD)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) E)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    Q)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDQ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11975 ':INT32)
                              (KD-REF11976 ':INT32)
                              (LDAB-REF11978 ':INT32)
                              (LDQ-REF11982 ':INT32)
                              (INFO-REF11984 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11975 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KD-REF11976 :INT32) KD)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAB-REF11978 :INT32) LDAB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDQ-REF11982 :INT32) LDQ)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11984 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AB-REF11977 AB)
                                            (D-REF11979 D)
                                            (E-REF11980 E)
                                            (Q-REF11981 Q)
                                            (WORK-REF11983 WORK))
      (%%ZHBTRD VECT UPLO N-REF11975 KD-REF11976 AB-REF11977
       LDAB-REF11978 D-REF11979 E-REF11980 Q-REF11981 LDQ-REF11982
       WORK-REF11983 INFO-REF11984))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DTPTRI "dtptri_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (AP :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DTPTRI (UPLO DIAG N AP INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTPTRI)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AP)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF11987 ':INT32)
                              (INFO-REF11989 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11987 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF11989 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF11988 AP))
      (%%DTPTRI UPLO DIAG N-REF11987 AP-REF11988 INFO-REF11989))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CGESDD "cgesdd_")
  ((JOBZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (S :FOREIGN-ADDRESS) (U :FOREIGN-ADDRESS) (LDU :FOREIGN-ADDRESS)
   (VT :FOREIGN-ADDRESS) (LDVT :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (RWORK :FOREIGN-ADDRESS) (IWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CGESDD
    (JOBZ M N A LDA S U LDU VT LDVT WORK LWORK RWORK IWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGESDD)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBZ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) S)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    U)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    VT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDVT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF11991 ':INT32) (N-REF11992 ':INT32)
                              (LDA-REF11994 ':INT32)
                              (LDU-REF11997 ':INT32)
                              (LDVT-REF11999 ':INT32)
                              (LWORK-REF12001 ':INT32)
                              (INFO-REF12004 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF11991 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF11992 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF11994 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDU-REF11997 :INT32) LDU)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDVT-REF11999 :INT32) LDVT)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12001 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12004 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF11993 A)
                                            (S-REF11995 S)
                                            (U-REF11996 U)
                                            (VT-REF11998 VT)
                                            (WORK-REF12000 WORK)
                                            (RWORK-REF12002 RWORK)
                                            (IWORK-REF12003 IWORK))
      (%%CGESDD JOBZ M-REF11991 N-REF11992 A-REF11993 LDA-REF11994
       S-REF11995 U-REF11996 LDU-REF11997 VT-REF11998 LDVT-REF11999
       WORK-REF12000 LWORK-REF12001 RWORK-REF12002 IWORK-REF12003
       INFO-REF12004))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SLAQPS "slaqps_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (OFFSET :FOREIGN-ADDRESS)
   (NB :FOREIGN-ADDRESS) (KB :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (JPVT :FOREIGN-ADDRESS)
   (TAU :FOREIGN-ADDRESS) (VN1 :FOREIGN-ADDRESS) (VN2 :FOREIGN-ADDRESS)
   (AUXV :FOREIGN-ADDRESS) (F :FOREIGN-ADDRESS) (LDF :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SLAQPS
    (M N OFFSET NB KB A LDA JPVT TAU VN1 VN2 AUXV F LDF)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SLAQPS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) OFFSET)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    JPVT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) VN1)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) VN2)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) AUXV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) F)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDF))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12005 ':INT32) (N-REF12006 ':INT32)
                              (OFFSET-REF12007 ':INT32)
                              (NB-REF12008 ':INT32)
                              (KB-REF12009 ':INT32)
                              (LDA-REF12011 ':INT32)
                              (LDF-REF12018 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12005 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12006 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF OFFSET-REF12007 :INT32) OFFSET)
    (COMMON-LISP:SETF (CFFI:MEM-REF NB-REF12008 :INT32) NB)
    (COMMON-LISP:SETF (CFFI:MEM-REF KB-REF12009 :INT32) KB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12011 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDF-REF12018 :INT32) LDF)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12010 A)
                                            (JPVT-REF12012 JPVT)
                                            (TAU-REF12013 TAU)
                                            (VN1-REF12014 VN1)
                                            (VN2-REF12015 VN2)
                                            (AUXV-REF12016 AUXV)
                                            (F-REF12017 F))
      (%%SLAQPS M-REF12005 N-REF12006 OFFSET-REF12007 NB-REF12008
       KB-REF12009 A-REF12010 LDA-REF12011 JPVT-REF12012 TAU-REF12013
       VN1-REF12014 VN2-REF12015 AUXV-REF12016 F-REF12017
       LDF-REF12018))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CGEHRD "cgehrd_")
  ((N :FOREIGN-ADDRESS) (ILO :FOREIGN-ADDRESS) (IHI :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CGEHRD (N ILO IHI A LDA TAU WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGEHRD)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ILO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IHI)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12019 ':INT32)
                              (ILO-REF12020 ':INT32)
                              (IHI-REF12021 ':INT32)
                              (LDA-REF12023 ':INT32)
                              (LWORK-REF12026 ':INT32)
                              (INFO-REF12027 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12019 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ILO-REF12020 :INT32) ILO)
    (COMMON-LISP:SETF (CFFI:MEM-REF IHI-REF12021 :INT32) IHI)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12023 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12026 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12027 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12022 A)
                                            (TAU-REF12024 TAU)
                                            (WORK-REF12025 WORK))
      (%%CGEHRD N-REF12019 ILO-REF12020 IHI-REF12021 A-REF12022
       LDA-REF12023 TAU-REF12024 WORK-REF12025 LWORK-REF12026
       INFO-REF12027))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CHPSVX "chpsvx_")
  ((FACT (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (AP :FOREIGN-ADDRESS) (AFP :FOREIGN-ADDRESS)
   (IPIV :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (LDX :FOREIGN-ADDRESS) (RCOND :FOREIGN-ADDRESS)
   (FERR :FOREIGN-ADDRESS) (BERR :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (RWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CHPSVX
    (FACT UPLO N NRHS AP AFP IPIV B LDB X LDX RCOND FERR BERR WORK
     RWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHPSVX)
   (COMMON-LISP:TYPE COMMON-LISP:STRING FACT)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    AFP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT RCOND)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) FERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) BERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12030 ':INT32)
                              (NRHS-REF12031 ':INT32)
                              (LDB-REF12036 ':INT32)
                              (LDX-REF12038 ':INT32)
                              (RCOND-REF12039 ':FLOAT)
                              (INFO-REF12044 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12030 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF12031 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF12036 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX-REF12038 :INT32) LDX)
    (COMMON-LISP:SETF (CFFI:MEM-REF RCOND-REF12039 :FLOAT) RCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12044 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF12032 AP)
                                            (AFP-REF12033 AFP)
                                            (IPIV-REF12034 IPIV)
                                            (B-REF12035 B)
                                            (X-REF12037 X)
                                            (FERR-REF12040 FERR)
                                            (BERR-REF12041 BERR)
                                            (WORK-REF12042 WORK)
                                            (RWORK-REF12043 RWORK))
      (%%CHPSVX FACT UPLO N-REF12030 NRHS-REF12031 AP-REF12032
       AFP-REF12033 IPIV-REF12034 B-REF12035 LDB-REF12036 X-REF12037
       LDX-REF12038 RCOND-REF12039 FERR-REF12040 BERR-REF12041
       WORK-REF12042 RWORK-REF12043 INFO-REF12044))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SORGQL "sorgql_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SORGQL (M N K A LDA TAU WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SORGQL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12045 ':INT32) (N-REF12046 ':INT32)
                              (K-REF12047 ':INT32)
                              (LDA-REF12049 ':INT32)
                              (LWORK-REF12052 ':INT32)
                              (INFO-REF12053 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12045 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12046 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF12047 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12049 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12052 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12053 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12048 A)
                                            (TAU-REF12050 TAU)
                                            (WORK-REF12051 WORK))
      (%%SORGQL M-REF12045 N-REF12046 K-REF12047 A-REF12048
       LDA-REF12049 TAU-REF12050 WORK-REF12051 LWORK-REF12052
       INFO-REF12053))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SLAED6 "slaed6_")
  ((KNITER :FOREIGN-ADDRESS) (ORGATI :FOREIGN-ADDRESS)
   (RHO :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS) (Z :FOREIGN-ADDRESS)
   (FINIT :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SLAED6 (KNITER ORGATI RHO D Z FINIT TAU INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SLAED6)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KNITER)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ORGATI)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT RHO)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Z)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT FINIT)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT TAU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((KNITER-REF12054 ':INT32)
                              (ORGATI-REF12055 ':INT32)
                              (RHO-REF12056 ':FLOAT)
                              (FINIT-REF12059 ':FLOAT)
                              (TAU-REF12060 ':FLOAT)
                              (INFO-REF12061 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF KNITER-REF12054 :INT32) KNITER)
    (COMMON-LISP:SETF (CFFI:MEM-REF ORGATI-REF12055 :INT32) ORGATI)
    (COMMON-LISP:SETF (CFFI:MEM-REF RHO-REF12056 :FLOAT) RHO)
    (COMMON-LISP:SETF (CFFI:MEM-REF FINIT-REF12059 :FLOAT) FINIT)
    (COMMON-LISP:SETF (CFFI:MEM-REF TAU-REF12060 :FLOAT) TAU)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12061 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((D-REF12057 D)
                                            (Z-REF12058 Z))
      (%%SLAED6 KNITER-REF12054 ORGATI-REF12055 RHO-REF12056 D-REF12057
       Z-REF12058 FINIT-REF12059 TAU-REF12060 INFO-REF12061))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DGEMLQ "dgemlq_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (T :FOREIGN-ADDRESS)
   (TSIZE :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DGEMLQ
    (SIDE TRANS M N K A LDA T TSIZE C LDC WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGEMLQ)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) T)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) TSIZE)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12064 ':INT32) (N-REF12065 ':INT32)
                              (K-REF12066 ':INT32)
                              (LDA-REF12068 ':INT32)
                              (TSIZE-REF12070 ':INT32)
                              (LDC-REF12072 ':INT32)
                              (LWORK-REF12074 ':INT32)
                              (INFO-REF12075 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12064 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12065 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF12066 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12068 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF TSIZE-REF12070 :INT32) TSIZE)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF12072 :INT32) LDC)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12074 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12075 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12067 A)
                                            (T-REF12069 T)
                                            (C-REF12071 C)
                                            (WORK-REF12073 WORK))
      (%%DGEMLQ SIDE TRANS M-REF12064 N-REF12065 K-REF12066 A-REF12067
       LDA-REF12068 T-REF12069 TSIZE-REF12070 C-REF12071 LDC-REF12072
       WORK-REF12073 LWORK-REF12074 INFO-REF12075))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SSYSV_RK "ssysv_rk_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (E :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SSYSV_RK
    (UPLO N NRHS A LDA E IPIV B LDB WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYSV_RK)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) E)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12077 ':INT32)
                              (NRHS-REF12078 ':INT32)
                              (LDA-REF12080 ':INT32)
                              (LDB-REF12084 ':INT32)
                              (LWORK-REF12086 ':INT32)
                              (INFO-REF12087 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12077 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF12078 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12080 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF12084 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12086 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12087 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12079 A)
                                            (E-REF12081 E)
                                            (IPIV-REF12082 IPIV)
                                            (B-REF12083 B)
                                            (WORK-REF12085 WORK))
      (%%SSYSV_RK UPLO N-REF12077 NRHS-REF12078 A-REF12079 LDA-REF12080
       E-REF12081 IPIV-REF12082 B-REF12083 LDB-REF12084 WORK-REF12085
       LWORK-REF12086 INFO-REF12087))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CLATRS "clatrs_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (NORMIN (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (SCALE :FOREIGN-ADDRESS)
   (CNORM :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CLATRS
    (UPLO TRANS DIAG NORMIN N A LDA X SCALE CNORM INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CLATRS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE COMMON-LISP:STRING NORMIN)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SCALE)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) CNORM)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12092 ':INT32)
                              (LDA-REF12094 ':INT32)
                              (SCALE-REF12096 ':FLOAT)
                              (INFO-REF12098 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12092 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12094 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF SCALE-REF12096 :FLOAT) SCALE)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12098 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12093 A)
                                            (X-REF12095 X)
                                            (CNORM-REF12097 CNORM))
      (%%CLATRS UPLO TRANS DIAG NORMIN N-REF12092 A-REF12093
       LDA-REF12094 X-REF12095 SCALE-REF12096 CNORM-REF12097
       INFO-REF12098))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CHETF2_RK "chetf2_rk_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (E :FOREIGN-ADDRESS)
   (IPIV :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CHETF2_RK (UPLO N A LDA E IPIV INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHETF2_RK)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    E)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12100 ':INT32)
                              (LDA-REF12102 ':INT32)
                              (INFO-REF12105 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12100 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12102 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12105 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12101 A)
                                            (E-REF12103 E)
                                            (IPIV-REF12104 IPIV))
      (%%CHETF2_RK UPLO N-REF12100 A-REF12101 LDA-REF12102 E-REF12103
       IPIV-REF12104 INFO-REF12105))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CPTTRS "cpttrs_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS) (E :FOREIGN-ADDRESS)
   (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CPTTRS (UPLO N NRHS D E B LDB INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CPTTRS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    E)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12107 ':INT32)
                              (NRHS-REF12108 ':INT32)
                              (LDB-REF12112 ':INT32)
                              (INFO-REF12113 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12107 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF12108 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF12112 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12113 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((D-REF12109 D)
                                            (E-REF12110 E)
                                            (B-REF12111 B))
      (%%CPTTRS UPLO N-REF12107 NRHS-REF12108 D-REF12109 E-REF12110
       B-REF12111 LDB-REF12112 INFO-REF12113))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%IPARMQ "iparmq_")
  ((ISPEC :FOREIGN-ADDRESS)
   (NAME (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (OPTS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ILO :FOREIGN-ADDRESS) (IHI :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS))
  :RETURNING :INT :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %IPARMQ (ISPEC NAME OPTS N ILO IHI LWORK)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%IPARMQ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ISPEC)
   (COMMON-LISP:TYPE COMMON-LISP:STRING NAME)
   (COMMON-LISP:TYPE COMMON-LISP:STRING OPTS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ILO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IHI)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK))
  (CFFI:WITH-FOREIGN-OBJECTS ((ISPEC-REF12114 ':INT32)
                              (N-REF12117 ':INT32)
                              (ILO-REF12118 ':INT32)
                              (IHI-REF12119 ':INT32)
                              (LWORK-REF12120 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF ISPEC-REF12114 :INT32) ISPEC)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12117 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ILO-REF12118 :INT32) ILO)
    (COMMON-LISP:SETF (CFFI:MEM-REF IHI-REF12119 :INT32) IHI)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12120 :INT32) LWORK)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%IPARMQ ISPEC-REF12114 NAME OPTS N-REF12117 ILO-REF12118
       IHI-REF12119 LWORK-REF12120))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SLARFT "slarft_")
  ((DIRECT (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (STOREV (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS) (V :FOREIGN-ADDRESS)
   (LDV :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS) (T :FOREIGN-ADDRESS)
   (LDT :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SLARFT (DIRECT STOREV N K V LDV TAU T LDT)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SLARFT)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIRECT)
   (COMMON-LISP:TYPE COMMON-LISP:STRING STOREV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) V)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) T)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDT))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12123 ':INT32) (K-REF12124 ':INT32)
                              (LDV-REF12126 ':INT32)
                              (LDT-REF12129 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12123 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF12124 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDV-REF12126 :INT32) LDV)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDT-REF12129 :INT32) LDT)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((V-REF12125 V)
                                            (TAU-REF12127 TAU)
                                            (T-REF12128 T))
      (%%SLARFT DIRECT STOREV N-REF12123 K-REF12124 V-REF12125
       LDV-REF12126 TAU-REF12127 T-REF12128 LDT-REF12129))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SLAG2D "slag2d_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (SA :FOREIGN-ADDRESS)
   (LDSA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SLAG2D (M N SA LDSA A LDA INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SLAG2D)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SA)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDSA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12130 ':INT32) (N-REF12131 ':INT32)
                              (LDSA-REF12133 ':INT32)
                              (LDA-REF12135 ':INT32)
                              (INFO-REF12136 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12130 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12131 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDSA-REF12133 :INT32) LDSA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12135 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12136 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SA-REF12132 SA)
                                            (A-REF12134 A))
      (%%SLAG2D M-REF12130 N-REF12131 SA-REF12132 LDSA-REF12133
       A-REF12134 LDA-REF12135 INFO-REF12136))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CTPRFB "ctprfb_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIRECT (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (STOREV (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (L :FOREIGN-ADDRESS) (V :FOREIGN-ADDRESS) (LDV :FOREIGN-ADDRESS)
   (T :FOREIGN-ADDRESS) (LDT :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LDWORK :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CTPRFB
    (SIDE TRANS DIRECT STOREV M N K L V LDV T LDT A LDA B LDB WORK
     LDWORK)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTPRFB)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIRECT)
   (COMMON-LISP:TYPE COMMON-LISP:STRING STOREV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) L)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    V)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    T)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDWORK))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12141 ':INT32) (N-REF12142 ':INT32)
                              (K-REF12143 ':INT32) (L-REF12144 ':INT32)
                              (LDV-REF12146 ':INT32)
                              (LDT-REF12148 ':INT32)
                              (LDA-REF12150 ':INT32)
                              (LDB-REF12152 ':INT32)
                              (LDWORK-REF12154 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12141 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12142 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF12143 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF L-REF12144 :INT32) L)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDV-REF12146 :INT32) LDV)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDT-REF12148 :INT32) LDT)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12150 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF12152 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDWORK-REF12154 :INT32) LDWORK)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((V-REF12145 V)
                                            (T-REF12147 T)
                                            (A-REF12149 A)
                                            (B-REF12151 B)
                                            (WORK-REF12153 WORK))
      (%%CTPRFB SIDE TRANS DIRECT STOREV M-REF12141 N-REF12142
       K-REF12143 L-REF12144 V-REF12145 LDV-REF12146 T-REF12147
       LDT-REF12148 A-REF12149 LDA-REF12150 B-REF12151 LDB-REF12152
       WORK-REF12153 LDWORK-REF12154))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHBEV "zhbev_")
  ((JOBZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (KD :FOREIGN-ADDRESS) (AB :FOREIGN-ADDRESS) (LDAB :FOREIGN-ADDRESS)
   (W :FOREIGN-ADDRESS) (Z :FOREIGN-ADDRESS) (LDZ :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (RWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHBEV
    (JOBZ UPLO N KD AB LDAB W Z LDZ WORK RWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHBEV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBZ)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KD)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) W)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDZ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12157 ':INT32)
                              (KD-REF12158 ':INT32)
                              (LDAB-REF12160 ':INT32)
                              (LDZ-REF12163 ':INT32)
                              (INFO-REF12166 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12157 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KD-REF12158 :INT32) KD)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAB-REF12160 :INT32) LDAB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDZ-REF12163 :INT32) LDZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12166 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AB-REF12159 AB)
                                            (W-REF12161 W)
                                            (Z-REF12162 Z)
                                            (WORK-REF12164 WORK)
                                            (RWORK-REF12165 RWORK))
      (%%ZHBEV JOBZ UPLO N-REF12157 KD-REF12158 AB-REF12159
       LDAB-REF12160 W-REF12161 Z-REF12162 LDZ-REF12163 WORK-REF12164
       RWORK-REF12165 INFO-REF12166))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CGERQ2 "cgerq2_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CGERQ2 (M N A LDA TAU WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGERQ2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12167 ':INT32) (N-REF12168 ':INT32)
                              (LDA-REF12170 ':INT32)
                              (INFO-REF12173 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12167 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12168 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12170 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12173 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12169 A)
                                            (TAU-REF12171 TAU)
                                            (WORK-REF12172 WORK))
      (%%CGERQ2 M-REF12167 N-REF12168 A-REF12169 LDA-REF12170
       TAU-REF12171 WORK-REF12172 INFO-REF12173))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SLASET "slaset_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (BETA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SLASET (UPLO M N ALPHA BETA A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SLASET)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12175 ':INT32) (N-REF12176 ':INT32)
                              (ALPHA-REF12177 ':FLOAT)
                              (BETA-REF12178 ':FLOAT)
                              (LDA-REF12180 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12175 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12176 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF12177 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF12178 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12180 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12179 A))
      (%%SLASET UPLO M-REF12175 N-REF12176 ALPHA-REF12177 BETA-REF12178
       A-REF12179 LDA-REF12180))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHETRF_ROOK "zhetrf_rook_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHETRF_ROOK (UPLO N A LDA IPIV WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHETRF_ROOK)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12182 ':INT32)
                              (LDA-REF12184 ':INT32)
                              (LWORK-REF12187 ':INT32)
                              (INFO-REF12188 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12182 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12184 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12187 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12188 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12183 A)
                                            (IPIV-REF12185 IPIV)
                                            (WORK-REF12186 WORK))
      (%%ZHETRF_ROOK UPLO N-REF12182 A-REF12183 LDA-REF12184
       IPIV-REF12185 WORK-REF12186 LWORK-REF12187 INFO-REF12188))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZPTCON "zptcon_")
  ((N :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS) (E :FOREIGN-ADDRESS)
   (ANORM :FOREIGN-ADDRESS) (RCOND :FOREIGN-ADDRESS)
   (RWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZPTCON (N D E ANORM RCOND RWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZPTCON)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    E)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ANORM)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT RCOND)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12189 ':INT32)
                              (ANORM-REF12192 ':DOUBLE)
                              (RCOND-REF12193 ':DOUBLE)
                              (INFO-REF12195 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12189 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ANORM-REF12192 :DOUBLE) ANORM)
    (COMMON-LISP:SETF (CFFI:MEM-REF RCOND-REF12193 :DOUBLE) RCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12195 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((D-REF12190 D)
                                            (E-REF12191 E)
                                            (RWORK-REF12194 RWORK))
      (%%ZPTCON N-REF12189 D-REF12190 E-REF12191 ANORM-REF12192
       RCOND-REF12193 RWORK-REF12194 INFO-REF12195))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DGGHRD "dgghrd_")
  ((COMPQ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (COMPZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (ILO :FOREIGN-ADDRESS) (IHI :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (Q :FOREIGN-ADDRESS) (LDQ :FOREIGN-ADDRESS)
   (Z :FOREIGN-ADDRESS) (LDZ :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DGGHRD
    (COMPQ COMPZ N ILO IHI A LDA B LDB Q LDQ Z LDZ INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGGHRD)
   (COMMON-LISP:TYPE COMMON-LISP:STRING COMPQ)
   (COMMON-LISP:TYPE COMMON-LISP:STRING COMPZ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ILO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IHI)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Q)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDQ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDZ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12198 ':INT32)
                              (ILO-REF12199 ':INT32)
                              (IHI-REF12200 ':INT32)
                              (LDA-REF12202 ':INT32)
                              (LDB-REF12204 ':INT32)
                              (LDQ-REF12206 ':INT32)
                              (LDZ-REF12208 ':INT32)
                              (INFO-REF12209 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12198 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ILO-REF12199 :INT32) ILO)
    (COMMON-LISP:SETF (CFFI:MEM-REF IHI-REF12200 :INT32) IHI)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12202 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF12204 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDQ-REF12206 :INT32) LDQ)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDZ-REF12208 :INT32) LDZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12209 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12201 A)
                                            (B-REF12203 B)
                                            (Q-REF12205 Q)
                                            (Z-REF12207 Z))
      (%%DGGHRD COMPQ COMPZ N-REF12198 ILO-REF12199 IHI-REF12200
       A-REF12201 LDA-REF12202 B-REF12203 LDB-REF12204 Q-REF12205
       LDQ-REF12206 Z-REF12207 LDZ-REF12208 INFO-REF12209))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CSTEIN "cstein_")
  ((N :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS) (E :FOREIGN-ADDRESS)
   (M :FOREIGN-ADDRESS) (W :FOREIGN-ADDRESS) (IBLOCK :FOREIGN-ADDRESS)
   (ISPLIT :FOREIGN-ADDRESS) (Z :FOREIGN-ADDRESS)
   (LDZ :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (IWORK :FOREIGN-ADDRESS) (IFAIL :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CSTEIN
    (N D E M W IBLOCK ISPLIT Z LDZ WORK IWORK IFAIL INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSTEIN)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) E)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) W)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IBLOCK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    ISPLIT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDZ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IFAIL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12210 ':INT32) (M-REF12213 ':INT32)
                              (LDZ-REF12218 ':INT32)
                              (INFO-REF12222 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12210 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12213 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDZ-REF12218 :INT32) LDZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12222 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((D-REF12211 D)
                                            (E-REF12212 E)
                                            (W-REF12214 W)
                                            (IBLOCK-REF12215 IBLOCK)
                                            (ISPLIT-REF12216 ISPLIT)
                                            (Z-REF12217 Z)
                                            (WORK-REF12219 WORK)
                                            (IWORK-REF12220 IWORK)
                                            (IFAIL-REF12221 IFAIL))
      (%%CSTEIN N-REF12210 D-REF12211 E-REF12212 M-REF12213 W-REF12214
       IBLOCK-REF12215 ISPLIT-REF12216 Z-REF12217 LDZ-REF12218
       WORK-REF12219 IWORK-REF12220 IFAIL-REF12221 INFO-REF12222))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DGELQT3 "dgelqt3_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (T :FOREIGN-ADDRESS) (LDT :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DGELQT3 (M N A LDA T LDT INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGELQT3)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) T)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12223 ':INT32) (N-REF12224 ':INT32)
                              (LDA-REF12226 ':INT32)
                              (LDT-REF12228 ':INT32)
                              (INFO-REF12229 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12223 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12224 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12226 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDT-REF12228 :INT32) LDT)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12229 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12225 A)
                                            (T-REF12227 T))
      (%%DGELQT3 M-REF12223 N-REF12224 A-REF12225 LDA-REF12226
       T-REF12227 LDT-REF12228 INFO-REF12229))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZGEBAK "zgebak_")
  ((JOB (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ILO :FOREIGN-ADDRESS) (IHI :FOREIGN-ADDRESS)
   (SCALE :FOREIGN-ADDRESS) (M :FOREIGN-ADDRESS) (V :FOREIGN-ADDRESS)
   (LDV :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZGEBAK (JOB SIDE N ILO IHI SCALE M V LDV INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGEBAK)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOB)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ILO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IHI)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) SCALE)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    V)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12232 ':INT32)
                              (ILO-REF12233 ':INT32)
                              (IHI-REF12234 ':INT32)
                              (M-REF12236 ':INT32)
                              (LDV-REF12238 ':INT32)
                              (INFO-REF12239 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12232 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ILO-REF12233 :INT32) ILO)
    (COMMON-LISP:SETF (CFFI:MEM-REF IHI-REF12234 :INT32) IHI)
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12236 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDV-REF12238 :INT32) LDV)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12239 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SCALE-REF12235 SCALE)
                                            (V-REF12237 V))
      (%%ZGEBAK JOB SIDE N-REF12232 ILO-REF12233 IHI-REF12234
       SCALE-REF12235 M-REF12236 V-REF12237 LDV-REF12238
       INFO-REF12239))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DPBTRS "dpbtrs_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (KD :FOREIGN-ADDRESS) (NRHS :FOREIGN-ADDRESS) (AB :FOREIGN-ADDRESS)
   (LDAB :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DPBTRS (UPLO N KD NRHS AB LDAB B LDB INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DPBTRS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KD)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12241 ':INT32)
                              (KD-REF12242 ':INT32)
                              (NRHS-REF12243 ':INT32)
                              (LDAB-REF12245 ':INT32)
                              (LDB-REF12247 ':INT32)
                              (INFO-REF12248 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12241 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KD-REF12242 :INT32) KD)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF12243 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAB-REF12245 :INT32) LDAB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF12247 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12248 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AB-REF12244 AB)
                                            (B-REF12246 B))
      (%%DPBTRS UPLO N-REF12241 KD-REF12242 NRHS-REF12243 AB-REF12244
       LDAB-REF12245 B-REF12246 LDB-REF12247 INFO-REF12248))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CPBRFS "cpbrfs_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (KD :FOREIGN-ADDRESS) (NRHS :FOREIGN-ADDRESS) (AB :FOREIGN-ADDRESS)
   (LDAB :FOREIGN-ADDRESS) (AFB :FOREIGN-ADDRESS)
   (LDAFB :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (LDX :FOREIGN-ADDRESS) (FERR :FOREIGN-ADDRESS)
   (BERR :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (RWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CPBRFS
    (UPLO N KD NRHS AB LDAB AFB LDAFB B LDB X LDX FERR BERR WORK RWORK
     INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CPBRFS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KD)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    AB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    AFB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAFB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) FERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) BERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12250 ':INT32)
                              (KD-REF12251 ':INT32)
                              (NRHS-REF12252 ':INT32)
                              (LDAB-REF12254 ':INT32)
                              (LDAFB-REF12256 ':INT32)
                              (LDB-REF12258 ':INT32)
                              (LDX-REF12260 ':INT32)
                              (INFO-REF12265 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12250 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KD-REF12251 :INT32) KD)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF12252 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAB-REF12254 :INT32) LDAB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAFB-REF12256 :INT32) LDAFB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF12258 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX-REF12260 :INT32) LDX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12265 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AB-REF12253 AB)
                                            (AFB-REF12255 AFB)
                                            (B-REF12257 B)
                                            (X-REF12259 X)
                                            (FERR-REF12261 FERR)
                                            (BERR-REF12262 BERR)
                                            (WORK-REF12263 WORK)
                                            (RWORK-REF12264 RWORK))
      (%%CPBRFS UPLO N-REF12250 KD-REF12251 NRHS-REF12252 AB-REF12253
       LDAB-REF12254 AFB-REF12255 LDAFB-REF12256 B-REF12257
       LDB-REF12258 X-REF12259 LDX-REF12260 FERR-REF12261 BERR-REF12262
       WORK-REF12263 RWORK-REF12264 INFO-REF12265))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SGEESX "sgeesx_")
  ((JOBVS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (SORT (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (SELECT :FOREIGN-ADDRESS)
   (SENSE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (SDIM :FOREIGN-ADDRESS) (WR :FOREIGN-ADDRESS) (WI :FOREIGN-ADDRESS)
   (VS :FOREIGN-ADDRESS) (LDVS :FOREIGN-ADDRESS)
   (RCONDE :FOREIGN-ADDRESS) (RCONDV :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (IWORK :FOREIGN-ADDRESS) (LIWORK :FOREIGN-ADDRESS)
   (BWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SGEESX
    (JOBVS SORT SELECT SENSE N A LDA SDIM WR WI VS LDVS RCONDE RCONDV
     WORK LWORK IWORK LIWORK BWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SGEESX)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBVS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SORT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) SELECT)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SENSE)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) SDIM)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WI)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) VS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDVS)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT RCONDE)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT RCONDV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LIWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    BWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((SELECT-REF12268 ':INT32)
                              (N-REF12270 ':INT32)
                              (LDA-REF12272 ':INT32)
                              (SDIM-REF12273 ':INT32)
                              (LDVS-REF12277 ':INT32)
                              (RCONDE-REF12278 ':FLOAT)
                              (RCONDV-REF12279 ':FLOAT)
                              (LWORK-REF12281 ':INT32)
                              (LIWORK-REF12283 ':INT32)
                              (INFO-REF12285 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF SELECT-REF12268 :INT32) SELECT)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12270 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12272 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF SDIM-REF12273 :INT32) SDIM)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDVS-REF12277 :INT32) LDVS)
    (COMMON-LISP:SETF (CFFI:MEM-REF RCONDE-REF12278 :FLOAT) RCONDE)
    (COMMON-LISP:SETF (CFFI:MEM-REF RCONDV-REF12279 :FLOAT) RCONDV)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12281 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF LIWORK-REF12283 :INT32) LIWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12285 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12271 A)
                                            (WR-REF12274 WR)
                                            (WI-REF12275 WI)
                                            (VS-REF12276 VS)
                                            (WORK-REF12280 WORK)
                                            (IWORK-REF12282 IWORK)
                                            (BWORK-REF12284 BWORK))
      (%%SGEESX JOBVS SORT SELECT-REF12268 SENSE N-REF12270 A-REF12271
       LDA-REF12272 SDIM-REF12273 WR-REF12274 WI-REF12275 VS-REF12276
       LDVS-REF12277 RCONDE-REF12278 RCONDV-REF12279 WORK-REF12280
       LWORK-REF12281 IWORK-REF12282 LIWORK-REF12283 BWORK-REF12284
       INFO-REF12285))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CHETRI2 "chetri2_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CHETRI2 (UPLO N A LDA IPIV WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHETRI2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12287 ':INT32)
                              (LDA-REF12289 ':INT32)
                              (LWORK-REF12292 ':INT32)
                              (INFO-REF12293 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12287 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12289 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12292 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12293 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12288 A)
                                            (IPIV-REF12290 IPIV)
                                            (WORK-REF12291 WORK))
      (%%CHETRI2 UPLO N-REF12287 A-REF12288 LDA-REF12289 IPIV-REF12290
       WORK-REF12291 LWORK-REF12292 INFO-REF12293))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SLA_WWADDW "sla_wwaddw_")
  ((N :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (W :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SLA_WWADDW (N X Y W)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SLA_WWADDW)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Y)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) W))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12294 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12294 :INT32) N)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF12295 X)
                                            (Y-REF12296 Y)
                                            (W-REF12297 W))
      (%%SLA_WWADDW N-REF12294 X-REF12295 Y-REF12296 W-REF12297))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZUNMR2 "zunmr2_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZUNMR2 (SIDE TRANS M N K A LDA TAU C LDC WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZUNMR2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12300 ':INT32) (N-REF12301 ':INT32)
                              (K-REF12302 ':INT32)
                              (LDA-REF12304 ':INT32)
                              (LDC-REF12307 ':INT32)
                              (INFO-REF12309 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12300 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12301 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF12302 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12304 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF12307 :INT32) LDC)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12309 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12303 A)
                                            (TAU-REF12305 TAU)
                                            (C-REF12306 C)
                                            (WORK-REF12308 WORK))
      (%%ZUNMR2 SIDE TRANS M-REF12300 N-REF12301 K-REF12302 A-REF12303
       LDA-REF12304 TAU-REF12305 C-REF12306 LDC-REF12307 WORK-REF12308
       INFO-REF12309))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CLASSQ "classq_")
  ((N :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (SCALE :FOREIGN-ADDRESS) (SUMSQ :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CLASSQ (N X INCX SCALE SUMSQ)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CLASSQ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SCALE)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SUMSQ))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12310 ':INT32)
                              (INCX-REF12312 ':INT32)
                              (SCALE-REF12313 ':FLOAT)
                              (SUMSQ-REF12314 ':FLOAT))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12310 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF12312 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF SCALE-REF12313 :FLOAT) SCALE)
    (COMMON-LISP:SETF (CFFI:MEM-REF SUMSQ-REF12314 :FLOAT) SUMSQ)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF12311 X))
      (%%CLASSQ N-REF12310 X-REF12311 INCX-REF12312 SCALE-REF12313
       SUMSQ-REF12314))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CLAMTSQR "clamtsqr_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (MB :FOREIGN-ADDRESS) (NB :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (T :FOREIGN-ADDRESS) (LDT :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CLAMTSQR
    (SIDE TRANS M N K MB NB A LDA T LDT C LDC WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CLAMTSQR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) MB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    T)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12317 ':INT32) (N-REF12318 ':INT32)
                              (K-REF12319 ':INT32)
                              (MB-REF12320 ':INT32)
                              (NB-REF12321 ':INT32)
                              (LDA-REF12323 ':INT32)
                              (LDT-REF12325 ':INT32)
                              (LDC-REF12327 ':INT32)
                              (LWORK-REF12329 ':INT32)
                              (INFO-REF12330 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12317 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12318 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF12319 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF MB-REF12320 :INT32) MB)
    (COMMON-LISP:SETF (CFFI:MEM-REF NB-REF12321 :INT32) NB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12323 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDT-REF12325 :INT32) LDT)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF12327 :INT32) LDC)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12329 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12330 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12322 A)
                                            (T-REF12324 T)
                                            (C-REF12326 C)
                                            (WORK-REF12328 WORK))
      (%%CLAMTSQR SIDE TRANS M-REF12317 N-REF12318 K-REF12319
       MB-REF12320 NB-REF12321 A-REF12322 LDA-REF12323 T-REF12324
       LDT-REF12325 C-REF12326 LDC-REF12327 WORK-REF12328
       LWORK-REF12329 INFO-REF12330))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SORMQR "sormqr_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SORMQR
    (SIDE TRANS M N K A LDA TAU C LDC WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SORMQR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12333 ':INT32) (N-REF12334 ':INT32)
                              (K-REF12335 ':INT32)
                              (LDA-REF12337 ':INT32)
                              (LDC-REF12340 ':INT32)
                              (LWORK-REF12342 ':INT32)
                              (INFO-REF12343 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12333 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12334 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF12335 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12337 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF12340 :INT32) LDC)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12342 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12343 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12336 A)
                                            (TAU-REF12338 TAU)
                                            (C-REF12339 C)
                                            (WORK-REF12341 WORK))
      (%%SORMQR SIDE TRANS M-REF12333 N-REF12334 K-REF12335 A-REF12336
       LDA-REF12337 TAU-REF12338 C-REF12339 LDC-REF12340 WORK-REF12341
       LWORK-REF12342 INFO-REF12343))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CLAHEF_RK "clahef_rk_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NB :FOREIGN-ADDRESS) (KB :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (E :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (W :FOREIGN-ADDRESS) (LDW :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CLAHEF_RK (UPLO N NB KB A LDA E IPIV W LDW INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CLAHEF_RK)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    E)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    W)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDW)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12345 ':INT32)
                              (NB-REF12346 ':INT32)
                              (KB-REF12347 ':INT32)
                              (LDA-REF12349 ':INT32)
                              (LDW-REF12353 ':INT32)
                              (INFO-REF12354 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12345 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NB-REF12346 :INT32) NB)
    (COMMON-LISP:SETF (CFFI:MEM-REF KB-REF12347 :INT32) KB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12349 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDW-REF12353 :INT32) LDW)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12354 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12348 A)
                                            (E-REF12350 E)
                                            (IPIV-REF12351 IPIV)
                                            (W-REF12352 W))
      (%%CLAHEF_RK UPLO N-REF12345 NB-REF12346 KB-REF12347 A-REF12348
       LDA-REF12349 E-REF12350 IPIV-REF12351 W-REF12352 LDW-REF12353
       INFO-REF12354))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CLAQSP "claqsp_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (AP :FOREIGN-ADDRESS) (S :FOREIGN-ADDRESS) (SCOND :FOREIGN-ADDRESS)
   (AMAX :FOREIGN-ADDRESS)
   (EQUED (COMMON-LISP:* :CHAR) COMMON-LISP:STRING))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CLAQSP (UPLO N AP S SCOND AMAX EQUED)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CLAQSP)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) S)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SCOND)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT AMAX)
   (COMMON-LISP:TYPE COMMON-LISP:STRING EQUED))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12356 ':INT32)
                              (SCOND-REF12359 ':FLOAT)
                              (AMAX-REF12360 ':FLOAT))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12356 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF SCOND-REF12359 :FLOAT) SCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF AMAX-REF12360 :FLOAT) AMAX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF12357 AP)
                                            (S-REF12358 S))
      (%%CLAQSP UPLO N-REF12356 AP-REF12357 S-REF12358 SCOND-REF12359
       AMAX-REF12360 EQUED))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SLABAD "slabad_")
  ((SMALL :FOREIGN-ADDRESS) (LARGE :FOREIGN-ADDRESS)) :RETURNING :VOID
  :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SLABAD (SMALL LARGE)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SLABAD)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SMALL)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT LARGE))
  (CFFI:WITH-FOREIGN-OBJECTS ((SMALL-REF12362 ':FLOAT)
                              (LARGE-REF12363 ':FLOAT))
    (COMMON-LISP:SETF (CFFI:MEM-REF SMALL-REF12362 :FLOAT) SMALL)
    (COMMON-LISP:SETF (CFFI:MEM-REF LARGE-REF12363 :FLOAT) LARGE)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%SLABAD SMALL-REF12362 LARGE-REF12363))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DLAEIN "dlaein_")
  ((RIGHTV :FOREIGN-ADDRESS) (NOINIT :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (H :FOREIGN-ADDRESS) (LDH :FOREIGN-ADDRESS)
   (WR :FOREIGN-ADDRESS) (WI :FOREIGN-ADDRESS) (VR :FOREIGN-ADDRESS)
   (VI :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (EPS3 :FOREIGN-ADDRESS)
   (SMLNUM :FOREIGN-ADDRESS) (BIGNUM :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DLAEIN
    (RIGHTV NOINIT N H LDH WR WI VR VI B LDB WORK EPS3 SMLNUM BIGNUM
     INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DLAEIN)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) RIGHTV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NOINIT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) H)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDH)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT WR)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT WI)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) VR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) VI)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT EPS3)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT SMLNUM)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BIGNUM)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((RIGHTV-REF12364 ':INT32)
                              (NOINIT-REF12365 ':INT32)
                              (N-REF12366 ':INT32)
                              (LDH-REF12368 ':INT32)
                              (WR-REF12369 ':DOUBLE)
                              (WI-REF12370 ':DOUBLE)
                              (LDB-REF12374 ':INT32)
                              (EPS3-REF12376 ':DOUBLE)
                              (SMLNUM-REF12377 ':DOUBLE)
                              (BIGNUM-REF12378 ':DOUBLE)
                              (INFO-REF12379 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF RIGHTV-REF12364 :INT32) RIGHTV)
    (COMMON-LISP:SETF (CFFI:MEM-REF NOINIT-REF12365 :INT32) NOINIT)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12366 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDH-REF12368 :INT32) LDH)
    (COMMON-LISP:SETF (CFFI:MEM-REF WR-REF12369 :DOUBLE) WR)
    (COMMON-LISP:SETF (CFFI:MEM-REF WI-REF12370 :DOUBLE) WI)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF12374 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF EPS3-REF12376 :DOUBLE) EPS3)
    (COMMON-LISP:SETF (CFFI:MEM-REF SMLNUM-REF12377 :DOUBLE) SMLNUM)
    (COMMON-LISP:SETF (CFFI:MEM-REF BIGNUM-REF12378 :DOUBLE) BIGNUM)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12379 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((H-REF12367 H)
                                            (VR-REF12371 VR)
                                            (VI-REF12372 VI)
                                            (B-REF12373 B)
                                            (WORK-REF12375 WORK))
      (%%DLAEIN RIGHTV-REF12364 NOINIT-REF12365 N-REF12366 H-REF12367
       LDH-REF12368 WR-REF12369 WI-REF12370 VR-REF12371 VI-REF12372
       B-REF12373 LDB-REF12374 WORK-REF12375 EPS3-REF12376
       SMLNUM-REF12377 BIGNUM-REF12378 INFO-REF12379))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SPOEQU "spoequ_")
  ((N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (S :FOREIGN-ADDRESS) (SCOND :FOREIGN-ADDRESS)
   (AMAX :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SPOEQU (N A LDA S SCOND AMAX INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SPOEQU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) S)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SCOND)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT AMAX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12380 ':INT32)
                              (LDA-REF12382 ':INT32)
                              (SCOND-REF12384 ':FLOAT)
                              (AMAX-REF12385 ':FLOAT)
                              (INFO-REF12386 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12380 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12382 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF SCOND-REF12384 :FLOAT) SCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF AMAX-REF12385 :FLOAT) AMAX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12386 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12381 A)
                                            (S-REF12383 S))
      (%%SPOEQU N-REF12380 A-REF12381 LDA-REF12382 S-REF12383
       SCOND-REF12384 AMAX-REF12385 INFO-REF12386))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZSYCON "zsycon_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (ANORM :FOREIGN-ADDRESS) (RCOND :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZSYCON (UPLO N A LDA IPIV ANORM RCOND WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZSYCON)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ANORM)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT RCOND)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12388 ':INT32)
                              (LDA-REF12390 ':INT32)
                              (ANORM-REF12392 ':DOUBLE)
                              (RCOND-REF12393 ':DOUBLE)
                              (INFO-REF12395 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12388 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12390 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF ANORM-REF12392 :DOUBLE) ANORM)
    (COMMON-LISP:SETF (CFFI:MEM-REF RCOND-REF12393 :DOUBLE) RCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12395 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12389 A)
                                            (IPIV-REF12391 IPIV)
                                            (WORK-REF12394 WORK))
      (%%ZSYCON UPLO N-REF12388 A-REF12389 LDA-REF12390 IPIV-REF12391
       ANORM-REF12392 RCOND-REF12393 WORK-REF12394 INFO-REF12395))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZGESVDX "zgesvdx_")
  ((JOBU (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (JOBVT (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (RANGE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (VL :FOREIGN-ADDRESS) (VU :FOREIGN-ADDRESS)
   (IL :FOREIGN-ADDRESS) (IU :FOREIGN-ADDRESS) (NS :FOREIGN-ADDRESS)
   (S :FOREIGN-ADDRESS) (U :FOREIGN-ADDRESS) (LDU :FOREIGN-ADDRESS)
   (VT :FOREIGN-ADDRESS) (LDVT :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (RWORK :FOREIGN-ADDRESS) (IWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZGESVDX
    (JOBU JOBVT RANGE M N A LDA VL VU IL IU NS S U LDU VT LDVT WORK
     LWORK RWORK IWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGESVDX)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBU)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBVT)
   (COMMON-LISP:TYPE COMMON-LISP:STRING RANGE)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT VL)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT VU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) S)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    U)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    VT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDVT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12399 ':INT32) (N-REF12400 ':INT32)
                              (LDA-REF12402 ':INT32)
                              (VL-REF12403 ':DOUBLE)
                              (VU-REF12404 ':DOUBLE)
                              (IL-REF12405 ':INT32)
                              (IU-REF12406 ':INT32)
                              (NS-REF12407 ':INT32)
                              (LDU-REF12410 ':INT32)
                              (LDVT-REF12412 ':INT32)
                              (LWORK-REF12414 ':INT32)
                              (INFO-REF12417 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12399 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12400 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12402 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF VL-REF12403 :DOUBLE) VL)
    (COMMON-LISP:SETF (CFFI:MEM-REF VU-REF12404 :DOUBLE) VU)
    (COMMON-LISP:SETF (CFFI:MEM-REF IL-REF12405 :INT32) IL)
    (COMMON-LISP:SETF (CFFI:MEM-REF IU-REF12406 :INT32) IU)
    (COMMON-LISP:SETF (CFFI:MEM-REF NS-REF12407 :INT32) NS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDU-REF12410 :INT32) LDU)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDVT-REF12412 :INT32) LDVT)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12414 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12417 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12401 A)
                                            (S-REF12408 S)
                                            (U-REF12409 U)
                                            (VT-REF12411 VT)
                                            (WORK-REF12413 WORK)
                                            (RWORK-REF12415 RWORK)
                                            (IWORK-REF12416 IWORK))
      (%%ZGESVDX JOBU JOBVT RANGE M-REF12399 N-REF12400 A-REF12401
       LDA-REF12402 VL-REF12403 VU-REF12404 IL-REF12405 IU-REF12406
       NS-REF12407 S-REF12408 U-REF12409 LDU-REF12410 VT-REF12411
       LDVT-REF12412 WORK-REF12413 LWORK-REF12414 RWORK-REF12415
       IWORK-REF12416 INFO-REF12417))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DORGTSQR "dorgtsqr_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (MB :FOREIGN-ADDRESS)
   (NB :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (T :FOREIGN-ADDRESS) (LDT :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DORGTSQR (M N MB NB A LDA T LDT WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DORGTSQR)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) MB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) T)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12418 ':INT32) (N-REF12419 ':INT32)
                              (MB-REF12420 ':INT32)
                              (NB-REF12421 ':INT32)
                              (LDA-REF12423 ':INT32)
                              (LDT-REF12425 ':INT32)
                              (LWORK-REF12427 ':INT32)
                              (INFO-REF12428 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12418 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12419 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF MB-REF12420 :INT32) MB)
    (COMMON-LISP:SETF (CFFI:MEM-REF NB-REF12421 :INT32) NB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12423 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDT-REF12425 :INT32) LDT)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12427 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12428 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12422 A)
                                            (T-REF12424 T)
                                            (WORK-REF12426 WORK))
      (%%DORGTSQR M-REF12418 N-REF12419 MB-REF12420 NB-REF12421
       A-REF12422 LDA-REF12423 T-REF12424 LDT-REF12425 WORK-REF12426
       LWORK-REF12427 INFO-REF12428))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DGGQRF "dggqrf_")
  ((N :FOREIGN-ADDRESS) (M :FOREIGN-ADDRESS) (P :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (TAUA :FOREIGN-ADDRESS)
   (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS) (TAUB :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DGGQRF
    (N M P A LDA TAUA B LDB TAUB WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGGQRF)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) P)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) TAUA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) TAUB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12429 ':INT32) (M-REF12430 ':INT32)
                              (P-REF12431 ':INT32)
                              (LDA-REF12433 ':INT32)
                              (LDB-REF12436 ':INT32)
                              (LWORK-REF12439 ':INT32)
                              (INFO-REF12440 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12429 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12430 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF P-REF12431 :INT32) P)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12433 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF12436 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12439 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12440 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12432 A)
                                            (TAUA-REF12434 TAUA)
                                            (B-REF12435 B)
                                            (TAUB-REF12437 TAUB)
                                            (WORK-REF12438 WORK))
      (%%DGGQRF N-REF12429 M-REF12430 P-REF12431 A-REF12432
       LDA-REF12433 TAUA-REF12434 B-REF12435 LDB-REF12436 TAUB-REF12437
       WORK-REF12438 LWORK-REF12439 INFO-REF12440))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CPBSV "cpbsv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (KD :FOREIGN-ADDRESS) (NRHS :FOREIGN-ADDRESS) (AB :FOREIGN-ADDRESS)
   (LDAB :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CPBSV (UPLO N KD NRHS AB LDAB B LDB INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CPBSV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KD)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    AB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12442 ':INT32)
                              (KD-REF12443 ':INT32)
                              (NRHS-REF12444 ':INT32)
                              (LDAB-REF12446 ':INT32)
                              (LDB-REF12448 ':INT32)
                              (INFO-REF12449 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12442 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KD-REF12443 :INT32) KD)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF12444 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAB-REF12446 :INT32) LDAB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF12448 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12449 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AB-REF12445 AB)
                                            (B-REF12447 B))
      (%%CPBSV UPLO N-REF12442 KD-REF12443 NRHS-REF12444 AB-REF12445
       LDAB-REF12446 B-REF12447 LDB-REF12448 INFO-REF12449))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SLA_GEAMV "sla_geamv_")
  ((TRANS :FOREIGN-ADDRESS) (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS)
   (Y :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SLA_GEAMV
    (TRANS M N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SLA_GEAMV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((TRANS-REF12450 ':INT32)
                              (M-REF12451 ':INT32) (N-REF12452 ':INT32)
                              (ALPHA-REF12453 ':FLOAT)
                              (LDA-REF12455 ':INT32)
                              (INCX-REF12457 ':INT32)
                              (BETA-REF12458 ':FLOAT)
                              (INCY-REF12460 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF TRANS-REF12450 :INT32) TRANS)
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12451 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12452 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF12453 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12455 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF12457 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF12458 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF12460 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12454 A)
                                            (X-REF12456 X)
                                            (Y-REF12459 Y))
      (%%SLA_GEAMV TRANS-REF12450 M-REF12451 N-REF12452 ALPHA-REF12453
       A-REF12454 LDA-REF12455 X-REF12456 INCX-REF12457 BETA-REF12458
       Y-REF12459 INCY-REF12460))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHETRI2X "zhetri2x_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (NB :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHETRI2X (UPLO N A LDA IPIV WORK NB INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHETRI2X)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12462 ':INT32)
                              (LDA-REF12464 ':INT32)
                              (NB-REF12467 ':INT32)
                              (INFO-REF12468 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12462 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12464 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF NB-REF12467 :INT32) NB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12468 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12463 A)
                                            (IPIV-REF12465 IPIV)
                                            (WORK-REF12466 WORK))
      (%%ZHETRI2X UPLO N-REF12462 A-REF12463 LDA-REF12464 IPIV-REF12465
       WORK-REF12466 NB-REF12467 INFO-REF12468))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZGBCON "zgbcon_")
  ((NORM (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (KL :FOREIGN-ADDRESS) (KU :FOREIGN-ADDRESS) (AB :FOREIGN-ADDRESS)
   (LDAB :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (ANORM :FOREIGN-ADDRESS) (RCOND :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (RWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZGBCON
    (NORM N KL KU AB LDAB IPIV ANORM RCOND WORK RWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGBCON)
   (COMMON-LISP:TYPE COMMON-LISP:STRING NORM)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ANORM)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT RCOND)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12470 ':INT32)
                              (KL-REF12471 ':INT32)
                              (KU-REF12472 ':INT32)
                              (LDAB-REF12474 ':INT32)
                              (ANORM-REF12476 ':DOUBLE)
                              (RCOND-REF12477 ':DOUBLE)
                              (INFO-REF12480 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12470 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KL-REF12471 :INT32) KL)
    (COMMON-LISP:SETF (CFFI:MEM-REF KU-REF12472 :INT32) KU)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAB-REF12474 :INT32) LDAB)
    (COMMON-LISP:SETF (CFFI:MEM-REF ANORM-REF12476 :DOUBLE) ANORM)
    (COMMON-LISP:SETF (CFFI:MEM-REF RCOND-REF12477 :DOUBLE) RCOND)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12480 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AB-REF12473 AB)
                                            (IPIV-REF12475 IPIV)
                                            (WORK-REF12478 WORK)
                                            (RWORK-REF12479 RWORK))
      (%%ZGBCON NORM N-REF12470 KL-REF12471 KU-REF12472 AB-REF12473
       LDAB-REF12474 IPIV-REF12475 ANORM-REF12476 RCOND-REF12477
       WORK-REF12478 RWORK-REF12479 INFO-REF12480))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SLASD1 "slasd1_")
  ((NL :FOREIGN-ADDRESS) (NR :FOREIGN-ADDRESS) (SQRE :FOREIGN-ADDRESS)
   (D :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (BETA :FOREIGN-ADDRESS) (U :FOREIGN-ADDRESS) (LDU :FOREIGN-ADDRESS)
   (VT :FOREIGN-ADDRESS) (LDVT :FOREIGN-ADDRESS)
   (IDXQ :FOREIGN-ADDRESS) (IWORK :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SLASD1
    (NL NR SQRE D ALPHA BETA U LDU VT LDVT IDXQ IWORK WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SLASD1)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NR)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) SQRE)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) D)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) U)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) VT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDVT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IDXQ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((NL-REF12481 ':INT32)
                              (NR-REF12482 ':INT32)
                              (SQRE-REF12483 ':INT32)
                              (ALPHA-REF12485 ':FLOAT)
                              (BETA-REF12486 ':FLOAT)
                              (LDU-REF12488 ':INT32)
                              (LDVT-REF12490 ':INT32)
                              (INFO-REF12494 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF NL-REF12481 :INT32) NL)
    (COMMON-LISP:SETF (CFFI:MEM-REF NR-REF12482 :INT32) NR)
    (COMMON-LISP:SETF (CFFI:MEM-REF SQRE-REF12483 :INT32) SQRE)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF12485 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF12486 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDU-REF12488 :INT32) LDU)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDVT-REF12490 :INT32) LDVT)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12494 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((D-REF12484 D)
                                            (U-REF12487 U)
                                            (VT-REF12489 VT)
                                            (IDXQ-REF12491 IDXQ)
                                            (IWORK-REF12492 IWORK)
                                            (WORK-REF12493 WORK))
      (%%SLASD1 NL-REF12481 NR-REF12482 SQRE-REF12483 D-REF12484
       ALPHA-REF12485 BETA-REF12486 U-REF12487 LDU-REF12488 VT-REF12489
       LDVT-REF12490 IDXQ-REF12491 IWORK-REF12492 WORK-REF12493
       INFO-REF12494))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CHETD2 "chetd2_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS)
   (E :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CHETD2 (UPLO N A LDA D E TAU INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHETD2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) E)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    TAU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12496 ':INT32)
                              (LDA-REF12498 ':INT32)
                              (INFO-REF12502 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12496 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12498 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12502 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12497 A)
                                            (D-REF12499 D)
                                            (E-REF12500 E)
                                            (TAU-REF12501 TAU))
      (%%CHETD2 UPLO N-REF12496 A-REF12497 LDA-REF12498 D-REF12499
       E-REF12500 TAU-REF12501 INFO-REF12502))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CHESWAPR "cheswapr_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (I1 :FOREIGN-ADDRESS)
   (I2 :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CHESWAPR (UPLO N A LDA I1 I2)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHESWAPR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) I1)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) I2))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12504 ':INT32)
                              (LDA-REF12506 ':INT32)
                              (I1-REF12507 ':INT32)
                              (I2-REF12508 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12504 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12506 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF I1-REF12507 :INT32) I1)
    (COMMON-LISP:SETF (CFFI:MEM-REF I2-REF12508 :INT32) I2)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12505 A))
      (%%CHESWAPR UPLO N-REF12504 A-REF12505 LDA-REF12506 I1-REF12507
       I2-REF12508))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DPBRFS "dpbrfs_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (KD :FOREIGN-ADDRESS) (NRHS :FOREIGN-ADDRESS) (AB :FOREIGN-ADDRESS)
   (LDAB :FOREIGN-ADDRESS) (AFB :FOREIGN-ADDRESS)
   (LDAFB :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (LDX :FOREIGN-ADDRESS) (FERR :FOREIGN-ADDRESS)
   (BERR :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (IWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DPBRFS
    (UPLO N KD NRHS AB LDAB AFB LDAFB B LDB X LDX FERR BERR WORK IWORK
     INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DPBRFS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KD)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AFB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAFB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) FERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) BERR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12510 ':INT32)
                              (KD-REF12511 ':INT32)
                              (NRHS-REF12512 ':INT32)
                              (LDAB-REF12514 ':INT32)
                              (LDAFB-REF12516 ':INT32)
                              (LDB-REF12518 ':INT32)
                              (LDX-REF12520 ':INT32)
                              (INFO-REF12525 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12510 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KD-REF12511 :INT32) KD)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF12512 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAB-REF12514 :INT32) LDAB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAFB-REF12516 :INT32) LDAFB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF12518 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX-REF12520 :INT32) LDX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12525 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AB-REF12513 AB)
                                            (AFB-REF12515 AFB)
                                            (B-REF12517 B)
                                            (X-REF12519 X)
                                            (FERR-REF12521 FERR)
                                            (BERR-REF12522 BERR)
                                            (WORK-REF12523 WORK)
                                            (IWORK-REF12524 IWORK))
      (%%DPBRFS UPLO N-REF12510 KD-REF12511 NRHS-REF12512 AB-REF12513
       LDAB-REF12514 AFB-REF12515 LDAFB-REF12516 B-REF12517
       LDB-REF12518 X-REF12519 LDX-REF12520 FERR-REF12521 BERR-REF12522
       WORK-REF12523 IWORK-REF12524 INFO-REF12525))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CUNM22 "cunm22_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (N1 :FOREIGN-ADDRESS)
   (N2 :FOREIGN-ADDRESS) (Q :FOREIGN-ADDRESS) (LDQ :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CUNM22
    (SIDE TRANS M N N1 N2 Q LDQ C LDC WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CUNM22)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N1)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N2)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Q)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDQ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12528 ':INT32) (N-REF12529 ':INT32)
                              (N1-REF12530 ':INT32)
                              (N2-REF12531 ':INT32)
                              (LDQ-REF12533 ':INT32)
                              (LDC-REF12535 ':INT32)
                              (LWORK-REF12537 ':INT32)
                              (INFO-REF12538 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12528 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12529 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF N1-REF12530 :INT32) N1)
    (COMMON-LISP:SETF (CFFI:MEM-REF N2-REF12531 :INT32) N2)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDQ-REF12533 :INT32) LDQ)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF12535 :INT32) LDC)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12537 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12538 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((Q-REF12532 Q)
                                            (C-REF12534 C)
                                            (WORK-REF12536 WORK))
      (%%CUNM22 SIDE TRANS M-REF12528 N-REF12529 N1-REF12530
       N2-REF12531 Q-REF12532 LDQ-REF12533 C-REF12534 LDC-REF12535
       WORK-REF12536 LWORK-REF12537 INFO-REF12538))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CGETC2 "cgetc2_")
  ((N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (IPIV :FOREIGN-ADDRESS) (JPIV :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CGETC2 (N A LDA IPIV JPIV INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGETC2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    JPIV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12539 ':INT32)
                              (LDA-REF12541 ':INT32)
                              (INFO-REF12544 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12539 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12541 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12544 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12540 A)
                                            (IPIV-REF12542 IPIV)
                                            (JPIV-REF12543 JPIV))
      (%%CGETC2 N-REF12539 A-REF12540 LDA-REF12541 IPIV-REF12542
       JPIV-REF12543 INFO-REF12544))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZLASET "zlaset_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (BETA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZLASET (UPLO M N ALPHA BETA A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZLASET)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12546 ':INT32) (N-REF12547 ':INT32)
                              (ALPHA-REF12548
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (BETA-REF12549
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF12551 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12546 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12547 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF12548
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF12549
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12551 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12550 A))
      (%%ZLASET UPLO M-REF12546 N-REF12547 ALPHA-REF12548 BETA-REF12549
       A-REF12550 LDA-REF12551))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DLA_GERPVGRW "dla_gerpvgrw_")
  ((N :FOREIGN-ADDRESS) (NCOLS :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (AF :FOREIGN-ADDRESS)
   (LDAF :FOREIGN-ADDRESS))
  :RETURNING (:DOUBLE COMMON-LISP:DOUBLE-FLOAT) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DLA_GERPVGRW (N NCOLS A LDA AF LDAF)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DLA_GERPVGRW)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NCOLS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AF)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAF))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12552 ':INT32)
                              (NCOLS-REF12553 ':INT32)
                              (LDA-REF12555 ':INT32)
                              (LDAF-REF12557 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12552 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NCOLS-REF12553 :INT32) NCOLS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12555 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAF-REF12557 :INT32) LDAF)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12554 A)
                                            (AF-REF12556 AF))
      (%%DLA_GERPVGRW N-REF12552 NCOLS-REF12553 A-REF12554 LDA-REF12555
       AF-REF12556 LDAF-REF12557))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZGETC2 "zgetc2_")
  ((N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (IPIV :FOREIGN-ADDRESS) (JPIV :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZGETC2 (N A LDA IPIV JPIV INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGETC2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    JPIV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12558 ':INT32)
                              (LDA-REF12560 ':INT32)
                              (INFO-REF12563 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12558 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12560 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12563 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12559 A)
                                            (IPIV-REF12561 IPIV)
                                            (JPIV-REF12562 JPIV))
      (%%ZGETC2 N-REF12558 A-REF12559 LDA-REF12560 IPIV-REF12561
       JPIV-REF12562 INFO-REF12563))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZGEMQRT "zgemqrt_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (NB :FOREIGN-ADDRESS) (V :FOREIGN-ADDRESS) (LDV :FOREIGN-ADDRESS)
   (T :FOREIGN-ADDRESS) (LDT :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (LDC :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZGEMQRT
    (SIDE TRANS M N K NB V LDV T LDT C LDC WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGEMQRT)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    V)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    T)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12566 ':INT32) (N-REF12567 ':INT32)
                              (K-REF12568 ':INT32)
                              (NB-REF12569 ':INT32)
                              (LDV-REF12571 ':INT32)
                              (LDT-REF12573 ':INT32)
                              (LDC-REF12575 ':INT32)
                              (INFO-REF12577 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12566 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12567 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF12568 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF NB-REF12569 :INT32) NB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDV-REF12571 :INT32) LDV)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDT-REF12573 :INT32) LDT)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF12575 :INT32) LDC)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12577 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((V-REF12570 V)
                                            (T-REF12572 T)
                                            (C-REF12574 C)
                                            (WORK-REF12576 WORK))
      (%%ZGEMQRT SIDE TRANS M-REF12566 N-REF12567 K-REF12568
       NB-REF12569 V-REF12570 LDV-REF12571 T-REF12572 LDT-REF12573
       C-REF12574 LDC-REF12575 WORK-REF12576 INFO-REF12577))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CUNBDB2 "cunbdb2_")
  ((M :FOREIGN-ADDRESS) (P :FOREIGN-ADDRESS) (Q :FOREIGN-ADDRESS)
   (X11 :FOREIGN-ADDRESS) (LDX11 :FOREIGN-ADDRESS)
   (X21 :FOREIGN-ADDRESS) (LDX21 :FOREIGN-ADDRESS)
   (THETA :FOREIGN-ADDRESS) (PHI :FOREIGN-ADDRESS)
   (TAUP1 :FOREIGN-ADDRESS) (TAUP2 :FOREIGN-ADDRESS)
   (TAUQ1 :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CUNBDB2
    (M P Q X11 LDX11 X21 LDX21 THETA PHI TAUP1 TAUP2 TAUQ1 WORK LWORK
     INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CUNBDB2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) P)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) Q)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X11)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX11)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X21)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX21)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) THETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) PHI)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    TAUP1)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    TAUP2)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    TAUQ1)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12578 ':INT32) (P-REF12579 ':INT32)
                              (Q-REF12580 ':INT32)
                              (LDX11-REF12582 ':INT32)
                              (LDX21-REF12584 ':INT32)
                              (LWORK-REF12591 ':INT32)
                              (INFO-REF12592 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12578 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF P-REF12579 :INT32) P)
    (COMMON-LISP:SETF (CFFI:MEM-REF Q-REF12580 :INT32) Q)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX11-REF12582 :INT32) LDX11)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX21-REF12584 :INT32) LDX21)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12591 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12592 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X11-REF12581 X11)
                                            (X21-REF12583 X21)
                                            (THETA-REF12585 THETA)
                                            (PHI-REF12586 PHI)
                                            (TAUP1-REF12587 TAUP1)
                                            (TAUP2-REF12588 TAUP2)
                                            (TAUQ1-REF12589 TAUQ1)
                                            (WORK-REF12590 WORK))
      (%%CUNBDB2 M-REF12578 P-REF12579 Q-REF12580 X11-REF12581
       LDX11-REF12582 X21-REF12583 LDX21-REF12584 THETA-REF12585
       PHI-REF12586 TAUP1-REF12587 TAUP2-REF12588 TAUQ1-REF12589
       WORK-REF12590 LWORK-REF12591 INFO-REF12592))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SGELQ "sgelq_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (T :FOREIGN-ADDRESS) (TSIZE :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SGELQ (M N A LDA T TSIZE WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SGELQ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) T)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) TSIZE)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12593 ':INT32) (N-REF12594 ':INT32)
                              (LDA-REF12596 ':INT32)
                              (TSIZE-REF12598 ':INT32)
                              (LWORK-REF12600 ':INT32)
                              (INFO-REF12601 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12593 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12594 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12596 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF TSIZE-REF12598 :INT32) TSIZE)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12600 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12601 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12595 A)
                                            (T-REF12597 T)
                                            (WORK-REF12599 WORK))
      (%%SGELQ M-REF12593 N-REF12594 A-REF12595 LDA-REF12596 T-REF12597
       TSIZE-REF12598 WORK-REF12599 LWORK-REF12600 INFO-REF12601))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZTRTRS "ztrtrs_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZTRTRS (UPLO TRANS DIAG N NRHS A LDA B LDB INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTRTRS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12605 ':INT32)
                              (NRHS-REF12606 ':INT32)
                              (LDA-REF12608 ':INT32)
                              (LDB-REF12610 ':INT32)
                              (INFO-REF12611 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12605 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF12606 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12608 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF12610 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12611 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12607 A)
                                            (B-REF12609 B))
      (%%ZTRTRS UPLO TRANS DIAG N-REF12605 NRHS-REF12606 A-REF12607
       LDA-REF12608 B-REF12609 LDB-REF12610 INFO-REF12611))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SSYTRF_RK "ssytrf_rk_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (E :FOREIGN-ADDRESS)
   (IPIV :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SSYTRF_RK (UPLO N A LDA E IPIV WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYTRF_RK)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) E)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12613 ':INT32)
                              (LDA-REF12615 ':INT32)
                              (LWORK-REF12619 ':INT32)
                              (INFO-REF12620 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12613 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12615 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12619 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12620 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12614 A)
                                            (E-REF12616 E)
                                            (IPIV-REF12617 IPIV)
                                            (WORK-REF12618 WORK))
      (%%SSYTRF_RK UPLO N-REF12613 A-REF12614 LDA-REF12615 E-REF12616
       IPIV-REF12617 WORK-REF12618 LWORK-REF12619 INFO-REF12620))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DLARUV "dlaruv_")
  ((ISEED :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DLARUV (ISEED N X)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DLARUV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    ISEED)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12622 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12622 :INT32) N)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((ISEED-REF12621 ISEED)
                                            (X-REF12623 X))
      (%%DLARUV ISEED-REF12621 N-REF12622 X-REF12623))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHBGST "zhbgst_")
  ((VECT (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (KA :FOREIGN-ADDRESS) (KB :FOREIGN-ADDRESS) (AB :FOREIGN-ADDRESS)
   (LDAB :FOREIGN-ADDRESS) (BB :FOREIGN-ADDRESS)
   (LDBB :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (LDX :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (RWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHBGST
    (VECT UPLO N KA KB AB LDAB BB LDBB X LDX WORK RWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHBGST)
   (COMMON-LISP:TYPE COMMON-LISP:STRING VECT)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KA)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    BB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDBB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12626 ':INT32)
                              (KA-REF12627 ':INT32)
                              (KB-REF12628 ':INT32)
                              (LDAB-REF12630 ':INT32)
                              (LDBB-REF12632 ':INT32)
                              (LDX-REF12634 ':INT32)
                              (INFO-REF12637 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12626 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KA-REF12627 :INT32) KA)
    (COMMON-LISP:SETF (CFFI:MEM-REF KB-REF12628 :INT32) KB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAB-REF12630 :INT32) LDAB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDBB-REF12632 :INT32) LDBB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDX-REF12634 :INT32) LDX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12637 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AB-REF12629 AB)
                                            (BB-REF12631 BB)
                                            (X-REF12633 X)
                                            (WORK-REF12635 WORK)
                                            (RWORK-REF12636 RWORK))
      (%%ZHBGST VECT UPLO N-REF12626 KA-REF12627 KB-REF12628
       AB-REF12629 LDAB-REF12630 BB-REF12631 LDBB-REF12632 X-REF12633
       LDX-REF12634 WORK-REF12635 RWORK-REF12636 INFO-REF12637))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SBDSVDX "sbdsvdx_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (JOBZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (RANGE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS) (E :FOREIGN-ADDRESS)
   (VL :FOREIGN-ADDRESS) (VU :FOREIGN-ADDRESS) (IL :FOREIGN-ADDRESS)
   (IU :FOREIGN-ADDRESS) (NS :FOREIGN-ADDRESS) (S :FOREIGN-ADDRESS)
   (Z :FOREIGN-ADDRESS) (LDZ :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (IWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SBDSVDX
    (UPLO JOBZ RANGE N D E VL VU IL IU NS S Z LDZ WORK IWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SBDSVDX)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBZ)
   (COMMON-LISP:TYPE COMMON-LISP:STRING RANGE)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) E)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT VL)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT VU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) S)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDZ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12641 ':INT32)
                              (VL-REF12644 ':FLOAT)
                              (VU-REF12645 ':FLOAT)
                              (IL-REF12646 ':INT32)
                              (IU-REF12647 ':INT32)
                              (NS-REF12648 ':INT32)
                              (LDZ-REF12651 ':INT32)
                              (INFO-REF12654 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12641 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF VL-REF12644 :FLOAT) VL)
    (COMMON-LISP:SETF (CFFI:MEM-REF VU-REF12645 :FLOAT) VU)
    (COMMON-LISP:SETF (CFFI:MEM-REF IL-REF12646 :INT32) IL)
    (COMMON-LISP:SETF (CFFI:MEM-REF IU-REF12647 :INT32) IU)
    (COMMON-LISP:SETF (CFFI:MEM-REF NS-REF12648 :INT32) NS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDZ-REF12651 :INT32) LDZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12654 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((D-REF12642 D)
                                            (E-REF12643 E)
                                            (S-REF12649 S)
                                            (Z-REF12650 Z)
                                            (WORK-REF12652 WORK)
                                            (IWORK-REF12653 IWORK))
      (%%SBDSVDX UPLO JOBZ RANGE N-REF12641 D-REF12642 E-REF12643
       VL-REF12644 VU-REF12645 IL-REF12646 IU-REF12647 NS-REF12648
       S-REF12649 Z-REF12650 LDZ-REF12651 WORK-REF12652 IWORK-REF12653
       INFO-REF12654))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZUNGR2 "zungr2_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZUNGR2 (M N K A LDA TAU WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZUNGR2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12655 ':INT32) (N-REF12656 ':INT32)
                              (K-REF12657 ':INT32)
                              (LDA-REF12659 ':INT32)
                              (INFO-REF12662 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12655 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12656 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF12657 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12659 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12662 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12658 A)
                                            (TAU-REF12660 TAU)
                                            (WORK-REF12661 WORK))
      (%%ZUNGR2 M-REF12655 N-REF12656 K-REF12657 A-REF12658
       LDA-REF12659 TAU-REF12660 WORK-REF12661 INFO-REF12662))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL
  (%%ZSYSV_AA_2STAGE "zsysv_aa_2stage_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (TB :FOREIGN-ADDRESS) (LTB :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (IPIV2 :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZSYSV_AA_2STAGE
    (UPLO N NRHS A LDA TB LTB IPIV IPIV2 B LDB WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZSYSV_AA_2STAGE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    TB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LTB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV2)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12664 ':INT32)
                              (NRHS-REF12665 ':INT32)
                              (LDA-REF12667 ':INT32)
                              (LTB-REF12669 ':INT32)
                              (LDB-REF12673 ':INT32)
                              (LWORK-REF12675 ':INT32)
                              (INFO-REF12676 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12664 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF12665 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12667 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LTB-REF12669 :INT32) LTB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF12673 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12675 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12676 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12666 A)
                                            (TB-REF12668 TB)
                                            (IPIV-REF12670 IPIV)
                                            (IPIV2-REF12671 IPIV2)
                                            (B-REF12672 B)
                                            (WORK-REF12674 WORK))
      (%%ZSYSV_AA_2STAGE UPLO N-REF12664 NRHS-REF12665 A-REF12666
       LDA-REF12667 TB-REF12668 LTB-REF12669 IPIV-REF12670
       IPIV2-REF12671 B-REF12672 LDB-REF12673 WORK-REF12674
       LWORK-REF12675 INFO-REF12676))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DGETC2 "dgetc2_")
  ((N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (IPIV :FOREIGN-ADDRESS) (JPIV :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DGETC2 (N A LDA IPIV JPIV INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGETC2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    JPIV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12677 ':INT32)
                              (LDA-REF12679 ':INT32)
                              (INFO-REF12682 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12677 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12679 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12682 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12678 A)
                                            (IPIV-REF12680 IPIV)
                                            (JPIV-REF12681 JPIV))
      (%%DGETC2 N-REF12677 A-REF12678 LDA-REF12679 IPIV-REF12680
       JPIV-REF12681 INFO-REF12682))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZPPTRS "zpptrs_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (AP :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZPPTRS (UPLO N NRHS AP B LDB INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZPPTRS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12684 ':INT32)
                              (NRHS-REF12685 ':INT32)
                              (LDB-REF12688 ':INT32)
                              (INFO-REF12689 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12684 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF12685 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF12688 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12689 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF12686 AP)
                                            (B-REF12687 B))
      (%%ZPPTRS UPLO N-REF12684 NRHS-REF12685 AP-REF12686 B-REF12687
       LDB-REF12688 INFO-REF12689))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CPPSV "cppsv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (AP :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CPPSV (UPLO N NRHS AP B LDB INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CPPSV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12691 ':INT32)
                              (NRHS-REF12692 ':INT32)
                              (LDB-REF12695 ':INT32)
                              (INFO-REF12696 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12691 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF12692 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF12695 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12696 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF12693 AP)
                                            (B-REF12694 B))
      (%%CPPSV UPLO N-REF12691 NRHS-REF12692 AP-REF12693 B-REF12694
       LDB-REF12695 INFO-REF12696))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZSYTF2 "zsytf2_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZSYTF2 (UPLO N A LDA IPIV INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZSYTF2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12698 ':INT32)
                              (LDA-REF12700 ':INT32)
                              (INFO-REF12702 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12698 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12700 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12702 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12699 A)
                                            (IPIV-REF12701 IPIV))
      (%%ZSYTF2 UPLO N-REF12698 A-REF12699 LDA-REF12700 IPIV-REF12701
       INFO-REF12702))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SSYTRF_ROOK "ssytrf_rook_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SSYTRF_ROOK (UPLO N A LDA IPIV WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYTRF_ROOK)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12704 ':INT32)
                              (LDA-REF12706 ':INT32)
                              (LWORK-REF12709 ':INT32)
                              (INFO-REF12710 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12704 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12706 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12709 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12710 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12705 A)
                                            (IPIV-REF12707 IPIV)
                                            (WORK-REF12708 WORK))
      (%%SSYTRF_ROOK UPLO N-REF12704 A-REF12705 LDA-REF12706
       IPIV-REF12707 WORK-REF12708 LWORK-REF12709 INFO-REF12710))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CSYTRS_3 "csytrs_3_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (E :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CSYTRS_3 (UPLO N NRHS A LDA E IPIV B LDB INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSYTRS_3)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    E)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12712 ':INT32)
                              (NRHS-REF12713 ':INT32)
                              (LDA-REF12715 ':INT32)
                              (LDB-REF12719 ':INT32)
                              (INFO-REF12720 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12712 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF12713 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12715 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF12719 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12720 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12714 A)
                                            (E-REF12716 E)
                                            (IPIV-REF12717 IPIV)
                                            (B-REF12718 B))
      (%%CSYTRS_3 UPLO N-REF12712 NRHS-REF12713 A-REF12714 LDA-REF12715
       E-REF12716 IPIV-REF12717 B-REF12718 LDB-REF12719
       INFO-REF12720))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CLA_SYRPVGRW "cla_syrpvgrw_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (AF :FOREIGN-ADDRESS) (LDAF :FOREIGN-ADDRESS)
   (IPIV :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS))
  :RETURNING (:FLOAT COMMON-LISP:SINGLE-FLOAT) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CLA_SYRPVGRW (UPLO N INFO A LDA AF LDAF IPIV WORK)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CLA_SYRPVGRW)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    AF)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAF)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12722 ':INT32)
                              (INFO-REF12723 ':INT32)
                              (LDA-REF12725 ':INT32)
                              (LDAF-REF12727 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12722 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12723 :INT32) INFO)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12725 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAF-REF12727 :INT32) LDAF)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12724 A)
                                            (AF-REF12726 AF)
                                            (IPIV-REF12728 IPIV)
                                            (WORK-REF12729 WORK))
      (%%CLA_SYRPVGRW UPLO N-REF12722 INFO-REF12723 A-REF12724
       LDA-REF12725 AF-REF12726 LDAF-REF12727 IPIV-REF12728
       WORK-REF12729))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CSTEQR "csteqr_")
  ((COMPZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS) (E :FOREIGN-ADDRESS)
   (Z :FOREIGN-ADDRESS) (LDZ :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CSTEQR (COMPZ N D E Z LDZ WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSTEQR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING COMPZ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) E)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDZ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12731 ':INT32)
                              (LDZ-REF12735 ':INT32)
                              (INFO-REF12737 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12731 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDZ-REF12735 :INT32) LDZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12737 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((D-REF12732 D)
                                            (E-REF12733 E)
                                            (Z-REF12734 Z)
                                            (WORK-REF12736 WORK))
      (%%CSTEQR COMPZ N-REF12731 D-REF12732 E-REF12733 Z-REF12734
       LDZ-REF12735 WORK-REF12736 INFO-REF12737))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHGEQZ "zhgeqz_")
  ((JOB (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (COMPQ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (COMPZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (ILO :FOREIGN-ADDRESS) (IHI :FOREIGN-ADDRESS)
   (H :FOREIGN-ADDRESS) (LDH :FOREIGN-ADDRESS) (T :FOREIGN-ADDRESS)
   (LDT :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (BETA :FOREIGN-ADDRESS) (Q :FOREIGN-ADDRESS) (LDQ :FOREIGN-ADDRESS)
   (Z :FOREIGN-ADDRESS) (LDZ :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (RWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHGEQZ
    (JOB COMPQ COMPZ N ILO IHI H LDH T LDT ALPHA BETA Q LDQ Z LDZ WORK
     LWORK RWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHGEQZ)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOB)
   (COMMON-LISP:TYPE COMMON-LISP:STRING COMPQ)
   (COMMON-LISP:TYPE COMMON-LISP:STRING COMPZ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ILO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IHI)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    H)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDH)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    T)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    Q)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDQ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDZ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12741 ':INT32)
                              (ILO-REF12742 ':INT32)
                              (IHI-REF12743 ':INT32)
                              (LDH-REF12745 ':INT32)
                              (LDT-REF12747 ':INT32)
                              (LDQ-REF12751 ':INT32)
                              (LDZ-REF12753 ':INT32)
                              (LWORK-REF12755 ':INT32)
                              (INFO-REF12757 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12741 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ILO-REF12742 :INT32) ILO)
    (COMMON-LISP:SETF (CFFI:MEM-REF IHI-REF12743 :INT32) IHI)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDH-REF12745 :INT32) LDH)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDT-REF12747 :INT32) LDT)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDQ-REF12751 :INT32) LDQ)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDZ-REF12753 :INT32) LDZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12755 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12757 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((H-REF12744 H)
                                            (T-REF12746 T)
                                            (ALPHA-REF12748 ALPHA)
                                            (BETA-REF12749 BETA)
                                            (Q-REF12750 Q)
                                            (Z-REF12752 Z)
                                            (WORK-REF12754 WORK)
                                            (RWORK-REF12756 RWORK))
      (%%ZHGEQZ JOB COMPQ COMPZ N-REF12741 ILO-REF12742 IHI-REF12743
       H-REF12744 LDH-REF12745 T-REF12746 LDT-REF12747 ALPHA-REF12748
       BETA-REF12749 Q-REF12750 LDQ-REF12751 Z-REF12752 LDZ-REF12753
       WORK-REF12754 LWORK-REF12755 RWORK-REF12756 INFO-REF12757))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHPEVD "zhpevd_")
  ((JOBZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (AP :FOREIGN-ADDRESS) (W :FOREIGN-ADDRESS) (Z :FOREIGN-ADDRESS)
   (LDZ :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (RWORK :FOREIGN-ADDRESS)
   (LRWORK :FOREIGN-ADDRESS) (IWORK :FOREIGN-ADDRESS)
   (LIWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHPEVD
    (JOBZ UPLO N AP W Z LDZ WORK LWORK RWORK LRWORK IWORK LIWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHPEVD)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBZ)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) W)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDZ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LRWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LIWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12760 ':INT32)
                              (LDZ-REF12764 ':INT32)
                              (LWORK-REF12766 ':INT32)
                              (LRWORK-REF12768 ':INT32)
                              (LIWORK-REF12770 ':INT32)
                              (INFO-REF12771 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12760 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDZ-REF12764 :INT32) LDZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12766 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF LRWORK-REF12768 :INT32) LRWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF LIWORK-REF12770 :INT32) LIWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12771 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF12761 AP)
                                            (W-REF12762 W)
                                            (Z-REF12763 Z)
                                            (WORK-REF12765 WORK)
                                            (RWORK-REF12767 RWORK)
                                            (IWORK-REF12769 IWORK))
      (%%ZHPEVD JOBZ UPLO N-REF12760 AP-REF12761 W-REF12762 Z-REF12763
       LDZ-REF12764 WORK-REF12765 LWORK-REF12766 RWORK-REF12767
       LRWORK-REF12768 IWORK-REF12769 LIWORK-REF12770 INFO-REF12771))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CHPTRS "chptrs_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (AP :FOREIGN-ADDRESS)
   (IPIV :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CHPTRS (UPLO N NRHS AP IPIV B LDB INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHPTRS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12773 ':INT32)
                              (NRHS-REF12774 ':INT32)
                              (LDB-REF12778 ':INT32)
                              (INFO-REF12779 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12773 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF12774 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF12778 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12779 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF12775 AP)
                                            (IPIV-REF12776 IPIV)
                                            (B-REF12777 B))
      (%%CHPTRS UPLO N-REF12773 NRHS-REF12774 AP-REF12775 IPIV-REF12776
       B-REF12777 LDB-REF12778 INFO-REF12779))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DLASQ2 "dlasq2_")
  ((N :FOREIGN-ADDRESS) (Z :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DLASQ2 (N Z INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DLASQ2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12780 ':INT32)
                              (INFO-REF12782 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12780 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12782 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((Z-REF12781 Z))
      (%%DLASQ2 N-REF12780 Z-REF12781 INFO-REF12782))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SLAQP2 "slaqp2_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (OFFSET :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (JPVT :FOREIGN-ADDRESS)
   (TAU :FOREIGN-ADDRESS) (VN1 :FOREIGN-ADDRESS) (VN2 :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SLAQP2 (M N OFFSET A LDA JPVT TAU VN1 VN2 WORK)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SLAQP2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) OFFSET)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    JPVT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) VN1)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) VN2)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12783 ':INT32) (N-REF12784 ':INT32)
                              (OFFSET-REF12785 ':INT32)
                              (LDA-REF12787 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12783 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12784 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF OFFSET-REF12785 :INT32) OFFSET)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12787 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12786 A)
                                            (JPVT-REF12788 JPVT)
                                            (TAU-REF12789 TAU)
                                            (VN1-REF12790 VN1)
                                            (VN2-REF12791 VN2)
                                            (WORK-REF12792 WORK))
      (%%SLAQP2 M-REF12783 N-REF12784 OFFSET-REF12785 A-REF12786
       LDA-REF12787 JPVT-REF12788 TAU-REF12789 VN1-REF12790
       VN2-REF12791 WORK-REF12792))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DORHR_COL "dorhr_col_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (NB :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (T :FOREIGN-ADDRESS)
   (LDT :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DORHR_COL (M N NB A LDA T LDT D INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DORHR_COL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) T)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) D)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12793 ':INT32) (N-REF12794 ':INT32)
                              (NB-REF12795 ':INT32)
                              (LDA-REF12797 ':INT32)
                              (LDT-REF12799 ':INT32)
                              (INFO-REF12801 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12793 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12794 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NB-REF12795 :INT32) NB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12797 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDT-REF12799 :INT32) LDT)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12801 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12796 A)
                                            (T-REF12798 T)
                                            (D-REF12800 D))
      (%%DORHR_COL M-REF12793 N-REF12794 NB-REF12795 A-REF12796
       LDA-REF12797 T-REF12798 LDT-REF12799 D-REF12800 INFO-REF12801))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DSYGV "dsygv_")
  ((ITYPE :FOREIGN-ADDRESS)
   (JOBZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (W :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSYGV
    (ITYPE JOBZ UPLO N A LDA B LDB W WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSYGV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ITYPE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING JOBZ)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) W)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((ITYPE-REF12802 ':INT32)
                              (N-REF12805 ':INT32)
                              (LDA-REF12807 ':INT32)
                              (LDB-REF12809 ':INT32)
                              (LWORK-REF12812 ':INT32)
                              (INFO-REF12813 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF ITYPE-REF12802 :INT32) ITYPE)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12805 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12807 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF12809 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12812 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12813 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12806 A)
                                            (B-REF12808 B)
                                            (W-REF12810 W)
                                            (WORK-REF12811 WORK))
      (%%DSYGV ITYPE-REF12802 JOBZ UPLO N-REF12805 A-REF12806
       LDA-REF12807 B-REF12808 LDB-REF12809 W-REF12810 WORK-REF12811
       LWORK-REF12812 INFO-REF12813))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SLARFGP "slarfgp_")
  ((N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SLARFGP (N ALPHA X INCX TAU)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SLARFGP)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT TAU))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12814 ':INT32)
                              (ALPHA-REF12815 ':FLOAT)
                              (INCX-REF12817 ':INT32)
                              (TAU-REF12818 ':FLOAT))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12814 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF12815 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF12817 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF TAU-REF12818 :FLOAT) TAU)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF12816 X))
      (%%SLARFGP N-REF12814 ALPHA-REF12815 X-REF12816 INCX-REF12817
       TAU-REF12818))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SLANGT "slangt_")
  ((NORM (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (DL :FOREIGN-ADDRESS) (D :FOREIGN-ADDRESS) (DU :FOREIGN-ADDRESS))
  :RETURNING (:FLOAT COMMON-LISP:SINGLE-FLOAT) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SLANGT (NORM N DL D DU)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SLANGT)
   (COMMON-LISP:TYPE COMMON-LISP:STRING NORM)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) DL)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) DU))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12820 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12820 :INT32) N)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DL-REF12821 DL)
                                            (D-REF12822 D)
                                            (DU-REF12823 DU))
      (%%SLANGT NORM N-REF12820 DL-REF12821 D-REF12822 DU-REF12823))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CGGHRD "cgghrd_")
  ((COMPQ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (COMPZ (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (ILO :FOREIGN-ADDRESS) (IHI :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (Q :FOREIGN-ADDRESS) (LDQ :FOREIGN-ADDRESS)
   (Z :FOREIGN-ADDRESS) (LDZ :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CGGHRD
    (COMPQ COMPZ N ILO IHI A LDA B LDB Q LDQ Z LDZ INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGGHRD)
   (COMMON-LISP:TYPE COMMON-LISP:STRING COMPQ)
   (COMMON-LISP:TYPE COMMON-LISP:STRING COMPZ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ILO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IHI)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Q)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDQ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDZ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12826 ':INT32)
                              (ILO-REF12827 ':INT32)
                              (IHI-REF12828 ':INT32)
                              (LDA-REF12830 ':INT32)
                              (LDB-REF12832 ':INT32)
                              (LDQ-REF12834 ':INT32)
                              (LDZ-REF12836 ':INT32)
                              (INFO-REF12837 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12826 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ILO-REF12827 :INT32) ILO)
    (COMMON-LISP:SETF (CFFI:MEM-REF IHI-REF12828 :INT32) IHI)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12830 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF12832 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDQ-REF12834 :INT32) LDQ)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDZ-REF12836 :INT32) LDZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12837 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12829 A)
                                            (B-REF12831 B)
                                            (Q-REF12833 Q)
                                            (Z-REF12835 Z))
      (%%CGGHRD COMPQ COMPZ N-REF12826 ILO-REF12827 IHI-REF12828
       A-REF12829 LDA-REF12830 B-REF12831 LDB-REF12832 Q-REF12833
       LDQ-REF12834 Z-REF12835 LDZ-REF12836 INFO-REF12837))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CUNML2 "cunml2_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (TAU :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CUNML2 (SIDE TRANS M N K A LDA TAU C LDC WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CUNML2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12840 ':INT32) (N-REF12841 ':INT32)
                              (K-REF12842 ':INT32)
                              (LDA-REF12844 ':INT32)
                              (LDC-REF12847 ':INT32)
                              (INFO-REF12849 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12840 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12841 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF12842 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12844 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF12847 :INT32) LDC)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12849 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12843 A)
                                            (TAU-REF12845 TAU)
                                            (C-REF12846 C)
                                            (WORK-REF12848 WORK))
      (%%CUNML2 SIDE TRANS M-REF12840 N-REF12841 K-REF12842 A-REF12843
       LDA-REF12844 TAU-REF12845 C-REF12846 LDC-REF12847 WORK-REF12848
       INFO-REF12849))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL
  (%%CHESV_AA_2STAGE "chesv_aa_2stage_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (TB :FOREIGN-ADDRESS) (LTB :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (IPIV2 :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CHESV_AA_2STAGE
    (UPLO N NRHS A LDA TB LTB IPIV IPIV2 B LDB WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHESV_AA_2STAGE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    TB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LTB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV2)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12851 ':INT32)
                              (NRHS-REF12852 ':INT32)
                              (LDA-REF12854 ':INT32)
                              (LTB-REF12856 ':INT32)
                              (LDB-REF12860 ':INT32)
                              (LWORK-REF12862 ':INT32)
                              (INFO-REF12863 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12851 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF12852 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12854 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LTB-REF12856 :INT32) LTB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF12860 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12862 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12863 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12853 A)
                                            (TB-REF12855 TB)
                                            (IPIV-REF12857 IPIV)
                                            (IPIV2-REF12858 IPIV2)
                                            (B-REF12859 B)
                                            (WORK-REF12861 WORK))
      (%%CHESV_AA_2STAGE UPLO N-REF12851 NRHS-REF12852 A-REF12853
       LDA-REF12854 TB-REF12855 LTB-REF12856 IPIV-REF12857
       IPIV2-REF12858 B-REF12859 LDB-REF12860 WORK-REF12861
       LWORK-REF12862 INFO-REF12863))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SLAQR2 "slaqr2_")
  ((WANTT :FOREIGN-ADDRESS) (WANTZ :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (KTOP :FOREIGN-ADDRESS) (KBOT :FOREIGN-ADDRESS)
   (NW :FOREIGN-ADDRESS) (H :FOREIGN-ADDRESS) (LDH :FOREIGN-ADDRESS)
   (ILOZ :FOREIGN-ADDRESS) (IHIZ :FOREIGN-ADDRESS) (Z :FOREIGN-ADDRESS)
   (LDZ :FOREIGN-ADDRESS) (NS :FOREIGN-ADDRESS) (ND :FOREIGN-ADDRESS)
   (SR :FOREIGN-ADDRESS) (SI :FOREIGN-ADDRESS) (V :FOREIGN-ADDRESS)
   (LDV :FOREIGN-ADDRESS) (NH :FOREIGN-ADDRESS) (T :FOREIGN-ADDRESS)
   (LDT :FOREIGN-ADDRESS) (NV :FOREIGN-ADDRESS) (WV :FOREIGN-ADDRESS)
   (LDWV :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SLAQR2
    (WANTT WANTZ N KTOP KBOT NW H LDH ILOZ IHIZ Z LDZ NS ND SR SI V LDV
     NH T LDT NV WV LDWV WORK LWORK)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SLAQR2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) WANTT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) WANTZ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KTOP)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KBOT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NW)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) H)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDH)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ILOZ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IHIZ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDZ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ND)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SI)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) V)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NH)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) T)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDWV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK))
  (CFFI:WITH-FOREIGN-OBJECTS ((WANTT-REF12864 ':INT32)
                              (WANTZ-REF12865 ':INT32)
                              (N-REF12866 ':INT32)
                              (KTOP-REF12867 ':INT32)
                              (KBOT-REF12868 ':INT32)
                              (NW-REF12869 ':INT32)
                              (LDH-REF12871 ':INT32)
                              (ILOZ-REF12872 ':INT32)
                              (IHIZ-REF12873 ':INT32)
                              (LDZ-REF12875 ':INT32)
                              (NS-REF12876 ':INT32)
                              (ND-REF12877 ':INT32)
                              (LDV-REF12881 ':INT32)
                              (NH-REF12882 ':INT32)
                              (LDT-REF12884 ':INT32)
                              (NV-REF12885 ':INT32)
                              (LDWV-REF12887 ':INT32)
                              (LWORK-REF12889 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF WANTT-REF12864 :INT32) WANTT)
    (COMMON-LISP:SETF (CFFI:MEM-REF WANTZ-REF12865 :INT32) WANTZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12866 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KTOP-REF12867 :INT32) KTOP)
    (COMMON-LISP:SETF (CFFI:MEM-REF KBOT-REF12868 :INT32) KBOT)
    (COMMON-LISP:SETF (CFFI:MEM-REF NW-REF12869 :INT32) NW)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDH-REF12871 :INT32) LDH)
    (COMMON-LISP:SETF (CFFI:MEM-REF ILOZ-REF12872 :INT32) ILOZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF IHIZ-REF12873 :INT32) IHIZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDZ-REF12875 :INT32) LDZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF NS-REF12876 :INT32) NS)
    (COMMON-LISP:SETF (CFFI:MEM-REF ND-REF12877 :INT32) ND)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDV-REF12881 :INT32) LDV)
    (COMMON-LISP:SETF (CFFI:MEM-REF NH-REF12882 :INT32) NH)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDT-REF12884 :INT32) LDT)
    (COMMON-LISP:SETF (CFFI:MEM-REF NV-REF12885 :INT32) NV)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDWV-REF12887 :INT32) LDWV)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12889 :INT32) LWORK)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((H-REF12870 H)
                                            (Z-REF12874 Z)
                                            (SR-REF12878 SR)
                                            (SI-REF12879 SI)
                                            (V-REF12880 V)
                                            (T-REF12883 T)
                                            (WV-REF12886 WV)
                                            (WORK-REF12888 WORK))
      (%%SLAQR2 WANTT-REF12864 WANTZ-REF12865 N-REF12866 KTOP-REF12867
       KBOT-REF12868 NW-REF12869 H-REF12870 LDH-REF12871 ILOZ-REF12872
       IHIZ-REF12873 Z-REF12874 LDZ-REF12875 NS-REF12876 ND-REF12877
       SR-REF12878 SI-REF12879 V-REF12880 LDV-REF12881 NH-REF12882
       T-REF12883 LDT-REF12884 NV-REF12885 WV-REF12886 LDWV-REF12887
       WORK-REF12888 LWORK-REF12889))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SPOTRI "spotri_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SPOTRI (UPLO N A LDA INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SPOTRI)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12891 ':INT32)
                              (LDA-REF12893 ':INT32)
                              (INFO-REF12894 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12891 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12893 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12894 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12892 A))
      (%%SPOTRI UPLO N-REF12891 A-REF12892 LDA-REF12893
       INFO-REF12894))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CGEQP3 "cgeqp3_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (JPVT :FOREIGN-ADDRESS)
   (TAU :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (LWORK :FOREIGN-ADDRESS) (RWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CGEQP3 (M N A LDA JPVT TAU WORK LWORK RWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGEQP3)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    JPVT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    TAU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) RWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12895 ':INT32) (N-REF12896 ':INT32)
                              (LDA-REF12898 ':INT32)
                              (LWORK-REF12902 ':INT32)
                              (INFO-REF12904 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12895 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12896 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12898 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12902 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12904 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12897 A)
                                            (JPVT-REF12899 JPVT)
                                            (TAU-REF12900 TAU)
                                            (WORK-REF12901 WORK)
                                            (RWORK-REF12903 RWORK))
      (%%CGEQP3 M-REF12895 N-REF12896 A-REF12897 LDA-REF12898
       JPVT-REF12899 TAU-REF12900 WORK-REF12901 LWORK-REF12902
       RWORK-REF12903 INFO-REF12904))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SGEEQU "sgeequ_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (R :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (ROWCND :FOREIGN-ADDRESS) (COLCND :FOREIGN-ADDRESS)
   (AMAX :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SGEEQU (M N A LDA R C ROWCND COLCND AMAX INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SGEEQU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) R)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) C)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ROWCND)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT COLCND)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT AMAX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12905 ':INT32) (N-REF12906 ':INT32)
                              (LDA-REF12908 ':INT32)
                              (ROWCND-REF12911 ':FLOAT)
                              (COLCND-REF12912 ':FLOAT)
                              (AMAX-REF12913 ':FLOAT)
                              (INFO-REF12914 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12905 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12906 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12908 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF ROWCND-REF12911 :FLOAT) ROWCND)
    (COMMON-LISP:SETF (CFFI:MEM-REF COLCND-REF12912 :FLOAT) COLCND)
    (COMMON-LISP:SETF (CFFI:MEM-REF AMAX-REF12913 :FLOAT) AMAX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12914 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12907 A)
                                            (R-REF12909 R)
                                            (C-REF12910 C))
      (%%SGEEQU M-REF12905 N-REF12906 A-REF12907 LDA-REF12908
       R-REF12909 C-REF12910 ROWCND-REF12911 COLCND-REF12912
       AMAX-REF12913 INFO-REF12914))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DLAQR4 "dlaqr4_")
  ((WANTT :FOREIGN-ADDRESS) (WANTZ :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (ILO :FOREIGN-ADDRESS) (IHI :FOREIGN-ADDRESS)
   (H :FOREIGN-ADDRESS) (LDH :FOREIGN-ADDRESS) (WR :FOREIGN-ADDRESS)
   (WI :FOREIGN-ADDRESS) (ILOZ :FOREIGN-ADDRESS)
   (IHIZ :FOREIGN-ADDRESS) (Z :FOREIGN-ADDRESS) (LDZ :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DLAQR4
    (WANTT WANTZ N ILO IHI H LDH WR WI ILOZ IHIZ Z LDZ WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DLAQR4)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) WANTT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) WANTZ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ILO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IHI)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) H)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDH)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WR)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WI)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) ILOZ)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) IHIZ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Z)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDZ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((WANTT-REF12915 ':INT32)
                              (WANTZ-REF12916 ':INT32)
                              (N-REF12917 ':INT32)
                              (ILO-REF12918 ':INT32)
                              (IHI-REF12919 ':INT32)
                              (LDH-REF12921 ':INT32)
                              (ILOZ-REF12924 ':INT32)
                              (IHIZ-REF12925 ':INT32)
                              (LDZ-REF12927 ':INT32)
                              (LWORK-REF12929 ':INT32)
                              (INFO-REF12930 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF WANTT-REF12915 :INT32) WANTT)
    (COMMON-LISP:SETF (CFFI:MEM-REF WANTZ-REF12916 :INT32) WANTZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12917 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ILO-REF12918 :INT32) ILO)
    (COMMON-LISP:SETF (CFFI:MEM-REF IHI-REF12919 :INT32) IHI)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDH-REF12921 :INT32) LDH)
    (COMMON-LISP:SETF (CFFI:MEM-REF ILOZ-REF12924 :INT32) ILOZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF IHIZ-REF12925 :INT32) IHIZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDZ-REF12927 :INT32) LDZ)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12929 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12930 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((H-REF12920 H)
                                            (WR-REF12922 WR)
                                            (WI-REF12923 WI)
                                            (Z-REF12926 Z)
                                            (WORK-REF12928 WORK))
      (%%DLAQR4 WANTT-REF12915 WANTZ-REF12916 N-REF12917 ILO-REF12918
       IHI-REF12919 H-REF12920 LDH-REF12921 WR-REF12922 WI-REF12923
       ILOZ-REF12924 IHIZ-REF12925 Z-REF12926 LDZ-REF12927
       WORK-REF12928 LWORK-REF12929 INFO-REF12930))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL
  (%%SSYSV_AA_2STAGE "ssysv_aa_2stage_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (NRHS :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (TB :FOREIGN-ADDRESS) (LTB :FOREIGN-ADDRESS) (IPIV :FOREIGN-ADDRESS)
   (IPIV2 :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (WORK :FOREIGN-ADDRESS) (LWORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SSYSV_AA_2STAGE
    (UPLO N NRHS A LDA TB LTB IPIV IPIV2 B LDB WORK LWORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYSV_AA_2STAGE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NRHS)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) TB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LTB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV2)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LWORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF12932 ':INT32)
                              (NRHS-REF12933 ':INT32)
                              (LDA-REF12935 ':INT32)
                              (LTB-REF12937 ':INT32)
                              (LDB-REF12941 ':INT32)
                              (LWORK-REF12943 ':INT32)
                              (INFO-REF12944 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12932 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NRHS-REF12933 :INT32) NRHS)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF12935 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LTB-REF12937 :INT32) LTB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF12941 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LWORK-REF12943 :INT32) LWORK)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12944 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF12934 A)
                                            (TB-REF12936 TB)
                                            (IPIV-REF12938 IPIV)
                                            (IPIV2-REF12939 IPIV2)
                                            (B-REF12940 B)
                                            (WORK-REF12942 WORK))
      (%%SSYSV_AA_2STAGE UPLO N-REF12932 NRHS-REF12933 A-REF12934
       LDA-REF12935 TB-REF12936 LTB-REF12937 IPIV-REF12938
       IPIV2-REF12939 B-REF12940 LDB-REF12941 WORK-REF12942
       LWORK-REF12943 INFO-REF12944))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DGBBRD "dgbbrd_")
  ((VECT (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (NCC :FOREIGN-ADDRESS) (KL :FOREIGN-ADDRESS)
   (KU :FOREIGN-ADDRESS) (AB :FOREIGN-ADDRESS) (LDAB :FOREIGN-ADDRESS)
   (D :FOREIGN-ADDRESS) (E :FOREIGN-ADDRESS) (Q :FOREIGN-ADDRESS)
   (LDQ :FOREIGN-ADDRESS) (PT :FOREIGN-ADDRESS) (LDPT :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS) (WORK :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DGBBRD
    (VECT M N NCC KL KU AB LDAB D E Q LDQ PT LDPT C LDC WORK INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGBBRD)
   (COMMON-LISP:TYPE COMMON-LISP:STRING VECT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) NCC)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) D)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) E)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Q)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDQ)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) PT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDPT)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) WORK)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12946 ':INT32) (N-REF12947 ':INT32)
                              (NCC-REF12948 ':INT32)
                              (KL-REF12949 ':INT32)
                              (KU-REF12950 ':INT32)
                              (LDAB-REF12952 ':INT32)
                              (LDQ-REF12956 ':INT32)
                              (LDPT-REF12958 ':INT32)
                              (LDC-REF12960 ':INT32)
                              (INFO-REF12962 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12946 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12947 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF NCC-REF12948 :INT32) NCC)
    (COMMON-LISP:SETF (CFFI:MEM-REF KL-REF12949 :INT32) KL)
    (COMMON-LISP:SETF (CFFI:MEM-REF KU-REF12950 :INT32) KU)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAB-REF12952 :INT32) LDAB)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDQ-REF12956 :INT32) LDQ)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDPT-REF12958 :INT32) LDPT)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF12960 :INT32) LDC)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12962 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AB-REF12951 AB)
                                            (D-REF12953 D)
                                            (E-REF12954 E)
                                            (Q-REF12955 Q)
                                            (PT-REF12957 PT)
                                            (C-REF12959 C)
                                            (WORK-REF12961 WORK))
      (%%DGBBRD VECT M-REF12946 N-REF12947 NCC-REF12948 KL-REF12949
       KU-REF12950 AB-REF12951 LDAB-REF12952 D-REF12953 E-REF12954
       Q-REF12955 LDQ-REF12956 PT-REF12957 LDPT-REF12958 C-REF12959
       LDC-REF12960 WORK-REF12961 INFO-REF12962))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SGBTF2 "sgbtf2_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (KL :FOREIGN-ADDRESS)
   (KU :FOREIGN-ADDRESS) (AB :FOREIGN-ADDRESS) (LDAB :FOREIGN-ADDRESS)
   (IPIV :FOREIGN-ADDRESS) (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SGBTF2 (M N KL KU AB LDAB IPIV INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SGBTF2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KU)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) AB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDAB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY (COMMON-LISP:SIGNED-BYTE 32)
     (COMMON-LISP:*))
    IPIV)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF12963 ':INT32) (N-REF12964 ':INT32)
                              (KL-REF12965 ':INT32)
                              (KU-REF12966 ':INT32)
                              (LDAB-REF12968 ':INT32)
                              (INFO-REF12970 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF12963 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF12964 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KL-REF12965 :INT32) KL)
    (COMMON-LISP:SETF (CFFI:MEM-REF KU-REF12966 :INT32) KU)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDAB-REF12968 :INT32) LDAB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF12970 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AB-REF12967 AB)
                                            (IPIV-REF12969 IPIV))
      (%%SGBTF2 M-REF12963 N-REF12964 KL-REF12965 KU-REF12966
       AB-REF12967 LDAB-REF12968 IPIV-REF12969 INFO-REF12970))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZLADIV %ZLADIV %%DLARRJ
                      %DLARRJ %%CHEEVR %CHEEVR %%ZGBBRD %ZGBBRD
                      %%CSPTRF %CSPTRF %%ZGGLSE %ZGGLSE %%DPPSV %DPPSV
                      %%ZLANHS %ZLANHS %%CSYCON_3 %CSYCON_3 %%DTGSY2
                      %DTGSY2 %%DTPQRT2 %DTPQRT2 %%DTPMLQT %DTPMLQT
                      %%DLA_GERCOND %DLA_GERCOND %%CTGEXC %CTGEXC
                      %%SGGEVX %SGGEVX %%DLARNV %DLARNV %%CLAR2V
                      %CLAR2V %%ZLARFGP %ZLARFGP %%ZHEEV_2STAGE
                      %ZHEEV_2STAGE %%DGEES %DGEES
                      %%DLA_PORFSX_EXTENDED %DLA_PORFSX_EXTENDED
                      %%DLAEV2 %DLAEV2 %%ZLANHP %ZLANHP
                      %%CHETRS_AA_2STAGE %CHETRS_AA_2STAGE %%CHSEQR
                      %CHSEQR %%CPFTRI %CPFTRI %%SGTRFS %SGTRFS
                      %%CGEQRFP %CGEQRFP %%ILASLC %ILASLC %%LSAMEN
                      %LSAMEN %%CLAPMR %CLAPMR %%DSPSVX %DSPSVX
                      %%ZGBRFS %ZGBRFS %%ZHBEVX %ZHBEVX %%DGTSV %DGTSV
                      %%CLAQPS %CLAQPS %%SORGTR %SORGTR %%SLALSD
                      %SLALSD %%STGSJA %STGSJA %%CSYSV_AA_2STAGE
                      %CSYSV_AA_2STAGE %%DSYSV_AA_2STAGE
                      %DSYSV_AA_2STAGE %%ZPPTRF %ZPPTRF %%CGETRS
                      %CGETRS %%ZHETRI2 %ZHETRI2 %%CLACRM %CLACRM
                      %%DLAORHR_COL_GETRFNP %DLAORHR_COL_GETRFNP
                      %%CLA_GBRFSX_EXTENDED %CLA_GBRFSX_EXTENDED
                      %%ZTPTTR %ZTPTTR %%CPBTF2 %CPBTF2 %%CLAQSY
                      %CLAQSY %%ZTRTTP %ZTRTTP %%ZLANTR %ZLANTR
                      %%SHSEIN %SHSEIN %%SPTSVX %SPTSVX %%DSYTRI
                      %DSYTRI %%CLARZ %CLARZ %%ZUNGQL %ZUNGQL %%SSYTRI
                      %SSYTRI %%ZHETRD_2STAGE %ZHETRD_2STAGE %%STRTI2
                      %STRTI2 %%SSYEVX %SSYEVX %%SGBRFS %SGBRFS
                      %%CUNGLQ %CUNGLQ %%DLACON %DLACON %%ZGEQRF
                      %ZGEQRF %%STBTRS %STBTRS %%ZHEEVD_2STAGE
                      %ZHEEVD_2STAGE %%CTRTRI %CTRTRI %%DGEEQUB
                      %DGEEQUB %%CUNMTR %CUNMTR %%SPTCON %SPTCON
                      %%ZSTEGR %ZSTEGR %%ZGGEV %ZGGEV %%CGGQRF %CGGQRF
                      %%SSTEVD %SSTEVD %%CTPMQRT %CTPMQRT %%DPTCON
                      %DPTCON %%CSYTF2 %CSYTF2 %%CUNGBR %CUNGBR
                      %%SLACPY %SLACPY %%DPOEQUB %DPOEQUB %%CLASYF_AA
                      %CLASYF_AA %%ZUNGLQ %ZUNGLQ %%SORGTSQR %SORGTSQR
                      %%ZUNMQR %ZUNMQR %%ZLACRT %ZLACRT %%CHEEVD
                      %CHEEVD %%DTFTTR %DTFTTR %%ZHETF2_ROOK
                      %ZHETF2_ROOK %%SLAQR1 %SLAQR1 %%SBDSDC %SBDSDC
                      %%DGETSLS %DGETSLS %%DLASYF_AA %DLASYF_AA
                      %%DSGESV %DSGESV %%ZGESVD %ZGESVD %%SLARRB
                      %SLARRB %%CGEQL2 %CGEQL2 %%ZPORFS %ZPORFS
                      %%ZGETF2 %ZGETF2 %%ZGERQ2 %ZGERQ2 %%CLA_GERCOND_C
                      %CLA_GERCOND_C %%DLARTG %DLARTG %%DSB2ST_KERNELS
                      %DSB2ST_KERNELS %%ZLAQSB %ZLAQSB %%CLAED8 %CLAED8
                      %%CSYSV %CSYSV %%CPSTRF %CPSTRF %%ZGEES %ZGEES
                      %%ZGEHD2 %ZGEHD2 %%CHETRI2X %CHETRI2X %%DPOEQU
                      %DPOEQU %%ZLAPMT %ZLAPMT %%DSPGVD %DSPGVD
                      %%DLAPLL %DLAPLL %%DPOTRF2 %DPOTRF2 %%DLAS2
                      %DLAS2 %%ZGBSV %ZGBSV %%SLARTV %SLARTV %%CGGES
                      %CGGES %%SPSTF2 %SPSTF2 %%ZUNM2R %ZUNM2R %%ZPBCON
                      %ZPBCON %%DPBTF2 %DPBTF2 %%DLARFX %DLARFX
                      %%ZSYEQUB %ZSYEQUB %%DLARRC %DLARRC %%ZSPTRF
                      %ZSPTRF %%CPOEQUB %CPOEQUB %%DSYEVD %DSYEVD
                      %%SGBSVXX %SGBSVXX %%DGELSD %DGELSD %%CUNM2L
                      %CUNM2L %%SLAR1V %SLAR1V %%CLAED7 %CLAED7
                      %%CSRSCL %CSRSCL %%DPOTF2 %DPOTF2 %%DSPEVX
                      %DSPEVX %%DLASDT %DLASDT %%DSPRFS %DSPRFS
                      %%CTPQRT %CTPQRT %%SSTEMR %SSTEMR %%DLAED4
                      %DLAED4 %%SGETC2 %SGETC2 %%CLARFG %CLARFG
                      %%DPORFS %DPORFS %%DGEEQU %DGEEQU %%CTRRFS
                      %CTRRFS %%STPQRT2 %STPQRT2 %%CGGHD3 %CGGHD3
                      %%SORG2L %SORG2L %%SLANSF %SLANSF %%SORGLQ
                      %SORGLQ %%DORCSD %DORCSD %%ZHBTRD %ZHBTRD
                      %%DTPTRI %DTPTRI %%CGESDD %CGESDD %%SLAQPS
                      %SLAQPS %%CGEHRD %CGEHRD %%CHPSVX %CHPSVX
                      %%SORGQL %SORGQL %%SLAED6 %SLAED6 %%DGEMLQ
                      %DGEMLQ %%SSYSV_RK %SSYSV_RK %%CLATRS %CLATRS
                      %%CHETF2_RK %CHETF2_RK %%CPTTRS %CPTTRS %%IPARMQ
                      %IPARMQ %%SLARFT %SLARFT %%SLAG2D %SLAG2D
                      %%CTPRFB %CTPRFB %%ZHBEV %ZHBEV %%CGERQ2 %CGERQ2
                      %%SLASET %SLASET %%ZHETRF_ROOK %ZHETRF_ROOK
                      %%ZPTCON %ZPTCON %%DGGHRD %DGGHRD %%CSTEIN
                      %CSTEIN %%DGELQT3 %DGELQT3 %%ZGEBAK %ZGEBAK
                      %%DPBTRS %DPBTRS %%CPBRFS %CPBRFS %%SGEESX
                      %SGEESX %%CHETRI2 %CHETRI2 %%SLA_WWADDW
                      %SLA_WWADDW %%ZUNMR2 %ZUNMR2 %%CLASSQ %CLASSQ
                      %%CLAMTSQR %CLAMTSQR %%SORMQR %SORMQR %%CLAHEF_RK
                      %CLAHEF_RK %%CLAQSP %CLAQSP %%SLABAD %SLABAD
                      %%DLAEIN %DLAEIN %%SPOEQU %SPOEQU %%ZSYCON
                      %ZSYCON %%ZGESVDX %ZGESVDX %%DORGTSQR %DORGTSQR
                      %%DGGQRF %DGGQRF %%CPBSV %CPBSV %%SLA_GEAMV
                      %SLA_GEAMV %%ZHETRI2X %ZHETRI2X %%ZGBCON %ZGBCON
                      %%SLASD1 %SLASD1 %%CHETD2 %CHETD2 %%CHESWAPR
                      %CHESWAPR %%DPBRFS %DPBRFS %%CUNM22 %CUNM22
                      %%CGETC2 %CGETC2 %%ZLASET %ZLASET %%DLA_GERPVGRW
                      %DLA_GERPVGRW %%ZGETC2 %ZGETC2 %%ZGEMQRT %ZGEMQRT
                      %%CUNBDB2 %CUNBDB2 %%SGELQ %SGELQ %%ZTRTRS
                      %ZTRTRS %%SSYTRF_RK %SSYTRF_RK %%DLARUV %DLARUV
                      %%ZHBGST %ZHBGST %%SBDSVDX %SBDSVDX %%ZUNGR2
                      %ZUNGR2 %%ZSYSV_AA_2STAGE %ZSYSV_AA_2STAGE
                      %%DGETC2 %DGETC2 %%ZPPTRS %ZPPTRS %%CPPSV %CPPSV
                      %%ZSYTF2 %ZSYTF2 %%SSYTRF_ROOK %SSYTRF_ROOK
                      %%CSYTRS_3 %CSYTRS_3 %%CLA_SYRPVGRW %CLA_SYRPVGRW
                      %%CSTEQR %CSTEQR %%ZHGEQZ %ZHGEQZ %%ZHPEVD
                      %ZHPEVD %%CHPTRS %CHPTRS %%DLASQ2 %DLASQ2
                      %%SLAQP2 %SLAQP2 %%DORHR_COL %DORHR_COL %%DSYGV
                      %DSYGV %%SLARFGP %SLARFGP %%SLANGT %SLANGT
                      %%CGGHRD %CGGHRD %%CUNML2 %CUNML2
                      %%CHESV_AA_2STAGE %CHESV_AA_2STAGE %%SLAQR2
                      %SLAQR2 %%SPOTRI %SPOTRI %%CGEQP3 %CGEQP3
                      %%SGEEQU %SGEEQU %%DLAQR4 %DLAQR4
                      %%SSYSV_AA_2STAGE %SSYSV_AA_2STAGE %%DGBBRD
                      %DGBBRD %%SGBTF2 %SGBTF2))

(MAGICL.FOREIGN-LIBRARIES:TRACK-SYMBOLS
  'MAGICL.FOREIGN-LIBRARIES::LIBLAPACK
  '(("ZLADIV" "zladiv_" %%ZLADIV %ZLADIV)
    ("DLARRJ" "dlarrj_" %%DLARRJ %DLARRJ)
    ("CHEEVR" "cheevr_" %%CHEEVR %CHEEVR)
    ("ZGBBRD" "zgbbrd_" %%ZGBBRD %ZGBBRD)
    ("CSPTRF" "csptrf_" %%CSPTRF %CSPTRF)
    ("ZGGLSE" "zgglse_" %%ZGGLSE %ZGGLSE)
    ("DPPSV" "dppsv_" %%DPPSV %DPPSV)
    ("ZLANHS" "zlanhs_" %%ZLANHS %ZLANHS)
    ("CSYCON_3" "csycon_3_" %%CSYCON_3 %CSYCON_3)
    ("DTGSY2" "dtgsy2_" %%DTGSY2 %DTGSY2)
    ("DTPQRT2" "dtpqrt2_" %%DTPQRT2 %DTPQRT2)
    ("DTPMLQT" "dtpmlqt_" %%DTPMLQT %DTPMLQT)
    ("DLA_GERCOND" "dla_gercond_" %%DLA_GERCOND %DLA_GERCOND)
    ("CTGEXC" "ctgexc_" %%CTGEXC %CTGEXC)
    ("SGGEVX" "sggevx_" %%SGGEVX %SGGEVX)
    ("DLARNV" "dlarnv_" %%DLARNV %DLARNV)
    ("CLAR2V" "clar2v_" %%CLAR2V %CLAR2V)
    ("ZLARFGP" "zlarfgp_" %%ZLARFGP %ZLARFGP)
    ("ZHEEV_2STAGE" "zheev_2stage_" %%ZHEEV_2STAGE %ZHEEV_2STAGE)
    ("DGEES" "dgees_" %%DGEES %DGEES)
    ("DLA_PORFSX_EXTENDED" "dla_porfsx_extended_" %%DLA_PORFSX_EXTENDED
     %DLA_PORFSX_EXTENDED)
    ("DLAEV2" "dlaev2_" %%DLAEV2 %DLAEV2)
    ("ZLANHP" "zlanhp_" %%ZLANHP %ZLANHP)
    ("CHETRS_AA_2STAGE" "chetrs_aa_2stage_" %%CHETRS_AA_2STAGE
     %CHETRS_AA_2STAGE)
    ("CHSEQR" "chseqr_" %%CHSEQR %CHSEQR)
    ("CPFTRI" "cpftri_" %%CPFTRI %CPFTRI)
    ("SGTRFS" "sgtrfs_" %%SGTRFS %SGTRFS)
    ("CGEQRFP" "cgeqrfp_" %%CGEQRFP %CGEQRFP)
    ("ILASLC" "ilaslc_" %%ILASLC %ILASLC)
    ("LSAMEN" "lsamen_" %%LSAMEN %LSAMEN)
    ("CLAPMR" "clapmr_" %%CLAPMR %CLAPMR)
    ("DSPSVX" "dspsvx_" %%DSPSVX %DSPSVX)
    ("ZGBRFS" "zgbrfs_" %%ZGBRFS %ZGBRFS)
    ("ZHBEVX" "zhbevx_" %%ZHBEVX %ZHBEVX)
    ("DGTSV" "dgtsv_" %%DGTSV %DGTSV)
    ("CLAQPS" "claqps_" %%CLAQPS %CLAQPS)
    ("SORGTR" "sorgtr_" %%SORGTR %SORGTR)
    ("SLALSD" "slalsd_" %%SLALSD %SLALSD)
    ("STGSJA" "stgsja_" %%STGSJA %STGSJA)
    ("CSYSV_AA_2STAGE" "csysv_aa_2stage_" %%CSYSV_AA_2STAGE
     %CSYSV_AA_2STAGE)
    ("DSYSV_AA_2STAGE" "dsysv_aa_2stage_" %%DSYSV_AA_2STAGE
     %DSYSV_AA_2STAGE)
    ("ZPPTRF" "zpptrf_" %%ZPPTRF %ZPPTRF)
    ("CGETRS" "cgetrs_" %%CGETRS %CGETRS)
    ("ZHETRI2" "zhetri2_" %%ZHETRI2 %ZHETRI2)
    ("CLACRM" "clacrm_" %%CLACRM %CLACRM)
    ("DLAORHR_COL_GETRFNP" "dlaorhr_col_getrfnp_" %%DLAORHR_COL_GETRFNP
     %DLAORHR_COL_GETRFNP)
    ("CLA_GBRFSX_EXTENDED" "cla_gbrfsx_extended_" %%CLA_GBRFSX_EXTENDED
     %CLA_GBRFSX_EXTENDED)
    ("ZTPTTR" "ztpttr_" %%ZTPTTR %ZTPTTR)
    ("CPBTF2" "cpbtf2_" %%CPBTF2 %CPBTF2)
    ("CLAQSY" "claqsy_" %%CLAQSY %CLAQSY)
    ("ZTRTTP" "ztrttp_" %%ZTRTTP %ZTRTTP)
    ("ZLANTR" "zlantr_" %%ZLANTR %ZLANTR)
    ("SHSEIN" "shsein_" %%SHSEIN %SHSEIN)
    ("SPTSVX" "sptsvx_" %%SPTSVX %SPTSVX)
    ("DSYTRI" "dsytri_" %%DSYTRI %DSYTRI)
    ("CLARZ" "clarz_" %%CLARZ %CLARZ)
    ("ZUNGQL" "zungql_" %%ZUNGQL %ZUNGQL)
    ("SSYTRI" "ssytri_" %%SSYTRI %SSYTRI)
    ("ZHETRD_2STAGE" "zhetrd_2stage_" %%ZHETRD_2STAGE %ZHETRD_2STAGE)
    ("STRTI2" "strti2_" %%STRTI2 %STRTI2)
    ("SSYEVX" "ssyevx_" %%SSYEVX %SSYEVX)
    ("SGBRFS" "sgbrfs_" %%SGBRFS %SGBRFS)
    ("CUNGLQ" "cunglq_" %%CUNGLQ %CUNGLQ)
    ("DLACON" "dlacon_" %%DLACON %DLACON)
    ("ZGEQRF" "zgeqrf_" %%ZGEQRF %ZGEQRF)
    ("STBTRS" "stbtrs_" %%STBTRS %STBTRS)
    ("ZHEEVD_2STAGE" "zheevd_2stage_" %%ZHEEVD_2STAGE %ZHEEVD_2STAGE)
    ("CTRTRI" "ctrtri_" %%CTRTRI %CTRTRI)
    ("DGEEQUB" "dgeequb_" %%DGEEQUB %DGEEQUB)
    ("CUNMTR" "cunmtr_" %%CUNMTR %CUNMTR)
    ("SPTCON" "sptcon_" %%SPTCON %SPTCON)
    ("ZSTEGR" "zstegr_" %%ZSTEGR %ZSTEGR)
    ("ZGGEV" "zggev_" %%ZGGEV %ZGGEV)
    ("CGGQRF" "cggqrf_" %%CGGQRF %CGGQRF)
    ("SSTEVD" "sstevd_" %%SSTEVD %SSTEVD)
    ("CTPMQRT" "ctpmqrt_" %%CTPMQRT %CTPMQRT)
    ("DPTCON" "dptcon_" %%DPTCON %DPTCON)
    ("CSYTF2" "csytf2_" %%CSYTF2 %CSYTF2)
    ("CUNGBR" "cungbr_" %%CUNGBR %CUNGBR)
    ("SLACPY" "slacpy_" %%SLACPY %SLACPY)
    ("DPOEQUB" "dpoequb_" %%DPOEQUB %DPOEQUB)
    ("CLASYF_AA" "clasyf_aa_" %%CLASYF_AA %CLASYF_AA)
    ("ZUNGLQ" "zunglq_" %%ZUNGLQ %ZUNGLQ)
    ("SORGTSQR" "sorgtsqr_" %%SORGTSQR %SORGTSQR)
    ("ZUNMQR" "zunmqr_" %%ZUNMQR %ZUNMQR)
    ("ZLACRT" "zlacrt_" %%ZLACRT %ZLACRT)
    ("CHEEVD" "cheevd_" %%CHEEVD %CHEEVD)
    ("DTFTTR" "dtfttr_" %%DTFTTR %DTFTTR)
    ("ZHETF2_ROOK" "zhetf2_rook_" %%ZHETF2_ROOK %ZHETF2_ROOK)
    ("SLAQR1" "slaqr1_" %%SLAQR1 %SLAQR1)
    ("SBDSDC" "sbdsdc_" %%SBDSDC %SBDSDC)
    ("DGETSLS" "dgetsls_" %%DGETSLS %DGETSLS)
    ("DLASYF_AA" "dlasyf_aa_" %%DLASYF_AA %DLASYF_AA)
    ("DSGESV" "dsgesv_" %%DSGESV %DSGESV)
    ("ZGESVD" "zgesvd_" %%ZGESVD %ZGESVD)
    ("SLARRB" "slarrb_" %%SLARRB %SLARRB)
    ("CGEQL2" "cgeql2_" %%CGEQL2 %CGEQL2)
    ("ZPORFS" "zporfs_" %%ZPORFS %ZPORFS)
    ("ZGETF2" "zgetf2_" %%ZGETF2 %ZGETF2)
    ("ZGERQ2" "zgerq2_" %%ZGERQ2 %ZGERQ2)
    ("CLA_GERCOND_C" "cla_gercond_c_" %%CLA_GERCOND_C %CLA_GERCOND_C)
    ("DLARTG" "dlartg_" %%DLARTG %DLARTG)
    ("DSB2ST_KERNELS" "dsb2st_kernels_" %%DSB2ST_KERNELS
     %DSB2ST_KERNELS)
    ("ZLAQSB" "zlaqsb_" %%ZLAQSB %ZLAQSB)
    ("CLAED8" "claed8_" %%CLAED8 %CLAED8)
    ("CSYSV" "csysv_" %%CSYSV %CSYSV)
    ("CPSTRF" "cpstrf_" %%CPSTRF %CPSTRF)
    ("ZGEES" "zgees_" %%ZGEES %ZGEES)
    ("ZGEHD2" "zgehd2_" %%ZGEHD2 %ZGEHD2)
    ("CHETRI2X" "chetri2x_" %%CHETRI2X %CHETRI2X)
    ("DPOEQU" "dpoequ_" %%DPOEQU %DPOEQU)
    ("ZLAPMT" "zlapmt_" %%ZLAPMT %ZLAPMT)
    ("DSPGVD" "dspgvd_" %%DSPGVD %DSPGVD)
    ("DLAPLL" "dlapll_" %%DLAPLL %DLAPLL)
    ("DPOTRF2" "dpotrf2_" %%DPOTRF2 %DPOTRF2)
    ("DLAS2" "dlas2_" %%DLAS2 %DLAS2) ("ZGBSV" "zgbsv_" %%ZGBSV %ZGBSV)
    ("SLARTV" "slartv_" %%SLARTV %SLARTV)
    ("CGGES" "cgges_" %%CGGES %CGGES)
    ("SPSTF2" "spstf2_" %%SPSTF2 %SPSTF2)
    ("ZUNM2R" "zunm2r_" %%ZUNM2R %ZUNM2R)
    ("ZPBCON" "zpbcon_" %%ZPBCON %ZPBCON)
    ("DPBTF2" "dpbtf2_" %%DPBTF2 %DPBTF2)
    ("DLARFX" "dlarfx_" %%DLARFX %DLARFX)
    ("ZSYEQUB" "zsyequb_" %%ZSYEQUB %ZSYEQUB)
    ("DLARRC" "dlarrc_" %%DLARRC %DLARRC)
    ("ZSPTRF" "zsptrf_" %%ZSPTRF %ZSPTRF)
    ("CPOEQUB" "cpoequb_" %%CPOEQUB %CPOEQUB)
    ("DSYEVD" "dsyevd_" %%DSYEVD %DSYEVD)
    ("SGBSVXX" "sgbsvxx_" %%SGBSVXX %SGBSVXX)
    ("DGELSD" "dgelsd_" %%DGELSD %DGELSD)
    ("CUNM2L" "cunm2l_" %%CUNM2L %CUNM2L)
    ("SLAR1V" "slar1v_" %%SLAR1V %SLAR1V)
    ("CLAED7" "claed7_" %%CLAED7 %CLAED7)
    ("CSRSCL" "csrscl_" %%CSRSCL %CSRSCL)
    ("DPOTF2" "dpotf2_" %%DPOTF2 %DPOTF2)
    ("DSPEVX" "dspevx_" %%DSPEVX %DSPEVX)
    ("DLASDT" "dlasdt_" %%DLASDT %DLASDT)
    ("DSPRFS" "dsprfs_" %%DSPRFS %DSPRFS)
    ("CTPQRT" "ctpqrt_" %%CTPQRT %CTPQRT)
    ("SSTEMR" "sstemr_" %%SSTEMR %SSTEMR)
    ("DLAED4" "dlaed4_" %%DLAED4 %DLAED4)
    ("SGETC2" "sgetc2_" %%SGETC2 %SGETC2)
    ("CLARFG" "clarfg_" %%CLARFG %CLARFG)
    ("DPORFS" "dporfs_" %%DPORFS %DPORFS)
    ("DGEEQU" "dgeequ_" %%DGEEQU %DGEEQU)
    ("CTRRFS" "ctrrfs_" %%CTRRFS %CTRRFS)
    ("STPQRT2" "stpqrt2_" %%STPQRT2 %STPQRT2)
    ("CGGHD3" "cgghd3_" %%CGGHD3 %CGGHD3)
    ("SORG2L" "sorg2l_" %%SORG2L %SORG2L)
    ("SLANSF" "slansf_" %%SLANSF %SLANSF)
    ("SORGLQ" "sorglq_" %%SORGLQ %SORGLQ)
    ("DORCSD" "dorcsd_" %%DORCSD %DORCSD)
    ("ZHBTRD" "zhbtrd_" %%ZHBTRD %ZHBTRD)
    ("DTPTRI" "dtptri_" %%DTPTRI %DTPTRI)
    ("CGESDD" "cgesdd_" %%CGESDD %CGESDD)
    ("SLAQPS" "slaqps_" %%SLAQPS %SLAQPS)
    ("CGEHRD" "cgehrd_" %%CGEHRD %CGEHRD)
    ("CHPSVX" "chpsvx_" %%CHPSVX %CHPSVX)
    ("SORGQL" "sorgql_" %%SORGQL %SORGQL)
    ("SLAED6" "slaed6_" %%SLAED6 %SLAED6)
    ("DGEMLQ" "dgemlq_" %%DGEMLQ %DGEMLQ)
    ("SSYSV_RK" "ssysv_rk_" %%SSYSV_RK %SSYSV_RK)
    ("CLATRS" "clatrs_" %%CLATRS %CLATRS)
    ("CHETF2_RK" "chetf2_rk_" %%CHETF2_RK %CHETF2_RK)
    ("CPTTRS" "cpttrs_" %%CPTTRS %CPTTRS)
    ("IPARMQ" "iparmq_" %%IPARMQ %IPARMQ)
    ("SLARFT" "slarft_" %%SLARFT %SLARFT)
    ("SLAG2D" "slag2d_" %%SLAG2D %SLAG2D)
    ("CTPRFB" "ctprfb_" %%CTPRFB %CTPRFB)
    ("ZHBEV" "zhbev_" %%ZHBEV %ZHBEV)
    ("CGERQ2" "cgerq2_" %%CGERQ2 %CGERQ2)
    ("SLASET" "slaset_" %%SLASET %SLASET)
    ("ZHETRF_ROOK" "zhetrf_rook_" %%ZHETRF_ROOK %ZHETRF_ROOK)
    ("ZPTCON" "zptcon_" %%ZPTCON %ZPTCON)
    ("DGGHRD" "dgghrd_" %%DGGHRD %DGGHRD)
    ("CSTEIN" "cstein_" %%CSTEIN %CSTEIN)
    ("DGELQT3" "dgelqt3_" %%DGELQT3 %DGELQT3)
    ("ZGEBAK" "zgebak_" %%ZGEBAK %ZGEBAK)
    ("DPBTRS" "dpbtrs_" %%DPBTRS %DPBTRS)
    ("CPBRFS" "cpbrfs_" %%CPBRFS %CPBRFS)
    ("SGEESX" "sgeesx_" %%SGEESX %SGEESX)
    ("CHETRI2" "chetri2_" %%CHETRI2 %CHETRI2)
    ("SLA_WWADDW" "sla_wwaddw_" %%SLA_WWADDW %SLA_WWADDW)
    ("ZUNMR2" "zunmr2_" %%ZUNMR2 %ZUNMR2)
    ("CLASSQ" "classq_" %%CLASSQ %CLASSQ)
    ("CLAMTSQR" "clamtsqr_" %%CLAMTSQR %CLAMTSQR)
    ("SORMQR" "sormqr_" %%SORMQR %SORMQR)
    ("CLAHEF_RK" "clahef_rk_" %%CLAHEF_RK %CLAHEF_RK)
    ("CLAQSP" "claqsp_" %%CLAQSP %CLAQSP)
    ("SLABAD" "slabad_" %%SLABAD %SLABAD)
    ("DLAEIN" "dlaein_" %%DLAEIN %DLAEIN)
    ("SPOEQU" "spoequ_" %%SPOEQU %SPOEQU)
    ("ZSYCON" "zsycon_" %%ZSYCON %ZSYCON)
    ("ZGESVDX" "zgesvdx_" %%ZGESVDX %ZGESVDX)
    ("DORGTSQR" "dorgtsqr_" %%DORGTSQR %DORGTSQR)
    ("DGGQRF" "dggqrf_" %%DGGQRF %DGGQRF)
    ("CPBSV" "cpbsv_" %%CPBSV %CPBSV)
    ("SLA_GEAMV" "sla_geamv_" %%SLA_GEAMV %SLA_GEAMV)
    ("ZHETRI2X" "zhetri2x_" %%ZHETRI2X %ZHETRI2X)
    ("ZGBCON" "zgbcon_" %%ZGBCON %ZGBCON)
    ("SLASD1" "slasd1_" %%SLASD1 %SLASD1)
    ("CHETD2" "chetd2_" %%CHETD2 %CHETD2)
    ("CHESWAPR" "cheswapr_" %%CHESWAPR %CHESWAPR)
    ("DPBRFS" "dpbrfs_" %%DPBRFS %DPBRFS)
    ("CUNM22" "cunm22_" %%CUNM22 %CUNM22)
    ("CGETC2" "cgetc2_" %%CGETC2 %CGETC2)
    ("ZLASET" "zlaset_" %%ZLASET %ZLASET)
    ("DLA_GERPVGRW" "dla_gerpvgrw_" %%DLA_GERPVGRW %DLA_GERPVGRW)
    ("ZGETC2" "zgetc2_" %%ZGETC2 %ZGETC2)
    ("ZGEMQRT" "zgemqrt_" %%ZGEMQRT %ZGEMQRT)
    ("CUNBDB2" "cunbdb2_" %%CUNBDB2 %CUNBDB2)
    ("SGELQ" "sgelq_" %%SGELQ %SGELQ)
    ("ZTRTRS" "ztrtrs_" %%ZTRTRS %ZTRTRS)
    ("SSYTRF_RK" "ssytrf_rk_" %%SSYTRF_RK %SSYTRF_RK)
    ("DLARUV" "dlaruv_" %%DLARUV %DLARUV)
    ("ZHBGST" "zhbgst_" %%ZHBGST %ZHBGST)
    ("SBDSVDX" "sbdsvdx_" %%SBDSVDX %SBDSVDX)
    ("ZUNGR2" "zungr2_" %%ZUNGR2 %ZUNGR2)
    ("ZSYSV_AA_2STAGE" "zsysv_aa_2stage_" %%ZSYSV_AA_2STAGE
     %ZSYSV_AA_2STAGE)
    ("DGETC2" "dgetc2_" %%DGETC2 %DGETC2)
    ("ZPPTRS" "zpptrs_" %%ZPPTRS %ZPPTRS)
    ("CPPSV" "cppsv_" %%CPPSV %CPPSV)
    ("ZSYTF2" "zsytf2_" %%ZSYTF2 %ZSYTF2)
    ("SSYTRF_ROOK" "ssytrf_rook_" %%SSYTRF_ROOK %SSYTRF_ROOK)
    ("CSYTRS_3" "csytrs_3_" %%CSYTRS_3 %CSYTRS_3)
    ("CLA_SYRPVGRW" "cla_syrpvgrw_" %%CLA_SYRPVGRW %CLA_SYRPVGRW)
    ("CSTEQR" "csteqr_" %%CSTEQR %CSTEQR)
    ("ZHGEQZ" "zhgeqz_" %%ZHGEQZ %ZHGEQZ)
    ("ZHPEVD" "zhpevd_" %%ZHPEVD %ZHPEVD)
    ("CHPTRS" "chptrs_" %%CHPTRS %CHPTRS)
    ("DLASQ2" "dlasq2_" %%DLASQ2 %DLASQ2)
    ("SLAQP2" "slaqp2_" %%SLAQP2 %SLAQP2)
    ("DORHR_COL" "dorhr_col_" %%DORHR_COL %DORHR_COL)
    ("DSYGV" "dsygv_" %%DSYGV %DSYGV)
    ("SLARFGP" "slarfgp_" %%SLARFGP %SLARFGP)
    ("SLANGT" "slangt_" %%SLANGT %SLANGT)
    ("CGGHRD" "cgghrd_" %%CGGHRD %CGGHRD)
    ("CUNML2" "cunml2_" %%CUNML2 %CUNML2)
    ("CHESV_AA_2STAGE" "chesv_aa_2stage_" %%CHESV_AA_2STAGE
     %CHESV_AA_2STAGE)
    ("SLAQR2" "slaqr2_" %%SLAQR2 %SLAQR2)
    ("SPOTRI" "spotri_" %%SPOTRI %SPOTRI)
    ("CGEQP3" "cgeqp3_" %%CGEQP3 %CGEQP3)
    ("SGEEQU" "sgeequ_" %%SGEEQU %SGEEQU)
    ("DLAQR4" "dlaqr4_" %%DLAQR4 %DLAQR4)
    ("SSYSV_AA_2STAGE" "ssysv_aa_2stage_" %%SSYSV_AA_2STAGE
     %SSYSV_AA_2STAGE)
    ("DGBBRD" "dgbbrd_" %%DGBBRD %DGBBRD)
    ("SGBTF2" "sgbtf2_" %%SGBTF2 %SGBTF2)))

(COMMON-LISP:EXPORT '(%ZLADIV %DLARRJ %CHEEVR %ZGBBRD %CSPTRF %ZGGLSE
                      %DPPSV %ZLANHS %CSYCON_3 %DTGSY2 %DTPQRT2
                      %DTPMLQT %DLA_GERCOND %CTGEXC %SGGEVX %DLARNV
                      %CLAR2V %ZLARFGP %ZHEEV_2STAGE %DGEES
                      %DLA_PORFSX_EXTENDED %DLAEV2 %ZLANHP
                      %CHETRS_AA_2STAGE %CHSEQR %CPFTRI %SGTRFS
                      %CGEQRFP %ILASLC %LSAMEN %CLAPMR %DSPSVX %ZGBRFS
                      %ZHBEVX %DGTSV %CLAQPS %SORGTR %SLALSD %STGSJA
                      %CSYSV_AA_2STAGE %DSYSV_AA_2STAGE %ZPPTRF %CGETRS
                      %ZHETRI2 %CLACRM %DLAORHR_COL_GETRFNP
                      %CLA_GBRFSX_EXTENDED %ZTPTTR %CPBTF2 %CLAQSY
                      %ZTRTTP %ZLANTR %SHSEIN %SPTSVX %DSYTRI %CLARZ
                      %ZUNGQL %SSYTRI %ZHETRD_2STAGE %STRTI2 %SSYEVX
                      %SGBRFS %CUNGLQ %DLACON %ZGEQRF %STBTRS
                      %ZHEEVD_2STAGE %CTRTRI %DGEEQUB %CUNMTR %SPTCON
                      %ZSTEGR %ZGGEV %CGGQRF %SSTEVD %CTPMQRT %DPTCON
                      %CSYTF2 %CUNGBR %SLACPY %DPOEQUB %CLASYF_AA
                      %ZUNGLQ %SORGTSQR %ZUNMQR %ZLACRT %CHEEVD %DTFTTR
                      %ZHETF2_ROOK %SLAQR1 %SBDSDC %DGETSLS %DLASYF_AA
                      %DSGESV %ZGESVD %SLARRB %CGEQL2 %ZPORFS %ZGETF2
                      %ZGERQ2 %CLA_GERCOND_C %DLARTG %DSB2ST_KERNELS
                      %ZLAQSB %CLAED8 %CSYSV %CPSTRF %ZGEES %ZGEHD2
                      %CHETRI2X %DPOEQU %ZLAPMT %DSPGVD %DLAPLL
                      %DPOTRF2 %DLAS2 %ZGBSV %SLARTV %CGGES %SPSTF2
                      %ZUNM2R %ZPBCON %DPBTF2 %DLARFX %ZSYEQUB %DLARRC
                      %ZSPTRF %CPOEQUB %DSYEVD %SGBSVXX %DGELSD %CUNM2L
                      %SLAR1V %CLAED7 %CSRSCL %DPOTF2 %DSPEVX %DLASDT
                      %DSPRFS %CTPQRT %SSTEMR %DLAED4 %SGETC2 %CLARFG
                      %DPORFS %DGEEQU %CTRRFS %STPQRT2 %CGGHD3 %SORG2L
                      %SLANSF %SORGLQ %DORCSD %ZHBTRD %DTPTRI %CGESDD
                      %SLAQPS %CGEHRD %CHPSVX %SORGQL %SLAED6 %DGEMLQ
                      %SSYSV_RK %CLATRS %CHETF2_RK %CPTTRS %IPARMQ
                      %SLARFT %SLAG2D %CTPRFB %ZHBEV %CGERQ2 %SLASET
                      %ZHETRF_ROOK %ZPTCON %DGGHRD %CSTEIN %DGELQT3
                      %ZGEBAK %DPBTRS %CPBRFS %SGEESX %CHETRI2
                      %SLA_WWADDW %ZUNMR2 %CLASSQ %CLAMTSQR %SORMQR
                      %CLAHEF_RK %CLAQSP %SLABAD %DLAEIN %SPOEQU
                      %ZSYCON %ZGESVDX %DORGTSQR %DGGQRF %CPBSV
                      %SLA_GEAMV %ZHETRI2X %ZGBCON %SLASD1 %CHETD2
                      %CHESWAPR %DPBRFS %CUNM22 %CGETC2 %ZLASET
                      %DLA_GERPVGRW %ZGETC2 %ZGEMQRT %CUNBDB2 %SGELQ
                      %ZTRTRS %SSYTRF_RK %DLARUV %ZHBGST %SBDSVDX
                      %ZUNGR2 %ZSYSV_AA_2STAGE %DGETC2 %ZPPTRS %CPPSV
                      %ZSYTF2 %SSYTRF_ROOK %CSYTRS_3 %CLA_SYRPVGRW
                      %CSTEQR %ZHGEQZ %ZHPEVD %CHPTRS %DLASQ2 %SLAQP2
                      %DORHR_COL %DSYGV %SLARFGP %SLANGT %CGGHRD
                      %CUNML2 %CHESV_AA_2STAGE %SLAQR2 %SPOTRI %CGEQP3
                      %SGEEQU %DLAQR4 %SSYSV_AA_2STAGE %DGBBRD %SGBTF2)
                    '#:MAGICL.LAPACK-CFFI)

;;; End of file.
