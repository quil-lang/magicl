;;;; Generated on 10/20/2021 at 09:40:00 (UTC+10).

(COMMON-LISP:DECLAIM (COMMON-LISP:OPTIMIZE (COMMON-LISP:SPEED 0)
                      COMMON-LISP:SAFETY COMMON-LISP:DEBUG
                      COMMON-LISP:COMPILATION-SPEED))

(COMMON-LISP:IN-PACKAGE #:MAGICL.BLAS-CFFI)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DROT %DROT %%SCABS1 %SCABS1
                      %%ZGEMV %ZGEMV %%ZDOTC %ZDOTC %%CHER2K %CHER2K
                      %%ZTBMV %ZTBMV %%ZHER2 %ZHER2 %%DASUM %DASUM
                      %%DGEMV %DGEMV %%DTRSV %DTRSV %%SSPR %SSPR
                      %%DTBMV %DTBMV %%SCASUM %SCASUM %%DNRM2 %DNRM2
                      %%STRSM %STRSM %%CHEMM %CHEMM %%CHER %CHER %%SDOT
                      %SDOT %%DZNRM2 %DZNRM2 %%DGER %DGER %%CROTG
                      %CROTG %%ZSYRK %ZSYRK %%STRMM %STRMM %%CGERU
                      %CGERU %%ZHER2K %ZHER2K %%IZAMAX %IZAMAX %%SSYR2K
                      %SSYR2K %%DDOT %DDOT %%SCOPY %SCOPY %%STRSV
                      %STRSV %%SROTMG %SROTMG %%CHPR2 %CHPR2 %%SROT
                      %SROT %%DROTG %DROTG %%SSYMM %SSYMM %%DTRMM
                      %DTRMM %%ZTRSM %ZTRSM %%ZHPMV %ZHPMV %%SROTG
                      %SROTG %%DSDOT %DSDOT %%SSCAL %SSCAL %%ZHBMV
                      %ZHBMV %%DSCAL %DSCAL %%SGEMV %SGEMV %%ZDOTU
                      %ZDOTU %%CHPR %CHPR %%CDOTU %CDOTU %%DAXPY %DAXPY
                      %%SSYR %SSYR %%DSYMM %DSYMM %%DSPMV %DSPMV
                      %%CHEMV %CHEMV %%DSPR %DSPR %%DSYRK %DSYRK
                      %%ZCOPY %ZCOPY %%DCOPY %DCOPY %%ZHEMM %ZHEMM
                      %%SSYRK %SSYRK %%CAXPY %CAXPY %%STPMV %STPMV
                      %%SCNRM2 %SCNRM2 %%SAXPY %SAXPY %%DSYR %DSYR
                      %%CTRMV %CTRMV %%STBSV %STBSV %%CSSCAL %CSSCAL
                      %%ZSCAL %ZSCAL %%DSYR2K %DSYR2K %%CSYR2K %CSYR2K
                      %%ZDSCAL %ZDSCAL %%ZSYR2K %ZSYR2K %%ZTRSV %ZTRSV
                      %%DSYR2 %DSYR2 %%DSYMV %DSYMV %%DSWAP %DSWAP
                      %%SSPR2 %SSPR2 %%ZHPR %ZHPR %%DROTM %DROTM
                      %%SGBMV %SGBMV %%CGERC %CGERC %%DTRSM %DTRSM
                      %%ZTPMV %ZTPMV %%CTBMV %CTBMV %%ZGEMM %ZGEMM
                      %%SNRM2 %SNRM2 %%ZGERC %ZGERC %%CGEMM %CGEMM
                      %%ZTPSV %ZTPSV %%ZTRMM %ZTRMM %%IDAMAX %IDAMAX
                      %%CSYMM %CSYMM %%DROTMG %DROTMG %%SSYMV %SSYMV
                      %%CHPMV %CHPMV %%CCOPY %CCOPY %%ZTRMV %ZTRMV
                      %%SSBMV %SSBMV %%CGEMV %CGEMV %%ZHERK %ZHERK
                      %%DGEMM %DGEMM %%SDSDOT %SDSDOT %%ZAXPY %ZAXPY
                      %%SSWAP %SSWAP %%SROTM %SROTM %%ISAMAX %ISAMAX
                      %%ZTBSV %ZTBSV %%ZROTG %ZROTG %%DTBSV %DTBSV
                      %%CTPSV %CTPSV %%CGBMV %CGBMV %%STBMV %STBMV
                      %%DSBMV %DSBMV %%CTBSV %CTBSV %%SGEMM %SGEMM
                      %%DTPMV %DTPMV %%ZSWAP %ZSWAP %%CTRSV %CTRSV
                      %%ZGERU %ZGERU %%DGBMV %DGBMV %%DCABS1 %DCABS1
                      %%CHER2 %CHER2 %%CTPMV %CTPMV %%CSYRK %CSYRK
                      %%DTRMV %DTRMV %%CSCAL %CSCAL %%CSWAP %CSWAP
                      %%DSPR2 %DSPR2 %%ZHEMV %ZHEMV %%ZHER %ZHER
                      %%CDOTC %CDOTC %%XERBLA %XERBLA %%SASUM %SASUM
                      %%SSPMV %SSPMV %%DZASUM %DZASUM %%CTRMM %CTRMM
                      %%ZHPR2 %ZHPR2 %%CHERK %CHERK %%DTPSV %DTPSV
                      %%LSAME %LSAME %%STPSV %STPSV %%STRMV %STRMV
                      %%ZGBMV %ZGBMV %%SGER %SGER %%CSROT %CSROT
                      %%CTRSM %CTRSM %%SSYR2 %SSYR2 %%ZSYMM %ZSYMM
                      %%CHBMV %CHBMV %%ICAMAX %ICAMAX %%ZDROT %ZDROT
                      %%XERBLA_ARRAY %XERBLA_ARRAY))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DROT "drot_")
  ((N :FOREIGN-ADDRESS) (DX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (DY :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (S :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DROT (N DX INCX DY INCY C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DROT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT C)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT S))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF160 ':INT32) (INCX-REF162 ':INT32)
                              (INCY-REF164 ':INT32) (C-REF165 ':DOUBLE)
                              (S-REF166 ':DOUBLE))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF160 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF162 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF164 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF165 :DOUBLE) C)
    (COMMON-LISP:SETF (CFFI:MEM-REF S-REF166 :DOUBLE) S)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DX-REF161 DX)
                                            (DY-REF163 DY))
      (%%DROT N-REF160 DX-REF161 INCX-REF162 DY-REF163 INCY-REF164
       C-REF165 S-REF166))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SCABS1 "scabs1_")
  ((Z :FOREIGN-ADDRESS)) :RETURNING (:FLOAT COMMON-LISP:SINGLE-FLOAT)
  :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SCABS1 (Z)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SCABS1)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) Z))
  (CFFI:WITH-FOREIGN-OBJECTS ((Z-REF167
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT))
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              Z-REF167
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART Z)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART Z)))
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%SCABS1 Z-REF167))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZGEMV "zgemv_")
  ((TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZGEMV (TRANS M N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGEMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF169 ':INT32) (N-REF170 ':INT32)
                              (ALPHA-REF171
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF173 ':INT32)
                              (INCX-REF175 ':INT32)
                              (BETA-REF176
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCY-REF178 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF169 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF170 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF171
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF173 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF175 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF176
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF178 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF172 A)
                                            (X-REF174 X)
                                            (Y-REF177 Y))
      (%%ZGEMV TRANS M-REF169 N-REF170 ALPHA-REF171 A-REF172 LDA-REF173
       X-REF174 INCX-REF175 BETA-REF176 Y-REF177 INCY-REF178))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZDOTC "zdotc_")
  ((N :FOREIGN-ADDRESS) (ZX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (ZY :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS))
  :RETURNING
  (:FOREIGN-ADDRESS (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
  :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZDOTC (N ZX INCX ZY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZDOTC)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    ZX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    ZY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF179 ':INT32) (INCX-REF181 ':INT32)
                              (INCY-REF183 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF179 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF181 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF183 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((ZX-REF180 ZX)
                                            (ZY-REF182 ZY))
      (%%ZDOTC N-REF179 ZX-REF180 INCX-REF181 ZY-REF182 INCY-REF183))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CHER2K "cher2k_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (LDC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CHER2K
    (UPLO TRANS N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHER2K)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF186 ':INT32) (K-REF187 ':INT32)
                              (ALPHA-REF188
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF190 ':INT32) (LDB-REF192 ':INT32)
                              (BETA-REF193 ':FLOAT)
                              (LDC-REF195 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF186 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF187 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF188
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF190 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF192 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF193 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF195 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF189 A)
                                            (B-REF191 B)
                                            (C-REF194 C))
      (%%CHER2K UPLO TRANS N-REF186 K-REF187 ALPHA-REF188 A-REF189
       LDA-REF190 B-REF191 LDB-REF192 BETA-REF193 C-REF194
       LDC-REF195))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZTBMV "ztbmv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (K :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZTBMV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTBMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF199 ':INT32) (K-REF200 ':INT32)
                              (LDA-REF202 ':INT32)
                              (INCX-REF204 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF199 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF200 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF202 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF204 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF201 A) (X-REF203 X))
      (%%ZTBMV UPLO TRANS DIAG N-REF199 K-REF200 A-REF201 LDA-REF202
       X-REF203 INCX-REF204))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHER2 "zher2_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHER2 (UPLO N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHER2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF206 ':INT32)
                              (ALPHA-REF207
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCX-REF209 ':INT32)
                              (INCY-REF211 ':INT32)
                              (LDA-REF213 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF206 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF207
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF209 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF211 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF213 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF208 X)
                                            (Y-REF210 Y)
                                            (A-REF212 A))
      (%%ZHER2 UPLO N-REF206 ALPHA-REF207 X-REF208 INCX-REF209 Y-REF210
       INCY-REF211 A-REF212 LDA-REF213))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DASUM "dasum_")
  ((N :FOREIGN-ADDRESS) (DX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING (:DOUBLE COMMON-LISP:DOUBLE-FLOAT) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DASUM (N DX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DASUM)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF214 ':INT32) (INCX-REF216 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF214 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF216 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DX-REF215 DX))
      (%%DASUM N-REF214 DX-REF215 INCX-REF216))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DGEMV "dgemv_")
  ((TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DGEMV (TRANS M N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGEMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF218 ':INT32) (N-REF219 ':INT32)
                              (ALPHA-REF220 ':DOUBLE)
                              (LDA-REF222 ':INT32)
                              (INCX-REF224 ':INT32)
                              (BETA-REF225 ':DOUBLE)
                              (INCY-REF227 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF218 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF219 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF220 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF222 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF224 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF225 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF227 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF221 A)
                                            (X-REF223 X)
                                            (Y-REF226 Y))
      (%%DGEMV TRANS M-REF218 N-REF219 ALPHA-REF220 A-REF221 LDA-REF222
       X-REF223 INCX-REF224 BETA-REF225 Y-REF226 INCY-REF227))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DTRSV "dtrsv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DTRSV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTRSV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF231 ':INT32) (LDA-REF233 ':INT32)
                              (INCX-REF235 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF231 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF233 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF235 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF232 A) (X-REF234 X))
      (%%DTRSV UPLO TRANS DIAG N-REF231 A-REF232 LDA-REF233 X-REF234
       INCX-REF235))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SSPR "sspr_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (AP :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SSPR (UPLO N ALPHA X INCX AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSPR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF237 ':INT32) (ALPHA-REF238 ':FLOAT)
                              (INCX-REF240 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF237 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF238 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF240 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF239 X)
                                            (AP-REF241 AP))
      (%%SSPR UPLO N-REF237 ALPHA-REF238 X-REF239 INCX-REF240
       AP-REF241))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DTBMV "dtbmv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (K :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DTBMV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTBMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF245 ':INT32) (K-REF246 ':INT32)
                              (LDA-REF248 ':INT32)
                              (INCX-REF250 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF245 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF246 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF248 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF250 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF247 A) (X-REF249 X))
      (%%DTBMV UPLO TRANS DIAG N-REF245 K-REF246 A-REF247 LDA-REF248
       X-REF249 INCX-REF250))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SCASUM "scasum_")
  ((N :FOREIGN-ADDRESS) (CX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING (:FLOAT COMMON-LISP:SINGLE-FLOAT) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SCASUM (N CX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SCASUM)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    CX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF251 ':INT32) (INCX-REF253 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF251 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF253 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF252 CX))
      (%%SCASUM N-REF251 CX-REF252 INCX-REF253))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DNRM2 "dnrm2_")
  ((N :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING (:DOUBLE COMMON-LISP:DOUBLE-FLOAT) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DNRM2 (N X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DNRM2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF254 ':INT32) (INCX-REF256 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF254 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF256 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF255 X))
      (%%DNRM2 N-REF254 X-REF255 INCX-REF256))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%STRSM "strsm_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANSA (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %STRSM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STRSM)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF261 ':INT32) (N-REF262 ':INT32)
                              (ALPHA-REF263 ':FLOAT)
                              (LDA-REF265 ':INT32)
                              (LDB-REF267 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF261 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF262 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF263 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF265 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF267 :INT32) LDB)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF264 A) (B-REF266 B))
      (%%STRSM SIDE UPLO TRANSA DIAG M-REF261 N-REF262 ALPHA-REF263
       A-REF264 LDA-REF265 B-REF266 LDB-REF267))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CHEMM "chemm_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (BETA :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CHEMM (SIDE UPLO M N ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHEMM)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF270 ':INT32) (N-REF271 ':INT32)
                              (ALPHA-REF272
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF274 ':INT32) (LDB-REF276 ':INT32)
                              (BETA-REF277
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDC-REF279 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF270 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF271 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF272
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF274 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF276 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF277
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF279 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF273 A)
                                            (B-REF275 B)
                                            (C-REF278 C))
      (%%CHEMM SIDE UPLO M-REF270 N-REF271 ALPHA-REF272 A-REF273
       LDA-REF274 B-REF275 LDB-REF276 BETA-REF277 C-REF278
       LDC-REF279))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CHER "cher_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CHER (UPLO N ALPHA X INCX A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHER)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF281 ':INT32) (ALPHA-REF282 ':FLOAT)
                              (INCX-REF284 ':INT32)
                              (LDA-REF286 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF281 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF282 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF284 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF286 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF283 X) (A-REF285 A))
      (%%CHER UPLO N-REF281 ALPHA-REF282 X-REF283 INCX-REF284 A-REF285
       LDA-REF286))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SDOT "sdot_")
  ((N :FOREIGN-ADDRESS) (SX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (SY :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS))
  :RETURNING (:FLOAT COMMON-LISP:SINGLE-FLOAT) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SDOT (N SX INCX SY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SDOT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF287 ':INT32) (INCX-REF289 ':INT32)
                              (INCY-REF291 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF287 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF289 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF291 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF288 SX)
                                            (SY-REF290 SY))
      (%%SDOT N-REF287 SX-REF288 INCX-REF289 SY-REF290 INCY-REF291))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DZNRM2 "dznrm2_")
  ((N :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING (:DOUBLE COMMON-LISP:DOUBLE-FLOAT) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DZNRM2 (N X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DZNRM2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF292 ':INT32) (INCX-REF294 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF292 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF294 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF293 X))
      (%%DZNRM2 N-REF292 X-REF293 INCX-REF294))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DGER "dger_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DGER (M N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGER)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF295 ':INT32) (N-REF296 ':INT32)
                              (ALPHA-REF297 ':DOUBLE)
                              (INCX-REF299 ':INT32)
                              (INCY-REF301 ':INT32)
                              (LDA-REF303 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF295 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF296 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF297 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF299 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF301 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF303 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF298 X)
                                            (Y-REF300 Y)
                                            (A-REF302 A))
      (%%DGER M-REF295 N-REF296 ALPHA-REF297 X-REF298 INCX-REF299
       Y-REF300 INCY-REF301 A-REF302 LDA-REF303))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CROTG "crotg_")
  ((CA :FOREIGN-ADDRESS) (CB :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (S :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CROTG (CA CB C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CROTG)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) CA)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) CB)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT C)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) S))
  (CFFI:WITH-FOREIGN-OBJECTS ((CA-REF304
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (CB-REF305
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (C-REF306 ':FLOAT)
                              (S-REF307
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT))
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              CA-REF304
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART CA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART CA)))
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              CB-REF305
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART CB)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART CB)))
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF306 :FLOAT) C)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              S-REF307
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART S)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART S)))
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%CROTG CA-REF304 CB-REF305 C-REF306 S-REF307))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZSYRK "zsyrk_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZSYRK (UPLO TRANS N K ALPHA A LDA BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZSYRK)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF310 ':INT32) (K-REF311 ':INT32)
                              (ALPHA-REF312
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF314 ':INT32)
                              (BETA-REF315
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDC-REF317 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF310 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF311 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF312
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF314 :INT32) LDA)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF315
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF317 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF313 A) (C-REF316 C))
      (%%ZSYRK UPLO TRANS N-REF310 K-REF311 ALPHA-REF312 A-REF313
       LDA-REF314 BETA-REF315 C-REF316 LDC-REF317))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%STRMM "strmm_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANSA (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %STRMM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STRMM)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF322 ':INT32) (N-REF323 ':INT32)
                              (ALPHA-REF324 ':FLOAT)
                              (LDA-REF326 ':INT32)
                              (LDB-REF328 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF322 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF323 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF324 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF326 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF328 :INT32) LDB)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF325 A) (B-REF327 B))
      (%%STRMM SIDE UPLO TRANSA DIAG M-REF322 N-REF323 ALPHA-REF324
       A-REF325 LDA-REF326 B-REF327 LDB-REF328))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CGERU "cgeru_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CGERU (M N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGERU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF329 ':INT32) (N-REF330 ':INT32)
                              (ALPHA-REF331
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCX-REF333 ':INT32)
                              (INCY-REF335 ':INT32)
                              (LDA-REF337 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF329 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF330 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF331
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF333 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF335 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF337 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF332 X)
                                            (Y-REF334 Y)
                                            (A-REF336 A))
      (%%CGERU M-REF329 N-REF330 ALPHA-REF331 X-REF332 INCX-REF333
       Y-REF334 INCY-REF335 A-REF336 LDA-REF337))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHER2K "zher2k_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (LDC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHER2K
    (UPLO TRANS N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHER2K)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF340 ':INT32) (K-REF341 ':INT32)
                              (ALPHA-REF342
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF344 ':INT32) (LDB-REF346 ':INT32)
                              (BETA-REF347 ':DOUBLE)
                              (LDC-REF349 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF340 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF341 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF342
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF344 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF346 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF347 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF349 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF343 A)
                                            (B-REF345 B)
                                            (C-REF348 C))
      (%%ZHER2K UPLO TRANS N-REF340 K-REF341 ALPHA-REF342 A-REF343
       LDA-REF344 B-REF345 LDB-REF346 BETA-REF347 C-REF348
       LDC-REF349))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%IZAMAX "izamax_")
  ((N :FOREIGN-ADDRESS) (ZX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING :INT :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %IZAMAX (N ZX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%IZAMAX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    ZX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF350 ':INT32) (INCX-REF352 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF350 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF352 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((ZX-REF351 ZX))
      (%%IZAMAX N-REF350 ZX-REF351 INCX-REF352))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SSYR2K "ssyr2k_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (LDC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SSYR2K
    (UPLO TRANS N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYR2K)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF355 ':INT32) (K-REF356 ':INT32)
                              (ALPHA-REF357 ':FLOAT)
                              (LDA-REF359 ':INT32) (LDB-REF361 ':INT32)
                              (BETA-REF362 ':FLOAT)
                              (LDC-REF364 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF355 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF356 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF357 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF359 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF361 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF362 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF364 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF358 A)
                                            (B-REF360 B)
                                            (C-REF363 C))
      (%%SSYR2K UPLO TRANS N-REF355 K-REF356 ALPHA-REF357 A-REF358
       LDA-REF359 B-REF360 LDB-REF361 BETA-REF362 C-REF363
       LDC-REF364))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DDOT "ddot_")
  ((N :FOREIGN-ADDRESS) (DX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (DY :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS))
  :RETURNING (:DOUBLE COMMON-LISP:DOUBLE-FLOAT) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DDOT (N DX INCX DY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DDOT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF365 ':INT32) (INCX-REF367 ':INT32)
                              (INCY-REF369 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF365 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF367 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF369 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DX-REF366 DX)
                                            (DY-REF368 DY))
      (%%DDOT N-REF365 DX-REF366 INCX-REF367 DY-REF368 INCY-REF369))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SCOPY "scopy_")
  ((N :FOREIGN-ADDRESS) (SX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (SY :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SCOPY (N SX INCX SY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SCOPY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF370 ':INT32) (INCX-REF372 ':INT32)
                              (INCY-REF374 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF370 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF372 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF374 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF371 SX)
                                            (SY-REF373 SY))
      (%%SCOPY N-REF370 SX-REF371 INCX-REF372 SY-REF373 INCY-REF374))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%STRSV "strsv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %STRSV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STRSV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF378 ':INT32) (LDA-REF380 ':INT32)
                              (INCX-REF382 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF378 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF380 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF382 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF379 A) (X-REF381 X))
      (%%STRSV UPLO TRANS DIAG N-REF378 A-REF379 LDA-REF380 X-REF381
       INCX-REF382))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SROTMG "srotmg_")
  ((SD1 :FOREIGN-ADDRESS) (SD2 :FOREIGN-ADDRESS) (SX1 :FOREIGN-ADDRESS)
   (SY1 :FOREIGN-ADDRESS) (SPARAM :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SROTMG (SD1 SD2 SX1 SY1 SPARAM)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SROTMG)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SD1)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SD2)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SX1)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SY1)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SPARAM))
  (CFFI:WITH-FOREIGN-OBJECTS ((SD1-REF383 ':FLOAT) (SD2-REF384 ':FLOAT)
                              (SX1-REF385 ':FLOAT)
                              (SY1-REF386 ':FLOAT))
    (COMMON-LISP:SETF (CFFI:MEM-REF SD1-REF383 :FLOAT) SD1)
    (COMMON-LISP:SETF (CFFI:MEM-REF SD2-REF384 :FLOAT) SD2)
    (COMMON-LISP:SETF (CFFI:MEM-REF SX1-REF385 :FLOAT) SX1)
    (COMMON-LISP:SETF (CFFI:MEM-REF SY1-REF386 :FLOAT) SY1)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SPARAM-REF387 SPARAM))
      (%%SROTMG SD1-REF383 SD2-REF384 SX1-REF385 SY1-REF386
       SPARAM-REF387))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CHPR2 "chpr2_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS)
   (AP :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CHPR2 (UPLO N ALPHA X INCX Y INCY AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHPR2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF389 ':INT32)
                              (ALPHA-REF390
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCX-REF392 ':INT32)
                              (INCY-REF394 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF389 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF390
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF392 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF394 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF391 X)
                                            (Y-REF393 Y)
                                            (AP-REF395 AP))
      (%%CHPR2 UPLO N-REF389 ALPHA-REF390 X-REF391 INCX-REF392 Y-REF393
       INCY-REF394 AP-REF395))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SROT "srot_")
  ((N :FOREIGN-ADDRESS) (SX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (SY :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (S :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SROT (N SX INCX SY INCY C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SROT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT C)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT S))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF396 ':INT32) (INCX-REF398 ':INT32)
                              (INCY-REF400 ':INT32) (C-REF401 ':FLOAT)
                              (S-REF402 ':FLOAT))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF396 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF398 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF400 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF401 :FLOAT) C)
    (COMMON-LISP:SETF (CFFI:MEM-REF S-REF402 :FLOAT) S)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF397 SX)
                                            (SY-REF399 SY))
      (%%SROT N-REF396 SX-REF397 INCX-REF398 SY-REF399 INCY-REF400
       C-REF401 S-REF402))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DROTG "drotg_")
  ((DA :FOREIGN-ADDRESS) (DB :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (S :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DROTG (DA DB C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DROTG)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DA)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DB)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT C)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT S))
  (CFFI:WITH-FOREIGN-OBJECTS ((DA-REF403 ':DOUBLE) (DB-REF404 ':DOUBLE)
                              (C-REF405 ':DOUBLE) (S-REF406 ':DOUBLE))
    (COMMON-LISP:SETF (CFFI:MEM-REF DA-REF403 :DOUBLE) DA)
    (COMMON-LISP:SETF (CFFI:MEM-REF DB-REF404 :DOUBLE) DB)
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF405 :DOUBLE) C)
    (COMMON-LISP:SETF (CFFI:MEM-REF S-REF406 :DOUBLE) S)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%DROTG DA-REF403 DB-REF404 C-REF405 S-REF406))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SSYMM "ssymm_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (BETA :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SSYMM (SIDE UPLO M N ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYMM)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF409 ':INT32) (N-REF410 ':INT32)
                              (ALPHA-REF411 ':FLOAT)
                              (LDA-REF413 ':INT32) (LDB-REF415 ':INT32)
                              (BETA-REF416 ':FLOAT)
                              (LDC-REF418 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF409 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF410 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF411 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF413 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF415 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF416 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF418 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF412 A)
                                            (B-REF414 B)
                                            (C-REF417 C))
      (%%SSYMM SIDE UPLO M-REF409 N-REF410 ALPHA-REF411 A-REF412
       LDA-REF413 B-REF414 LDB-REF415 BETA-REF416 C-REF417
       LDC-REF418))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DTRMM "dtrmm_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANSA (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DTRMM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTRMM)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF423 ':INT32) (N-REF424 ':INT32)
                              (ALPHA-REF425 ':DOUBLE)
                              (LDA-REF427 ':INT32)
                              (LDB-REF429 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF423 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF424 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF425 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF427 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF429 :INT32) LDB)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF426 A) (B-REF428 B))
      (%%DTRMM SIDE UPLO TRANSA DIAG M-REF423 N-REF424 ALPHA-REF425
       A-REF426 LDA-REF427 B-REF428 LDB-REF429))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZTRSM "ztrsm_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANSA (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZTRSM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTRSM)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF434 ':INT32) (N-REF435 ':INT32)
                              (ALPHA-REF436
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF438 ':INT32)
                              (LDB-REF440 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF434 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF435 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF436
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF438 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF440 :INT32) LDB)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF437 A) (B-REF439 B))
      (%%ZTRSM SIDE UPLO TRANSA DIAG M-REF434 N-REF435 ALPHA-REF436
       A-REF437 LDA-REF438 B-REF439 LDB-REF440))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHPMV "zhpmv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (AP :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHPMV (UPLO N ALPHA AP X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHPMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF442 ':INT32)
                              (ALPHA-REF443
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCX-REF446 ':INT32)
                              (BETA-REF447
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCY-REF449 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF442 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF443
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF446 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF447
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF449 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF444 AP)
                                            (X-REF445 X)
                                            (Y-REF448 Y))
      (%%ZHPMV UPLO N-REF442 ALPHA-REF443 AP-REF444 X-REF445
       INCX-REF446 BETA-REF447 Y-REF448 INCY-REF449))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SROTG "srotg_")
  ((SA :FOREIGN-ADDRESS) (SB :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (S :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SROTG (SA SB C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SROTG)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SA)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SB)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT C)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT S))
  (CFFI:WITH-FOREIGN-OBJECTS ((SA-REF450 ':FLOAT) (SB-REF451 ':FLOAT)
                              (C-REF452 ':FLOAT) (S-REF453 ':FLOAT))
    (COMMON-LISP:SETF (CFFI:MEM-REF SA-REF450 :FLOAT) SA)
    (COMMON-LISP:SETF (CFFI:MEM-REF SB-REF451 :FLOAT) SB)
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF452 :FLOAT) C)
    (COMMON-LISP:SETF (CFFI:MEM-REF S-REF453 :FLOAT) S)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%SROTG SA-REF450 SB-REF451 C-REF452 S-REF453))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DSDOT "dsdot_")
  ((N :FOREIGN-ADDRESS) (SX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (SY :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS))
  :RETURNING (:DOUBLE COMMON-LISP:DOUBLE-FLOAT) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSDOT (N SX INCX SY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSDOT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF454 ':INT32) (INCX-REF456 ':INT32)
                              (INCY-REF458 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF454 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF456 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF458 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF455 SX)
                                            (SY-REF457 SY))
      (%%DSDOT N-REF454 SX-REF455 INCX-REF456 SY-REF457 INCY-REF458))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SSCAL "sscal_")
  ((N :FOREIGN-ADDRESS) (SA :FOREIGN-ADDRESS) (SX :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SSCAL (N SA SX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSCAL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF459 ':INT32) (SA-REF460 ':FLOAT)
                              (INCX-REF462 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF459 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF SA-REF460 :FLOAT) SA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF462 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF461 SX))
      (%%SSCAL N-REF459 SA-REF460 SX-REF461 INCX-REF462))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHBMV "zhbmv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (K :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (BETA :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHBMV (UPLO N K ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHBMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF464 ':INT32) (K-REF465 ':INT32)
                              (ALPHA-REF466
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF468 ':INT32)
                              (INCX-REF470 ':INT32)
                              (BETA-REF471
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCY-REF473 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF464 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF465 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF466
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF468 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF470 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF471
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF473 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF467 A)
                                            (X-REF469 X)
                                            (Y-REF472 Y))
      (%%ZHBMV UPLO N-REF464 K-REF465 ALPHA-REF466 A-REF467 LDA-REF468
       X-REF469 INCX-REF470 BETA-REF471 Y-REF472 INCY-REF473))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DSCAL "dscal_")
  ((N :FOREIGN-ADDRESS) (DA :FOREIGN-ADDRESS) (DX :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSCAL (N DA DX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSCAL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF474 ':INT32) (DA-REF475 ':DOUBLE)
                              (INCX-REF477 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF474 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF DA-REF475 :DOUBLE) DA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF477 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DX-REF476 DX))
      (%%DSCAL N-REF474 DA-REF475 DX-REF476 INCX-REF477))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SGEMV "sgemv_")
  ((TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SGEMV (TRANS M N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SGEMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF479 ':INT32) (N-REF480 ':INT32)
                              (ALPHA-REF481 ':FLOAT)
                              (LDA-REF483 ':INT32)
                              (INCX-REF485 ':INT32)
                              (BETA-REF486 ':FLOAT)
                              (INCY-REF488 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF479 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF480 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF481 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF483 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF485 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF486 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF488 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF482 A)
                                            (X-REF484 X)
                                            (Y-REF487 Y))
      (%%SGEMV TRANS M-REF479 N-REF480 ALPHA-REF481 A-REF482 LDA-REF483
       X-REF484 INCX-REF485 BETA-REF486 Y-REF487 INCY-REF488))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZDOTU "zdotu_")
  ((N :FOREIGN-ADDRESS) (ZX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (ZY :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS))
  :RETURNING
  (:FOREIGN-ADDRESS (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
  :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZDOTU (N ZX INCX ZY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZDOTU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    ZX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    ZY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF489 ':INT32) (INCX-REF491 ':INT32)
                              (INCY-REF493 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF489 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF491 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF493 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((ZX-REF490 ZX)
                                            (ZY-REF492 ZY))
      (%%ZDOTU N-REF489 ZX-REF490 INCX-REF491 ZY-REF492 INCY-REF493))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CHPR "chpr_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (AP :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CHPR (UPLO N ALPHA X INCX AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHPR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF495 ':INT32) (ALPHA-REF496 ':FLOAT)
                              (INCX-REF498 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF495 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF496 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF498 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF497 X)
                                            (AP-REF499 AP))
      (%%CHPR UPLO N-REF495 ALPHA-REF496 X-REF497 INCX-REF498
       AP-REF499))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CDOTU "cdotu_")
  ((N :FOREIGN-ADDRESS) (CX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (CY :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS))
  :RETURNING
  (:FOREIGN-ADDRESS (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
  :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CDOTU (N CX INCX CY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CDOTU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    CX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    CY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF500 ':INT32) (INCX-REF502 ':INT32)
                              (INCY-REF504 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF500 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF502 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF504 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF501 CX)
                                            (CY-REF503 CY))
      (%%CDOTU N-REF500 CX-REF501 INCX-REF502 CY-REF503 INCY-REF504))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DAXPY "daxpy_")
  ((N :FOREIGN-ADDRESS) (DA :FOREIGN-ADDRESS) (DX :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (DY :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DAXPY (N DA DX INCX DY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DAXPY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF505 ':INT32) (DA-REF506 ':DOUBLE)
                              (INCX-REF508 ':INT32)
                              (INCY-REF510 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF505 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF DA-REF506 :DOUBLE) DA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF508 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF510 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DX-REF507 DX)
                                            (DY-REF509 DY))
      (%%DAXPY N-REF505 DA-REF506 DX-REF507 INCX-REF508 DY-REF509
       INCY-REF510))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SSYR "ssyr_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SSYR (UPLO N ALPHA X INCX A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF512 ':INT32) (ALPHA-REF513 ':FLOAT)
                              (INCX-REF515 ':INT32)
                              (LDA-REF517 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF512 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF513 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF515 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF517 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF514 X) (A-REF516 A))
      (%%SSYR UPLO N-REF512 ALPHA-REF513 X-REF514 INCX-REF515 A-REF516
       LDA-REF517))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DSYMM "dsymm_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (BETA :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSYMM (SIDE UPLO M N ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSYMM)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF520 ':INT32) (N-REF521 ':INT32)
                              (ALPHA-REF522 ':DOUBLE)
                              (LDA-REF524 ':INT32) (LDB-REF526 ':INT32)
                              (BETA-REF527 ':DOUBLE)
                              (LDC-REF529 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF520 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF521 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF522 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF524 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF526 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF527 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF529 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF523 A)
                                            (B-REF525 B)
                                            (C-REF528 C))
      (%%DSYMM SIDE UPLO M-REF520 N-REF521 ALPHA-REF522 A-REF523
       LDA-REF524 B-REF525 LDB-REF526 BETA-REF527 C-REF528
       LDC-REF529))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DSPMV "dspmv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (AP :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSPMV (UPLO N ALPHA AP X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSPMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF531 ':INT32)
                              (ALPHA-REF532 ':DOUBLE)
                              (INCX-REF535 ':INT32)
                              (BETA-REF536 ':DOUBLE)
                              (INCY-REF538 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF531 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF532 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF535 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF536 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF538 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF533 AP)
                                            (X-REF534 X)
                                            (Y-REF537 Y))
      (%%DSPMV UPLO N-REF531 ALPHA-REF532 AP-REF533 X-REF534
       INCX-REF535 BETA-REF536 Y-REF537 INCY-REF538))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CHEMV "chemv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS)
   (Y :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CHEMV (UPLO N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHEMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF540 ':INT32)
                              (ALPHA-REF541
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF543 ':INT32)
                              (INCX-REF545 ':INT32)
                              (BETA-REF546
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCY-REF548 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF540 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF541
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF543 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF545 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF546
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF548 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF542 A)
                                            (X-REF544 X)
                                            (Y-REF547 Y))
      (%%CHEMV UPLO N-REF540 ALPHA-REF541 A-REF542 LDA-REF543 X-REF544
       INCX-REF545 BETA-REF546 Y-REF547 INCY-REF548))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DSPR "dspr_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (AP :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSPR (UPLO N ALPHA X INCX AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSPR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF550 ':INT32)
                              (ALPHA-REF551 ':DOUBLE)
                              (INCX-REF553 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF550 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF551 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF553 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF552 X)
                                            (AP-REF554 AP))
      (%%DSPR UPLO N-REF550 ALPHA-REF551 X-REF552 INCX-REF553
       AP-REF554))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DSYRK "dsyrk_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSYRK (UPLO TRANS N K ALPHA A LDA BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSYRK)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF557 ':INT32) (K-REF558 ':INT32)
                              (ALPHA-REF559 ':DOUBLE)
                              (LDA-REF561 ':INT32)
                              (BETA-REF562 ':DOUBLE)
                              (LDC-REF564 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF557 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF558 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF559 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF561 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF562 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF564 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF560 A) (C-REF563 C))
      (%%DSYRK UPLO TRANS N-REF557 K-REF558 ALPHA-REF559 A-REF560
       LDA-REF561 BETA-REF562 C-REF563 LDC-REF564))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZCOPY "zcopy_")
  ((N :FOREIGN-ADDRESS) (ZX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (ZY :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZCOPY (N ZX INCX ZY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZCOPY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    ZX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    ZY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF565 ':INT32) (INCX-REF567 ':INT32)
                              (INCY-REF569 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF565 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF567 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF569 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((ZX-REF566 ZX)
                                            (ZY-REF568 ZY))
      (%%ZCOPY N-REF565 ZX-REF566 INCX-REF567 ZY-REF568 INCY-REF569))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DCOPY "dcopy_")
  ((N :FOREIGN-ADDRESS) (DX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (DY :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DCOPY (N DX INCX DY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DCOPY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF570 ':INT32) (INCX-REF572 ':INT32)
                              (INCY-REF574 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF570 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF572 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF574 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DX-REF571 DX)
                                            (DY-REF573 DY))
      (%%DCOPY N-REF570 DX-REF571 INCX-REF572 DY-REF573 INCY-REF574))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHEMM "zhemm_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (BETA :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHEMM (SIDE UPLO M N ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHEMM)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF577 ':INT32) (N-REF578 ':INT32)
                              (ALPHA-REF579
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF581 ':INT32) (LDB-REF583 ':INT32)
                              (BETA-REF584
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDC-REF586 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF577 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF578 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF579
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF581 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF583 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF584
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF586 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF580 A)
                                            (B-REF582 B)
                                            (C-REF585 C))
      (%%ZHEMM SIDE UPLO M-REF577 N-REF578 ALPHA-REF579 A-REF580
       LDA-REF581 B-REF582 LDB-REF583 BETA-REF584 C-REF585
       LDC-REF586))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SSYRK "ssyrk_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SSYRK (UPLO TRANS N K ALPHA A LDA BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYRK)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF589 ':INT32) (K-REF590 ':INT32)
                              (ALPHA-REF591 ':FLOAT)
                              (LDA-REF593 ':INT32)
                              (BETA-REF594 ':FLOAT)
                              (LDC-REF596 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF589 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF590 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF591 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF593 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF594 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF596 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF592 A) (C-REF595 C))
      (%%SSYRK UPLO TRANS N-REF589 K-REF590 ALPHA-REF591 A-REF592
       LDA-REF593 BETA-REF594 C-REF595 LDC-REF596))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CAXPY "caxpy_")
  ((N :FOREIGN-ADDRESS) (CA :FOREIGN-ADDRESS) (CX :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (CY :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CAXPY (N CA CX INCX CY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CAXPY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) CA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    CX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    CY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF597 ':INT32)
                              (CA-REF598
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCX-REF600 ':INT32)
                              (INCY-REF602 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF597 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              CA-REF598
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART CA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART CA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF600 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF602 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF599 CX)
                                            (CY-REF601 CY))
      (%%CAXPY N-REF597 CA-REF598 CX-REF599 INCX-REF600 CY-REF601
       INCY-REF602))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%STPMV "stpmv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (AP :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %STPMV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STPMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF606 ':INT32) (INCX-REF609 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF606 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF609 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF607 AP)
                                            (X-REF608 X))
      (%%STPMV UPLO TRANS DIAG N-REF606 AP-REF607 X-REF608
       INCX-REF609))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SCNRM2 "scnrm2_")
  ((N :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING (:FLOAT COMMON-LISP:SINGLE-FLOAT) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SCNRM2 (N X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SCNRM2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF610 ':INT32) (INCX-REF612 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF610 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF612 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF611 X))
      (%%SCNRM2 N-REF610 X-REF611 INCX-REF612))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SAXPY "saxpy_")
  ((N :FOREIGN-ADDRESS) (SA :FOREIGN-ADDRESS) (SX :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (SY :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SAXPY (N SA SX INCX SY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SAXPY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF613 ':INT32) (SA-REF614 ':FLOAT)
                              (INCX-REF616 ':INT32)
                              (INCY-REF618 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF613 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF SA-REF614 :FLOAT) SA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF616 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF618 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF615 SX)
                                            (SY-REF617 SY))
      (%%SAXPY N-REF613 SA-REF614 SX-REF615 INCX-REF616 SY-REF617
       INCY-REF618))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DSYR "dsyr_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSYR (UPLO N ALPHA X INCX A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSYR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF620 ':INT32)
                              (ALPHA-REF621 ':DOUBLE)
                              (INCX-REF623 ':INT32)
                              (LDA-REF625 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF620 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF621 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF623 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF625 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF622 X) (A-REF624 A))
      (%%DSYR UPLO N-REF620 ALPHA-REF621 X-REF622 INCX-REF623 A-REF624
       LDA-REF625))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CTRMV "ctrmv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CTRMV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTRMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF629 ':INT32) (LDA-REF631 ':INT32)
                              (INCX-REF633 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF629 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF631 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF633 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF630 A) (X-REF632 X))
      (%%CTRMV UPLO TRANS DIAG N-REF629 A-REF630 LDA-REF631 X-REF632
       INCX-REF633))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%STBSV "stbsv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (K :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %STBSV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STBSV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF637 ':INT32) (K-REF638 ':INT32)
                              (LDA-REF640 ':INT32)
                              (INCX-REF642 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF637 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF638 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF640 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF642 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF639 A) (X-REF641 X))
      (%%STBSV UPLO TRANS DIAG N-REF637 K-REF638 A-REF639 LDA-REF640
       X-REF641 INCX-REF642))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CSSCAL "csscal_")
  ((N :FOREIGN-ADDRESS) (SA :FOREIGN-ADDRESS) (CX :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CSSCAL (N SA CX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSSCAL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    CX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF643 ':INT32) (SA-REF644 ':FLOAT)
                              (INCX-REF646 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF643 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF SA-REF644 :FLOAT) SA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF646 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF645 CX))
      (%%CSSCAL N-REF643 SA-REF644 CX-REF645 INCX-REF646))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZSCAL "zscal_")
  ((N :FOREIGN-ADDRESS) (ZA :FOREIGN-ADDRESS) (ZX :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZSCAL (N ZA ZX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZSCAL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ZA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    ZX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF647 ':INT32)
                              (ZA-REF648
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCX-REF650 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF647 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ZA-REF648
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ZA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ZA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF650 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((ZX-REF649 ZX))
      (%%ZSCAL N-REF647 ZA-REF648 ZX-REF649 INCX-REF650))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DSYR2K "dsyr2k_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (LDC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSYR2K
    (UPLO TRANS N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSYR2K)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF653 ':INT32) (K-REF654 ':INT32)
                              (ALPHA-REF655 ':DOUBLE)
                              (LDA-REF657 ':INT32) (LDB-REF659 ':INT32)
                              (BETA-REF660 ':DOUBLE)
                              (LDC-REF662 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF653 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF654 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF655 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF657 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF659 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF660 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF662 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF656 A)
                                            (B-REF658 B)
                                            (C-REF661 C))
      (%%DSYR2K UPLO TRANS N-REF653 K-REF654 ALPHA-REF655 A-REF656
       LDA-REF657 B-REF658 LDB-REF659 BETA-REF660 C-REF661
       LDC-REF662))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CSYR2K "csyr2k_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (LDC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CSYR2K
    (UPLO TRANS N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSYR2K)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF665 ':INT32) (K-REF666 ':INT32)
                              (ALPHA-REF667
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF669 ':INT32) (LDB-REF671 ':INT32)
                              (BETA-REF672
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDC-REF674 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF665 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF666 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF667
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF669 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF671 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF672
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF674 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF668 A)
                                            (B-REF670 B)
                                            (C-REF673 C))
      (%%CSYR2K UPLO TRANS N-REF665 K-REF666 ALPHA-REF667 A-REF668
       LDA-REF669 B-REF670 LDB-REF671 BETA-REF672 C-REF673
       LDC-REF674))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZDSCAL "zdscal_")
  ((N :FOREIGN-ADDRESS) (DA :FOREIGN-ADDRESS) (ZX :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZDSCAL (N DA ZX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZDSCAL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    ZX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF675 ':INT32) (DA-REF676 ':DOUBLE)
                              (INCX-REF678 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF675 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF DA-REF676 :DOUBLE) DA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF678 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((ZX-REF677 ZX))
      (%%ZDSCAL N-REF675 DA-REF676 ZX-REF677 INCX-REF678))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZSYR2K "zsyr2k_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS)
   (LDB :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (LDC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZSYR2K
    (UPLO TRANS N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZSYR2K)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF681 ':INT32) (K-REF682 ':INT32)
                              (ALPHA-REF683
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF685 ':INT32) (LDB-REF687 ':INT32)
                              (BETA-REF688
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDC-REF690 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF681 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF682 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF683
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF685 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF687 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF688
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF690 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF684 A)
                                            (B-REF686 B)
                                            (C-REF689 C))
      (%%ZSYR2K UPLO TRANS N-REF681 K-REF682 ALPHA-REF683 A-REF684
       LDA-REF685 B-REF686 LDB-REF687 BETA-REF688 C-REF689
       LDC-REF690))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZTRSV "ztrsv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZTRSV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTRSV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF694 ':INT32) (LDA-REF696 ':INT32)
                              (INCX-REF698 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF694 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF696 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF698 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF695 A) (X-REF697 X))
      (%%ZTRSV UPLO TRANS DIAG N-REF694 A-REF695 LDA-REF696 X-REF697
       INCX-REF698))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DSYR2 "dsyr2_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSYR2 (UPLO N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSYR2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF700 ':INT32)
                              (ALPHA-REF701 ':DOUBLE)
                              (INCX-REF703 ':INT32)
                              (INCY-REF705 ':INT32)
                              (LDA-REF707 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF700 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF701 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF703 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF705 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF707 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF702 X)
                                            (Y-REF704 Y)
                                            (A-REF706 A))
      (%%DSYR2 UPLO N-REF700 ALPHA-REF701 X-REF702 INCX-REF703 Y-REF704
       INCY-REF705 A-REF706 LDA-REF707))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DSYMV "dsymv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS)
   (Y :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSYMV (UPLO N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSYMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF709 ':INT32)
                              (ALPHA-REF710 ':DOUBLE)
                              (LDA-REF712 ':INT32)
                              (INCX-REF714 ':INT32)
                              (BETA-REF715 ':DOUBLE)
                              (INCY-REF717 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF709 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF710 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF712 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF714 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF715 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF717 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF711 A)
                                            (X-REF713 X)
                                            (Y-REF716 Y))
      (%%DSYMV UPLO N-REF709 ALPHA-REF710 A-REF711 LDA-REF712 X-REF713
       INCX-REF714 BETA-REF715 Y-REF716 INCY-REF717))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DSWAP "dswap_")
  ((N :FOREIGN-ADDRESS) (DX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (DY :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSWAP (N DX INCX DY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSWAP)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF718 ':INT32) (INCX-REF720 ':INT32)
                              (INCY-REF722 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF718 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF720 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF722 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DX-REF719 DX)
                                            (DY-REF721 DY))
      (%%DSWAP N-REF718 DX-REF719 INCX-REF720 DY-REF721 INCY-REF722))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SSPR2 "sspr2_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS)
   (AP :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SSPR2 (UPLO N ALPHA X INCX Y INCY AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSPR2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF724 ':INT32) (ALPHA-REF725 ':FLOAT)
                              (INCX-REF727 ':INT32)
                              (INCY-REF729 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF724 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF725 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF727 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF729 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF726 X)
                                            (Y-REF728 Y)
                                            (AP-REF730 AP))
      (%%SSPR2 UPLO N-REF724 ALPHA-REF725 X-REF726 INCX-REF727 Y-REF728
       INCY-REF729 AP-REF730))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHPR "zhpr_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (AP :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHPR (UPLO N ALPHA X INCX AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHPR)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF732 ':INT32)
                              (ALPHA-REF733 ':DOUBLE)
                              (INCX-REF735 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF732 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF733 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF735 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF734 X)
                                            (AP-REF736 AP))
      (%%ZHPR UPLO N-REF732 ALPHA-REF733 X-REF734 INCX-REF735
       AP-REF736))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DROTM "drotm_")
  ((N :FOREIGN-ADDRESS) (DX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (DY :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS)
   (DPARAM :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DROTM (N DX INCX DY INCY DPARAM)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DROTM)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DPARAM))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF737 ':INT32) (INCX-REF739 ':INT32)
                              (INCY-REF741 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF737 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF739 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF741 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DX-REF738 DX)
                                            (DY-REF740 DY)
                                            (DPARAM-REF742 DPARAM))
      (%%DROTM N-REF737 DX-REF738 INCX-REF739 DY-REF740 INCY-REF741
       DPARAM-REF742))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SGBMV "sgbmv_")
  ((TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (KL :FOREIGN-ADDRESS)
   (KU :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (BETA :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SGBMV
    (TRANS M N KL KU ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SGBMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KU)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF744 ':INT32) (N-REF745 ':INT32)
                              (KL-REF746 ':INT32) (KU-REF747 ':INT32)
                              (ALPHA-REF748 ':FLOAT)
                              (LDA-REF750 ':INT32)
                              (INCX-REF752 ':INT32)
                              (BETA-REF753 ':FLOAT)
                              (INCY-REF755 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF744 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF745 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KL-REF746 :INT32) KL)
    (COMMON-LISP:SETF (CFFI:MEM-REF KU-REF747 :INT32) KU)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF748 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF750 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF752 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF753 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF755 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF749 A)
                                            (X-REF751 X)
                                            (Y-REF754 Y))
      (%%SGBMV TRANS M-REF744 N-REF745 KL-REF746 KU-REF747 ALPHA-REF748
       A-REF749 LDA-REF750 X-REF751 INCX-REF752 BETA-REF753 Y-REF754
       INCY-REF755))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CGERC "cgerc_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CGERC (M N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGERC)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF756 ':INT32) (N-REF757 ':INT32)
                              (ALPHA-REF758
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCX-REF760 ':INT32)
                              (INCY-REF762 ':INT32)
                              (LDA-REF764 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF756 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF757 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF758
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF760 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF762 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF764 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF759 X)
                                            (Y-REF761 Y)
                                            (A-REF763 A))
      (%%CGERC M-REF756 N-REF757 ALPHA-REF758 X-REF759 INCX-REF760
       Y-REF761 INCY-REF762 A-REF763 LDA-REF764))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DTRSM "dtrsm_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANSA (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DTRSM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTRSM)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF769 ':INT32) (N-REF770 ':INT32)
                              (ALPHA-REF771 ':DOUBLE)
                              (LDA-REF773 ':INT32)
                              (LDB-REF775 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF769 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF770 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF771 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF773 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF775 :INT32) LDB)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF772 A) (B-REF774 B))
      (%%DTRSM SIDE UPLO TRANSA DIAG M-REF769 N-REF770 ALPHA-REF771
       A-REF772 LDA-REF773 B-REF774 LDB-REF775))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZTPMV "ztpmv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (AP :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZTPMV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTPMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF779 ':INT32) (INCX-REF782 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF779 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF782 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF780 AP)
                                            (X-REF781 X))
      (%%ZTPMV UPLO TRANS DIAG N-REF779 AP-REF780 X-REF781
       INCX-REF782))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CTBMV "ctbmv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (K :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CTBMV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTBMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF786 ':INT32) (K-REF787 ':INT32)
                              (LDA-REF789 ':INT32)
                              (INCX-REF791 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF786 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF787 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF789 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF791 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF788 A) (X-REF790 X))
      (%%CTBMV UPLO TRANS DIAG N-REF786 K-REF787 A-REF788 LDA-REF789
       X-REF790 INCX-REF791))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZGEMM "zgemm_")
  ((TRANSA (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANSB (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZGEMM
    (TRANSA TRANSB M N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGEMM)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF794 ':INT32) (N-REF795 ':INT32)
                              (K-REF796 ':INT32)
                              (ALPHA-REF797
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF799 ':INT32) (LDB-REF801 ':INT32)
                              (BETA-REF802
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDC-REF804 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF794 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF795 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF796 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF797
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF799 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF801 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF802
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF804 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF798 A)
                                            (B-REF800 B)
                                            (C-REF803 C))
      (%%ZGEMM TRANSA TRANSB M-REF794 N-REF795 K-REF796 ALPHA-REF797
       A-REF798 LDA-REF799 B-REF800 LDB-REF801 BETA-REF802 C-REF803
       LDC-REF804))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SNRM2 "snrm2_")
  ((N :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING (:FLOAT COMMON-LISP:SINGLE-FLOAT) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SNRM2 (N X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SNRM2)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF805 ':INT32) (INCX-REF807 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF805 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF807 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF806 X))
      (%%SNRM2 N-REF805 X-REF806 INCX-REF807))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZGERC "zgerc_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZGERC (M N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGERC)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF808 ':INT32) (N-REF809 ':INT32)
                              (ALPHA-REF810
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCX-REF812 ':INT32)
                              (INCY-REF814 ':INT32)
                              (LDA-REF816 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF808 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF809 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF810
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF812 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF814 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF816 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF811 X)
                                            (Y-REF813 Y)
                                            (A-REF815 A))
      (%%ZGERC M-REF808 N-REF809 ALPHA-REF810 X-REF811 INCX-REF812
       Y-REF813 INCY-REF814 A-REF815 LDA-REF816))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CGEMM "cgemm_")
  ((TRANSA (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANSB (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CGEMM
    (TRANSA TRANSB M N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGEMM)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF819 ':INT32) (N-REF820 ':INT32)
                              (K-REF821 ':INT32)
                              (ALPHA-REF822
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF824 ':INT32) (LDB-REF826 ':INT32)
                              (BETA-REF827
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDC-REF829 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF819 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF820 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF821 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF822
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF824 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF826 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF827
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF829 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF823 A)
                                            (B-REF825 B)
                                            (C-REF828 C))
      (%%CGEMM TRANSA TRANSB M-REF819 N-REF820 K-REF821 ALPHA-REF822
       A-REF823 LDA-REF824 B-REF825 LDB-REF826 BETA-REF827 C-REF828
       LDC-REF829))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZTPSV "ztpsv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (AP :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZTPSV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTPSV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF833 ':INT32) (INCX-REF836 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF833 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF836 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF834 AP)
                                            (X-REF835 X))
      (%%ZTPSV UPLO TRANS DIAG N-REF833 AP-REF834 X-REF835
       INCX-REF836))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZTRMM "ztrmm_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANSA (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZTRMM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTRMM)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF841 ':INT32) (N-REF842 ':INT32)
                              (ALPHA-REF843
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF845 ':INT32)
                              (LDB-REF847 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF841 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF842 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF843
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF845 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF847 :INT32) LDB)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF844 A) (B-REF846 B))
      (%%ZTRMM SIDE UPLO TRANSA DIAG M-REF841 N-REF842 ALPHA-REF843
       A-REF844 LDA-REF845 B-REF846 LDB-REF847))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%IDAMAX "idamax_")
  ((N :FOREIGN-ADDRESS) (DX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING :INT :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %IDAMAX (N DX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%IDAMAX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF848 ':INT32) (INCX-REF850 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF848 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF850 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DX-REF849 DX))
      (%%IDAMAX N-REF848 DX-REF849 INCX-REF850))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CSYMM "csymm_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (BETA :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CSYMM (SIDE UPLO M N ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSYMM)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF853 ':INT32) (N-REF854 ':INT32)
                              (ALPHA-REF855
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF857 ':INT32) (LDB-REF859 ':INT32)
                              (BETA-REF860
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDC-REF862 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF853 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF854 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF855
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF857 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF859 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF860
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF862 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF856 A)
                                            (B-REF858 B)
                                            (C-REF861 C))
      (%%CSYMM SIDE UPLO M-REF853 N-REF854 ALPHA-REF855 A-REF856
       LDA-REF857 B-REF858 LDB-REF859 BETA-REF860 C-REF861
       LDC-REF862))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DROTMG "drotmg_")
  ((DD1 :FOREIGN-ADDRESS) (DD2 :FOREIGN-ADDRESS) (DX1 :FOREIGN-ADDRESS)
   (DY1 :FOREIGN-ADDRESS) (DPARAM :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DROTMG (DD1 DD2 DX1 DY1 DPARAM)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DROTMG)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DD1)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DD2)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DX1)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DY1)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DPARAM))
  (CFFI:WITH-FOREIGN-OBJECTS ((DD1-REF863 ':DOUBLE)
                              (DD2-REF864 ':DOUBLE)
                              (DX1-REF865 ':DOUBLE)
                              (DY1-REF866 ':DOUBLE))
    (COMMON-LISP:SETF (CFFI:MEM-REF DD1-REF863 :DOUBLE) DD1)
    (COMMON-LISP:SETF (CFFI:MEM-REF DD2-REF864 :DOUBLE) DD2)
    (COMMON-LISP:SETF (CFFI:MEM-REF DX1-REF865 :DOUBLE) DX1)
    (COMMON-LISP:SETF (CFFI:MEM-REF DY1-REF866 :DOUBLE) DY1)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DPARAM-REF867 DPARAM))
      (%%DROTMG DD1-REF863 DD2-REF864 DX1-REF865 DY1-REF866
       DPARAM-REF867))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SSYMV "ssymv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS)
   (Y :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SSYMV (UPLO N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF869 ':INT32) (ALPHA-REF870 ':FLOAT)
                              (LDA-REF872 ':INT32)
                              (INCX-REF874 ':INT32)
                              (BETA-REF875 ':FLOAT)
                              (INCY-REF877 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF869 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF870 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF872 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF874 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF875 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF877 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF871 A)
                                            (X-REF873 X)
                                            (Y-REF876 Y))
      (%%SSYMV UPLO N-REF869 ALPHA-REF870 A-REF871 LDA-REF872 X-REF873
       INCX-REF874 BETA-REF875 Y-REF876 INCY-REF877))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CHPMV "chpmv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (AP :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CHPMV (UPLO N ALPHA AP X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHPMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF879 ':INT32)
                              (ALPHA-REF880
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCX-REF883 ':INT32)
                              (BETA-REF884
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCY-REF886 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF879 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF880
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF883 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF884
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF886 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF881 AP)
                                            (X-REF882 X)
                                            (Y-REF885 Y))
      (%%CHPMV UPLO N-REF879 ALPHA-REF880 AP-REF881 X-REF882
       INCX-REF883 BETA-REF884 Y-REF885 INCY-REF886))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CCOPY "ccopy_")
  ((N :FOREIGN-ADDRESS) (CX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (CY :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CCOPY (N CX INCX CY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CCOPY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    CX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    CY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF887 ':INT32) (INCX-REF889 ':INT32)
                              (INCY-REF891 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF887 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF889 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF891 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF888 CX)
                                            (CY-REF890 CY))
      (%%CCOPY N-REF887 CX-REF888 INCX-REF889 CY-REF890 INCY-REF891))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZTRMV "ztrmv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZTRMV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTRMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF895 ':INT32) (LDA-REF897 ':INT32)
                              (INCX-REF899 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF895 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF897 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF899 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF896 A) (X-REF898 X))
      (%%ZTRMV UPLO TRANS DIAG N-REF895 A-REF896 LDA-REF897 X-REF898
       INCX-REF899))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SSBMV "ssbmv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (K :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (BETA :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SSBMV (UPLO N K ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSBMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF901 ':INT32) (K-REF902 ':INT32)
                              (ALPHA-REF903 ':FLOAT)
                              (LDA-REF905 ':INT32)
                              (INCX-REF907 ':INT32)
                              (BETA-REF908 ':FLOAT)
                              (INCY-REF910 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF901 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF902 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF903 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF905 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF907 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF908 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF910 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF904 A)
                                            (X-REF906 X)
                                            (Y-REF909 Y))
      (%%SSBMV UPLO N-REF901 K-REF902 ALPHA-REF903 A-REF904 LDA-REF905
       X-REF906 INCX-REF907 BETA-REF908 Y-REF909 INCY-REF910))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CGEMV "cgemv_")
  ((TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CGEMV (TRANS M N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGEMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF912 ':INT32) (N-REF913 ':INT32)
                              (ALPHA-REF914
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF916 ':INT32)
                              (INCX-REF918 ':INT32)
                              (BETA-REF919
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCY-REF921 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF912 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF913 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF914
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF916 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF918 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF919
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF921 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF915 A)
                                            (X-REF917 X)
                                            (Y-REF920 Y))
      (%%CGEMV TRANS M-REF912 N-REF913 ALPHA-REF914 A-REF915 LDA-REF916
       X-REF917 INCX-REF918 BETA-REF919 Y-REF920 INCY-REF921))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHERK "zherk_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHERK (UPLO TRANS N K ALPHA A LDA BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHERK)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF924 ':INT32) (K-REF925 ':INT32)
                              (ALPHA-REF926 ':DOUBLE)
                              (LDA-REF928 ':INT32)
                              (BETA-REF929 ':DOUBLE)
                              (LDC-REF931 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF924 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF925 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF926 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF928 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF929 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF931 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF927 A) (C-REF930 C))
      (%%ZHERK UPLO TRANS N-REF924 K-REF925 ALPHA-REF926 A-REF927
       LDA-REF928 BETA-REF929 C-REF930 LDC-REF931))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DGEMM "dgemm_")
  ((TRANSA (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANSB (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DGEMM
    (TRANSA TRANSB M N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGEMM)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF934 ':INT32) (N-REF935 ':INT32)
                              (K-REF936 ':INT32)
                              (ALPHA-REF937 ':DOUBLE)
                              (LDA-REF939 ':INT32) (LDB-REF941 ':INT32)
                              (BETA-REF942 ':DOUBLE)
                              (LDC-REF944 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF934 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF935 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF936 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF937 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF939 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF941 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF942 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF944 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF938 A)
                                            (B-REF940 B)
                                            (C-REF943 C))
      (%%DGEMM TRANSA TRANSB M-REF934 N-REF935 K-REF936 ALPHA-REF937
       A-REF938 LDA-REF939 B-REF940 LDB-REF941 BETA-REF942 C-REF943
       LDC-REF944))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SDSDOT "sdsdot_")
  ((N :FOREIGN-ADDRESS) (SB :FOREIGN-ADDRESS) (SX :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (SY :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS))
  :RETURNING (:FLOAT COMMON-LISP:SINGLE-FLOAT) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SDSDOT (N SB SX INCX SY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SDSDOT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SB)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF945 ':INT32) (SB-REF946 ':FLOAT)
                              (INCX-REF948 ':INT32)
                              (INCY-REF950 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF945 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF SB-REF946 :FLOAT) SB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF948 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF950 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF947 SX)
                                            (SY-REF949 SY))
      (%%SDSDOT N-REF945 SB-REF946 SX-REF947 INCX-REF948 SY-REF949
       INCY-REF950))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZAXPY "zaxpy_")
  ((N :FOREIGN-ADDRESS) (ZA :FOREIGN-ADDRESS) (ZX :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (ZY :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZAXPY (N ZA ZX INCX ZY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZAXPY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ZA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    ZX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    ZY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF951 ':INT32)
                              (ZA-REF952
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCX-REF954 ':INT32)
                              (INCY-REF956 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF951 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ZA-REF952
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ZA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ZA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF954 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF956 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((ZX-REF953 ZX)
                                            (ZY-REF955 ZY))
      (%%ZAXPY N-REF951 ZA-REF952 ZX-REF953 INCX-REF954 ZY-REF955
       INCY-REF956))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SSWAP "sswap_")
  ((N :FOREIGN-ADDRESS) (SX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (SY :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SSWAP (N SX INCX SY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSWAP)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF957 ':INT32) (INCX-REF959 ':INT32)
                              (INCY-REF961 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF957 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF959 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF961 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF958 SX)
                                            (SY-REF960 SY))
      (%%SSWAP N-REF957 SX-REF958 INCX-REF959 SY-REF960 INCY-REF961))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SROTM "srotm_")
  ((N :FOREIGN-ADDRESS) (SX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (SY :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS)
   (SPARAM :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SROTM (N SX INCX SY INCY SPARAM)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SROTM)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SPARAM))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF962 ':INT32) (INCX-REF964 ':INT32)
                              (INCY-REF966 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF962 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF964 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF966 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF963 SX)
                                            (SY-REF965 SY)
                                            (SPARAM-REF967 SPARAM))
      (%%SROTM N-REF962 SX-REF963 INCX-REF964 SY-REF965 INCY-REF966
       SPARAM-REF967))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ISAMAX "isamax_")
  ((N :FOREIGN-ADDRESS) (SX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING :INT :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ISAMAX (N SX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ISAMAX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF968 ':INT32) (INCX-REF970 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF968 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF970 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF969 SX))
      (%%ISAMAX N-REF968 SX-REF969 INCX-REF970))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZTBSV "ztbsv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (K :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZTBSV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTBSV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF974 ':INT32) (K-REF975 ':INT32)
                              (LDA-REF977 ':INT32)
                              (INCX-REF979 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF974 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF975 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF977 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF979 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF976 A) (X-REF978 X))
      (%%ZTBSV UPLO TRANS DIAG N-REF974 K-REF975 A-REF976 LDA-REF977
       X-REF978 INCX-REF979))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZROTG "zrotg_")
  ((CA :FOREIGN-ADDRESS) (CB :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (S :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZROTG (CA CB C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZROTG)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) CA)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) CB)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT C)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) S))
  (CFFI:WITH-FOREIGN-OBJECTS ((CA-REF980
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (CB-REF981
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (C-REF982 ':DOUBLE)
                              (S-REF983
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT))
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              CA-REF980
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART CA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART CA)))
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              CB-REF981
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART CB)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART CB)))
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF982 :DOUBLE) C)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              S-REF983
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART S)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART S)))
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%ZROTG CA-REF980 CB-REF981 C-REF982 S-REF983))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DTBSV "dtbsv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (K :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DTBSV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTBSV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF987 ':INT32) (K-REF988 ':INT32)
                              (LDA-REF990 ':INT32)
                              (INCX-REF992 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF987 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF988 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF990 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF992 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF989 A) (X-REF991 X))
      (%%DTBSV UPLO TRANS DIAG N-REF987 K-REF988 A-REF989 LDA-REF990
       X-REF991 INCX-REF992))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CTPSV "ctpsv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (AP :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CTPSV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTPSV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF996 ':INT32) (INCX-REF999 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF996 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF999 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF997 AP)
                                            (X-REF998 X))
      (%%CTPSV UPLO TRANS DIAG N-REF996 AP-REF997 X-REF998
       INCX-REF999))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CGBMV "cgbmv_")
  ((TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (KL :FOREIGN-ADDRESS)
   (KU :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (BETA :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CGBMV
    (TRANS M N KL KU ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGBMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KU)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF1001 ':INT32) (N-REF1002 ':INT32)
                              (KL-REF1003 ':INT32) (KU-REF1004 ':INT32)
                              (ALPHA-REF1005
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF1007 ':INT32)
                              (INCX-REF1009 ':INT32)
                              (BETA-REF1010
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCY-REF1012 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF1001 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1002 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KL-REF1003 :INT32) KL)
    (COMMON-LISP:SETF (CFFI:MEM-REF KU-REF1004 :INT32) KU)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF1005
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF1007 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1009 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF1010
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF1012 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF1006 A)
                                            (X-REF1008 X)
                                            (Y-REF1011 Y))
      (%%CGBMV TRANS M-REF1001 N-REF1002 KL-REF1003 KU-REF1004
       ALPHA-REF1005 A-REF1006 LDA-REF1007 X-REF1008 INCX-REF1009
       BETA-REF1010 Y-REF1011 INCY-REF1012))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%STBMV "stbmv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (K :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %STBMV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STBMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1016 ':INT32) (K-REF1017 ':INT32)
                              (LDA-REF1019 ':INT32)
                              (INCX-REF1021 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1016 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF1017 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF1019 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1021 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF1018 A)
                                            (X-REF1020 X))
      (%%STBMV UPLO TRANS DIAG N-REF1016 K-REF1017 A-REF1018
       LDA-REF1019 X-REF1020 INCX-REF1021))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DSBMV "dsbmv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (K :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (BETA :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSBMV (UPLO N K ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSBMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1023 ':INT32) (K-REF1024 ':INT32)
                              (ALPHA-REF1025 ':DOUBLE)
                              (LDA-REF1027 ':INT32)
                              (INCX-REF1029 ':INT32)
                              (BETA-REF1030 ':DOUBLE)
                              (INCY-REF1032 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1023 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF1024 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF1025 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF1027 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1029 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF1030 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF1032 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF1026 A)
                                            (X-REF1028 X)
                                            (Y-REF1031 Y))
      (%%DSBMV UPLO N-REF1023 K-REF1024 ALPHA-REF1025 A-REF1026
       LDA-REF1027 X-REF1028 INCX-REF1029 BETA-REF1030 Y-REF1031
       INCY-REF1032))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CTBSV "ctbsv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (K :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CTBSV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTBSV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1036 ':INT32) (K-REF1037 ':INT32)
                              (LDA-REF1039 ':INT32)
                              (INCX-REF1041 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1036 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF1037 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF1039 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1041 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF1038 A)
                                            (X-REF1040 X))
      (%%CTBSV UPLO TRANS DIAG N-REF1036 K-REF1037 A-REF1038
       LDA-REF1039 X-REF1040 INCX-REF1041))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SGEMM "sgemm_")
  ((TRANSA (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANSB (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SGEMM
    (TRANSA TRANSB M N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SGEMM)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSB)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF1044 ':INT32) (N-REF1045 ':INT32)
                              (K-REF1046 ':INT32)
                              (ALPHA-REF1047 ':FLOAT)
                              (LDA-REF1049 ':INT32)
                              (LDB-REF1051 ':INT32)
                              (BETA-REF1052 ':FLOAT)
                              (LDC-REF1054 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF1044 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1045 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF1046 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF1047 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF1049 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF1051 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF1052 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF1054 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF1048 A)
                                            (B-REF1050 B)
                                            (C-REF1053 C))
      (%%SGEMM TRANSA TRANSB M-REF1044 N-REF1045 K-REF1046
       ALPHA-REF1047 A-REF1048 LDA-REF1049 B-REF1050 LDB-REF1051
       BETA-REF1052 C-REF1053 LDC-REF1054))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DTPMV "dtpmv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (AP :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DTPMV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTPMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1058 ':INT32)
                              (INCX-REF1061 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1058 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1061 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF1059 AP)
                                            (X-REF1060 X))
      (%%DTPMV UPLO TRANS DIAG N-REF1058 AP-REF1059 X-REF1060
       INCX-REF1061))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZSWAP "zswap_")
  ((N :FOREIGN-ADDRESS) (ZX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (ZY :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZSWAP (N ZX INCX ZY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZSWAP)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    ZX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    ZY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1062 ':INT32)
                              (INCX-REF1064 ':INT32)
                              (INCY-REF1066 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1062 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1064 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF1066 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((ZX-REF1063 ZX)
                                            (ZY-REF1065 ZY))
      (%%ZSWAP N-REF1062 ZX-REF1063 INCX-REF1064 ZY-REF1065
       INCY-REF1066))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CTRSV "ctrsv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CTRSV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTRSV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1070 ':INT32) (LDA-REF1072 ':INT32)
                              (INCX-REF1074 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1070 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF1072 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1074 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF1071 A)
                                            (X-REF1073 X))
      (%%CTRSV UPLO TRANS DIAG N-REF1070 A-REF1071 LDA-REF1072
       X-REF1073 INCX-REF1074))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZGERU "zgeru_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZGERU (M N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGERU)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF1075 ':INT32) (N-REF1076 ':INT32)
                              (ALPHA-REF1077
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCX-REF1079 ':INT32)
                              (INCY-REF1081 ':INT32)
                              (LDA-REF1083 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF1075 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1076 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF1077
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1079 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF1081 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF1083 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF1078 X)
                                            (Y-REF1080 Y)
                                            (A-REF1082 A))
      (%%ZGERU M-REF1075 N-REF1076 ALPHA-REF1077 X-REF1078 INCX-REF1079
       Y-REF1080 INCY-REF1081 A-REF1082 LDA-REF1083))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DGBMV "dgbmv_")
  ((TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (KL :FOREIGN-ADDRESS)
   (KU :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (BETA :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DGBMV
    (TRANS M N KL KU ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGBMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KU)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF1085 ':INT32) (N-REF1086 ':INT32)
                              (KL-REF1087 ':INT32) (KU-REF1088 ':INT32)
                              (ALPHA-REF1089 ':DOUBLE)
                              (LDA-REF1091 ':INT32)
                              (INCX-REF1093 ':INT32)
                              (BETA-REF1094 ':DOUBLE)
                              (INCY-REF1096 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF1085 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1086 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KL-REF1087 :INT32) KL)
    (COMMON-LISP:SETF (CFFI:MEM-REF KU-REF1088 :INT32) KU)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF1089 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF1091 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1093 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF1094 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF1096 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF1090 A)
                                            (X-REF1092 X)
                                            (Y-REF1095 Y))
      (%%DGBMV TRANS M-REF1085 N-REF1086 KL-REF1087 KU-REF1088
       ALPHA-REF1089 A-REF1090 LDA-REF1091 X-REF1092 INCX-REF1093
       BETA-REF1094 Y-REF1095 INCY-REF1096))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DCABS1 "dcabs1_")
  ((Z :FOREIGN-ADDRESS)) :RETURNING (:DOUBLE COMMON-LISP:DOUBLE-FLOAT)
  :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DCABS1 (Z)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DCABS1)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) Z))
  (CFFI:WITH-FOREIGN-OBJECTS ((Z-REF1097
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT))
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              Z-REF1097
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART Z)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART Z)))
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%DCABS1 Z-REF1097))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CHER2 "cher2_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CHER2 (UPLO N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHER2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1099 ':INT32)
                              (ALPHA-REF1100
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCX-REF1102 ':INT32)
                              (INCY-REF1104 ':INT32)
                              (LDA-REF1106 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1099 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF1100
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1102 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF1104 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF1106 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF1101 X)
                                            (Y-REF1103 Y)
                                            (A-REF1105 A))
      (%%CHER2 UPLO N-REF1099 ALPHA-REF1100 X-REF1101 INCX-REF1102
       Y-REF1103 INCY-REF1104 A-REF1105 LDA-REF1106))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CTPMV "ctpmv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (AP :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CTPMV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTPMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1110 ':INT32)
                              (INCX-REF1113 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1110 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1113 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF1111 AP)
                                            (X-REF1112 X))
      (%%CTPMV UPLO TRANS DIAG N-REF1110 AP-REF1111 X-REF1112
       INCX-REF1113))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CSYRK "csyrk_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CSYRK (UPLO TRANS N K ALPHA A LDA BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSYRK)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1116 ':INT32) (K-REF1117 ':INT32)
                              (ALPHA-REF1118
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF1120 ':INT32)
                              (BETA-REF1121
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDC-REF1123 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1116 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF1117 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF1118
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF1120 :INT32) LDA)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF1121
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF1123 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF1119 A)
                                            (C-REF1122 C))
      (%%CSYRK UPLO TRANS N-REF1116 K-REF1117 ALPHA-REF1118 A-REF1119
       LDA-REF1120 BETA-REF1121 C-REF1122 LDC-REF1123))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DTRMV "dtrmv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DTRMV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTRMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1127 ':INT32) (LDA-REF1129 ':INT32)
                              (INCX-REF1131 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1127 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF1129 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1131 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF1128 A)
                                            (X-REF1130 X))
      (%%DTRMV UPLO TRANS DIAG N-REF1127 A-REF1128 LDA-REF1129
       X-REF1130 INCX-REF1131))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CSCAL "cscal_")
  ((N :FOREIGN-ADDRESS) (CA :FOREIGN-ADDRESS) (CX :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CSCAL (N CA CX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSCAL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) CA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    CX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1132 ':INT32)
                              (CA-REF1133
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCX-REF1135 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1132 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              CA-REF1133
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART CA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART CA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1135 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF1134 CX))
      (%%CSCAL N-REF1132 CA-REF1133 CX-REF1134 INCX-REF1135))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CSWAP "cswap_")
  ((N :FOREIGN-ADDRESS) (CX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (CY :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CSWAP (N CX INCX CY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSWAP)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    CX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    CY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1136 ':INT32)
                              (INCX-REF1138 ':INT32)
                              (INCY-REF1140 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1136 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1138 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF1140 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF1137 CX)
                                            (CY-REF1139 CY))
      (%%CSWAP N-REF1136 CX-REF1137 INCX-REF1138 CY-REF1139
       INCY-REF1140))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DSPR2 "dspr2_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS)
   (AP :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DSPR2 (UPLO N ALPHA X INCX Y INCY AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSPR2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1142 ':INT32)
                              (ALPHA-REF1143 ':DOUBLE)
                              (INCX-REF1145 ':INT32)
                              (INCY-REF1147 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1142 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF1143 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1145 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF1147 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF1144 X)
                                            (Y-REF1146 Y)
                                            (AP-REF1148 AP))
      (%%DSPR2 UPLO N-REF1142 ALPHA-REF1143 X-REF1144 INCX-REF1145
       Y-REF1146 INCY-REF1147 AP-REF1148))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHEMV "zhemv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS)
   (Y :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHEMV (UPLO N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHEMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1150 ':INT32)
                              (ALPHA-REF1151
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF1153 ':INT32)
                              (INCX-REF1155 ':INT32)
                              (BETA-REF1156
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCY-REF1158 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1150 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF1151
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF1153 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1155 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF1156
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF1158 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF1152 A)
                                            (X-REF1154 X)
                                            (Y-REF1157 Y))
      (%%ZHEMV UPLO N-REF1150 ALPHA-REF1151 A-REF1152 LDA-REF1153
       X-REF1154 INCX-REF1155 BETA-REF1156 Y-REF1157 INCY-REF1158))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHER "zher_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHER (UPLO N ALPHA X INCX A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHER)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1160 ':INT32)
                              (ALPHA-REF1161 ':DOUBLE)
                              (INCX-REF1163 ':INT32)
                              (LDA-REF1165 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1160 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF1161 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1163 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF1165 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF1162 X)
                                            (A-REF1164 A))
      (%%ZHER UPLO N-REF1160 ALPHA-REF1161 X-REF1162 INCX-REF1163
       A-REF1164 LDA-REF1165))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CDOTC "cdotc_")
  ((N :FOREIGN-ADDRESS) (CX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (CY :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS))
  :RETURNING
  (:FOREIGN-ADDRESS (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
  :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CDOTC (N CX INCX CY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CDOTC)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    CX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    CY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1166 ':INT32)
                              (INCX-REF1168 ':INT32)
                              (INCY-REF1170 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1166 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1168 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF1170 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF1167 CX)
                                            (CY-REF1169 CY))
      (%%CDOTC N-REF1166 CX-REF1167 INCX-REF1168 CY-REF1169
       INCY-REF1170))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%XERBLA "xerbla_")
  ((SRNAME (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %XERBLA (SRNAME INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%XERBLA)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SRNAME)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((INFO-REF1172 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF1172 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%XERBLA SRNAME INFO-REF1172))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SASUM "sasum_")
  ((N :FOREIGN-ADDRESS) (SX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING (:FLOAT COMMON-LISP:SINGLE-FLOAT) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SASUM (N SX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SASUM)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1173 ':INT32)
                              (INCX-REF1175 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1173 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1175 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF1174 SX))
      (%%SASUM N-REF1173 SX-REF1174 INCX-REF1175))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SSPMV "sspmv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (AP :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SSPMV (UPLO N ALPHA AP X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSPMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1177 ':INT32)
                              (ALPHA-REF1178 ':FLOAT)
                              (INCX-REF1181 ':INT32)
                              (BETA-REF1182 ':FLOAT)
                              (INCY-REF1184 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1177 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF1178 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1181 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF1182 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF1184 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF1179 AP)
                                            (X-REF1180 X)
                                            (Y-REF1183 Y))
      (%%SSPMV UPLO N-REF1177 ALPHA-REF1178 AP-REF1179 X-REF1180
       INCX-REF1181 BETA-REF1182 Y-REF1183 INCY-REF1184))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DZASUM "dzasum_")
  ((N :FOREIGN-ADDRESS) (ZX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING (:DOUBLE COMMON-LISP:DOUBLE-FLOAT) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DZASUM (N ZX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DZASUM)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    ZX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1185 ':INT32)
                              (INCX-REF1187 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1185 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1187 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((ZX-REF1186 ZX))
      (%%DZASUM N-REF1185 ZX-REF1186 INCX-REF1187))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CTRMM "ctrmm_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANSA (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CTRMM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTRMM)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF1192 ':INT32) (N-REF1193 ':INT32)
                              (ALPHA-REF1194
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF1196 ':INT32)
                              (LDB-REF1198 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF1192 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1193 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF1194
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF1196 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF1198 :INT32) LDB)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF1195 A)
                                            (B-REF1197 B))
      (%%CTRMM SIDE UPLO TRANSA DIAG M-REF1192 N-REF1193 ALPHA-REF1194
       A-REF1195 LDA-REF1196 B-REF1197 LDB-REF1198))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZHPR2 "zhpr2_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS)
   (AP :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZHPR2 (UPLO N ALPHA X INCX Y INCY AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHPR2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1200 ':INT32)
                              (ALPHA-REF1201
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCX-REF1203 ':INT32)
                              (INCY-REF1205 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1200 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF1201
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1203 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF1205 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF1202 X)
                                            (Y-REF1204 Y)
                                            (AP-REF1206 AP))
      (%%ZHPR2 UPLO N-REF1200 ALPHA-REF1201 X-REF1202 INCX-REF1203
       Y-REF1204 INCY-REF1205 AP-REF1206))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CHERK "cherk_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (N :FOREIGN-ADDRESS) (K :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (BETA :FOREIGN-ADDRESS)
   (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CHERK (UPLO TRANS N K ALPHA A LDA BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHERK)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1209 ':INT32) (K-REF1210 ':INT32)
                              (ALPHA-REF1211 ':FLOAT)
                              (LDA-REF1213 ':INT32)
                              (BETA-REF1214 ':FLOAT)
                              (LDC-REF1216 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1209 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF1210 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF1211 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF1213 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF1214 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF1216 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF1212 A)
                                            (C-REF1215 C))
      (%%CHERK UPLO TRANS N-REF1209 K-REF1210 ALPHA-REF1211 A-REF1212
       LDA-REF1213 BETA-REF1214 C-REF1215 LDC-REF1216))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%DTPSV "dtpsv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (AP :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %DTPSV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTPSV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1220 ':INT32)
                              (INCX-REF1223 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1220 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1223 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF1221 AP)
                                            (X-REF1222 X))
      (%%DTPSV UPLO TRANS DIAG N-REF1220 AP-REF1221 X-REF1222
       INCX-REF1223))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%LSAME "lsame_")
  ((CA (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (CB (COMMON-LISP:* :CHAR) COMMON-LISP:STRING))
  :RETURNING (:INT (COMMON-LISP:SIGNED-BYTE 32)) :RELEASE-HEAP :NEVER
  :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %LSAME (CA CB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%LSAME)
   (COMMON-LISP:TYPE COMMON-LISP:STRING CA)
   (COMMON-LISP:TYPE COMMON-LISP:STRING CB))
  (CFFI:WITH-FOREIGN-OBJECTS COMMON-LISP:NIL
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%LSAME CA CB))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%STPSV "stpsv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (AP :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %STPSV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STPSV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) AP)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1229 ':INT32)
                              (INCX-REF1232 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1229 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1232 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF1230 AP)
                                            (X-REF1231 X))
      (%%STPSV UPLO TRANS DIAG N-REF1229 AP-REF1230 X-REF1231
       INCX-REF1232))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%STRMV "strmv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %STRMV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STRMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1236 ':INT32) (LDA-REF1238 ':INT32)
                              (INCX-REF1240 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1236 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF1238 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1240 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF1237 A)
                                            (X-REF1239 X))
      (%%STRMV UPLO TRANS DIAG N-REF1236 A-REF1237 LDA-REF1238
       X-REF1239 INCX-REF1240))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZGBMV "zgbmv_")
  ((TRANS (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (KL :FOREIGN-ADDRESS)
   (KU :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (BETA :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZGBMV
    (TRANS M N KL KU ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGBMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KL)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KU)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF1242 ':INT32) (N-REF1243 ':INT32)
                              (KL-REF1244 ':INT32) (KU-REF1245 ':INT32)
                              (ALPHA-REF1246
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF1248 ':INT32)
                              (INCX-REF1250 ':INT32)
                              (BETA-REF1251
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCY-REF1253 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF1242 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1243 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KL-REF1244 :INT32) KL)
    (COMMON-LISP:SETF (CFFI:MEM-REF KU-REF1245 :INT32) KU)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF1246
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF1248 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1250 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF1251
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF1253 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF1247 A)
                                            (X-REF1249 X)
                                            (Y-REF1252 Y))
      (%%ZGBMV TRANS M-REF1242 N-REF1243 KL-REF1244 KU-REF1245
       ALPHA-REF1246 A-REF1247 LDA-REF1248 X-REF1249 INCX-REF1250
       BETA-REF1251 Y-REF1252 INCY-REF1253))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SGER "sger_")
  ((M :FOREIGN-ADDRESS) (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS)
   (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SGER (M N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SGER)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF1254 ':INT32) (N-REF1255 ':INT32)
                              (ALPHA-REF1256 ':FLOAT)
                              (INCX-REF1258 ':INT32)
                              (INCY-REF1260 ':INT32)
                              (LDA-REF1262 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF1254 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1255 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF1256 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1258 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF1260 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF1262 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF1257 X)
                                            (Y-REF1259 Y)
                                            (A-REF1261 A))
      (%%SGER M-REF1254 N-REF1255 ALPHA-REF1256 X-REF1257 INCX-REF1258
       Y-REF1259 INCY-REF1260 A-REF1261 LDA-REF1262))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CSROT "csrot_")
  ((N :FOREIGN-ADDRESS) (CX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (CY :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (S :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CSROT (N CX INCX CY INCY C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSROT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    CX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    CY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT C)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT S))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1263 ':INT32)
                              (INCX-REF1265 ':INT32)
                              (INCY-REF1267 ':INT32)
                              (C-REF1268 ':FLOAT) (S-REF1269 ':FLOAT))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1263 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1265 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF1267 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF1268 :FLOAT) C)
    (COMMON-LISP:SETF (CFFI:MEM-REF S-REF1269 :FLOAT) S)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF1264 CX)
                                            (CY-REF1266 CY))
      (%%CSROT N-REF1263 CX-REF1264 INCX-REF1265 CY-REF1266
       INCY-REF1267 C-REF1268 S-REF1269))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CTRSM "ctrsm_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (TRANSA (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (DIAG (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CTRSM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTRSM)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
   (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF1274 ':INT32) (N-REF1275 ':INT32)
                              (ALPHA-REF1276
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF1278 ':INT32)
                              (LDB-REF1280 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF1274 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1275 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF1276
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF1278 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF1280 :INT32) LDB)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF1277 A)
                                            (B-REF1279 B))
      (%%CTRSM SIDE UPLO TRANSA DIAG M-REF1274 N-REF1275 ALPHA-REF1276
       A-REF1277 LDA-REF1278 B-REF1279 LDB-REF1280))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%SSYR2 "ssyr2_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (ALPHA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS)
   (INCX :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS)
   (A :FOREIGN-ADDRESS) (LDA :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %SSYR2 (UPLO N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYR2)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1282 ':INT32)
                              (ALPHA-REF1283 ':FLOAT)
                              (INCX-REF1285 ':INT32)
                              (INCY-REF1287 ':INT32)
                              (LDA-REF1289 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1282 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF1283 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1285 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF1287 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF1289 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF1284 X)
                                            (Y-REF1286 Y)
                                            (A-REF1288 A))
      (%%SSYR2 UPLO N-REF1282 ALPHA-REF1283 X-REF1284 INCX-REF1285
       Y-REF1286 INCY-REF1287 A-REF1288 LDA-REF1289))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZSYMM "zsymm_")
  ((SIDE (COMMON-LISP:* :CHAR) COMMON-LISP:STRING)
   (UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (M :FOREIGN-ADDRESS)
   (N :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (B :FOREIGN-ADDRESS) (LDB :FOREIGN-ADDRESS)
   (BETA :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS) (LDC :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZSYMM (SIDE UPLO M N ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZSYMM)
   (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    B)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT)
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    C)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF1292 ':INT32) (N-REF1293 ':INT32)
                              (ALPHA-REF1294
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF1296 ':INT32)
                              (LDB-REF1298 ':INT32)
                              (BETA-REF1299
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDC-REF1301 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF1292 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1293 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF1294
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF1296 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF1298 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF1299
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF1301 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF1295 A)
                                            (B-REF1297 B)
                                            (C-REF1300 C))
      (%%ZSYMM SIDE UPLO M-REF1292 N-REF1293 ALPHA-REF1294 A-REF1295
       LDA-REF1296 B-REF1297 LDB-REF1298 BETA-REF1299 C-REF1300
       LDC-REF1301))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%CHBMV "chbmv_")
  ((UPLO (COMMON-LISP:* :CHAR) COMMON-LISP:STRING) (N :FOREIGN-ADDRESS)
   (K :FOREIGN-ADDRESS) (ALPHA :FOREIGN-ADDRESS) (A :FOREIGN-ADDRESS)
   (LDA :FOREIGN-ADDRESS) (X :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (BETA :FOREIGN-ADDRESS) (Y :FOREIGN-ADDRESS)
   (INCY :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %CHBMV (UPLO N K ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHBMV)
   (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    ALPHA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    A)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    X)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT)
    BETA)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    Y)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1303 ':INT32) (K-REF1304 ':INT32)
                              (ALPHA-REF1305
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF1307 ':INT32)
                              (INCX-REF1309 ':INT32)
                              (BETA-REF1310
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCY-REF1312 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1303 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF1304 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF1305
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF1307 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1309 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL
                               MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF1310
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG
                        (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF1312 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF1306 A)
                                            (X-REF1308 X)
                                            (Y-REF1311 Y))
      (%%CHBMV UPLO N-REF1303 K-REF1304 ALPHA-REF1305 A-REF1306
       LDA-REF1307 X-REF1308 INCX-REF1309 BETA-REF1310 Y-REF1311
       INCY-REF1312))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ICAMAX "icamax_")
  ((N :FOREIGN-ADDRESS) (CX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS))
  :RETURNING :INT :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ICAMAX (N CX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ICAMAX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) (COMMON-LISP:*))
    CX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1313 ':INT32)
                              (INCX-REF1315 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1313 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1315 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF1314 CX))
      (%%ICAMAX N-REF1313 CX-REF1314 INCX-REF1315))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%ZDROT "zdrot_")
  ((N :FOREIGN-ADDRESS) (CX :FOREIGN-ADDRESS) (INCX :FOREIGN-ADDRESS)
   (CY :FOREIGN-ADDRESS) (INCY :FOREIGN-ADDRESS) (C :FOREIGN-ADDRESS)
   (S :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %ZDROT (N CX INCX CY INCY C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZDROT)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    CX)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
   (COMMON-LISP:TYPE
    (COMMON-LISP:SIMPLE-ARRAY
     (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) (COMMON-LISP:*))
    CY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT C)
   (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT S))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF1316 ':INT32)
                              (INCX-REF1318 ':INT32)
                              (INCY-REF1320 ':INT32)
                              (C-REF1321 ':DOUBLE)
                              (S-REF1322 ':DOUBLE))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF1316 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF1318 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF1320 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF1321 :DOUBLE) C)
    (COMMON-LISP:SETF (CFFI:MEM-REF S-REF1322 :DOUBLE) S)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF1317 CX)
                                            (CY-REF1319 CY))
      (%%ZDROT N-REF1316 CX-REF1317 INCX-REF1318 CY-REF1319
       INCY-REF1320 C-REF1321 S-REF1322))))

(FOREIGN-FUNCTIONS:DEF-FOREIGN-CALL (%%XERBLA_ARRAY "xerbla_array_")
  ((SRNAME_ARRAY :FOREIGN-ADDRESS) (SRNAME_LEN :FOREIGN-ADDRESS)
   (INFO :FOREIGN-ADDRESS))
  :RETURNING :VOID :RELEASE-HEAP :NEVER :ALLOW-GC :NEVER)

(COMMON-LISP:DEFUN %XERBLA_ARRAY (SRNAME_ARRAY SRNAME_LEN INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%XERBLA_ARRAY)
   (COMMON-LISP:TYPE COMMON-LISP:ARRAY SRNAME_ARRAY)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) SRNAME_LEN)
   (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((SRNAME_LEN-REF1324 ':INT32)
                              (INFO-REF1325 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF SRNAME_LEN-REF1324 :INT32)
                      SRNAME_LEN)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF1325 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SRNAME_ARRAY-REF1323
                                             SRNAME_ARRAY))
      (%%XERBLA_ARRAY SRNAME_ARRAY-REF1323 SRNAME_LEN-REF1324
       INFO-REF1325))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DROT %DROT %%SCABS1
                      %SCABS1 %%ZGEMV %ZGEMV %%ZDOTC %ZDOTC %%CHER2K
                      %CHER2K %%ZTBMV %ZTBMV %%ZHER2 %ZHER2 %%DASUM
                      %DASUM %%DGEMV %DGEMV %%DTRSV %DTRSV %%SSPR %SSPR
                      %%DTBMV %DTBMV %%SCASUM %SCASUM %%DNRM2 %DNRM2
                      %%STRSM %STRSM %%CHEMM %CHEMM %%CHER %CHER %%SDOT
                      %SDOT %%DZNRM2 %DZNRM2 %%DGER %DGER %%CROTG
                      %CROTG %%ZSYRK %ZSYRK %%STRMM %STRMM %%CGERU
                      %CGERU %%ZHER2K %ZHER2K %%IZAMAX %IZAMAX %%SSYR2K
                      %SSYR2K %%DDOT %DDOT %%SCOPY %SCOPY %%STRSV
                      %STRSV %%SROTMG %SROTMG %%CHPR2 %CHPR2 %%SROT
                      %SROT %%DROTG %DROTG %%SSYMM %SSYMM %%DTRMM
                      %DTRMM %%ZTRSM %ZTRSM %%ZHPMV %ZHPMV %%SROTG
                      %SROTG %%DSDOT %DSDOT %%SSCAL %SSCAL %%ZHBMV
                      %ZHBMV %%DSCAL %DSCAL %%SGEMV %SGEMV %%ZDOTU
                      %ZDOTU %%CHPR %CHPR %%CDOTU %CDOTU %%DAXPY %DAXPY
                      %%SSYR %SSYR %%DSYMM %DSYMM %%DSPMV %DSPMV
                      %%CHEMV %CHEMV %%DSPR %DSPR %%DSYRK %DSYRK
                      %%ZCOPY %ZCOPY %%DCOPY %DCOPY %%ZHEMM %ZHEMM
                      %%SSYRK %SSYRK %%CAXPY %CAXPY %%STPMV %STPMV
                      %%SCNRM2 %SCNRM2 %%SAXPY %SAXPY %%DSYR %DSYR
                      %%CTRMV %CTRMV %%STBSV %STBSV %%CSSCAL %CSSCAL
                      %%ZSCAL %ZSCAL %%DSYR2K %DSYR2K %%CSYR2K %CSYR2K
                      %%ZDSCAL %ZDSCAL %%ZSYR2K %ZSYR2K %%ZTRSV %ZTRSV
                      %%DSYR2 %DSYR2 %%DSYMV %DSYMV %%DSWAP %DSWAP
                      %%SSPR2 %SSPR2 %%ZHPR %ZHPR %%DROTM %DROTM
                      %%SGBMV %SGBMV %%CGERC %CGERC %%DTRSM %DTRSM
                      %%ZTPMV %ZTPMV %%CTBMV %CTBMV %%ZGEMM %ZGEMM
                      %%SNRM2 %SNRM2 %%ZGERC %ZGERC %%CGEMM %CGEMM
                      %%ZTPSV %ZTPSV %%ZTRMM %ZTRMM %%IDAMAX %IDAMAX
                      %%CSYMM %CSYMM %%DROTMG %DROTMG %%SSYMV %SSYMV
                      %%CHPMV %CHPMV %%CCOPY %CCOPY %%ZTRMV %ZTRMV
                      %%SSBMV %SSBMV %%CGEMV %CGEMV %%ZHERK %ZHERK
                      %%DGEMM %DGEMM %%SDSDOT %SDSDOT %%ZAXPY %ZAXPY
                      %%SSWAP %SSWAP %%SROTM %SROTM %%ISAMAX %ISAMAX
                      %%ZTBSV %ZTBSV %%ZROTG %ZROTG %%DTBSV %DTBSV
                      %%CTPSV %CTPSV %%CGBMV %CGBMV %%STBMV %STBMV
                      %%DSBMV %DSBMV %%CTBSV %CTBSV %%SGEMM %SGEMM
                      %%DTPMV %DTPMV %%ZSWAP %ZSWAP %%CTRSV %CTRSV
                      %%ZGERU %ZGERU %%DGBMV %DGBMV %%DCABS1 %DCABS1
                      %%CHER2 %CHER2 %%CTPMV %CTPMV %%CSYRK %CSYRK
                      %%DTRMV %DTRMV %%CSCAL %CSCAL %%CSWAP %CSWAP
                      %%DSPR2 %DSPR2 %%ZHEMV %ZHEMV %%ZHER %ZHER
                      %%CDOTC %CDOTC %%XERBLA %XERBLA %%SASUM %SASUM
                      %%SSPMV %SSPMV %%DZASUM %DZASUM %%CTRMM %CTRMM
                      %%ZHPR2 %ZHPR2 %%CHERK %CHERK %%DTPSV %DTPSV
                      %%LSAME %LSAME %%STPSV %STPSV %%STRMV %STRMV
                      %%ZGBMV %ZGBMV %%SGER %SGER %%CSROT %CSROT
                      %%CTRSM %CTRSM %%SSYR2 %SSYR2 %%ZSYMM %ZSYMM
                      %%CHBMV %CHBMV %%ICAMAX %ICAMAX %%ZDROT %ZDROT
                      %%XERBLA_ARRAY %XERBLA_ARRAY))

(MAGICL.FOREIGN-LIBRARIES:TRACK-SYMBOLS
  'MAGICL.FOREIGN-LIBRARIES::LIBBLAS
  '(("DROT" "drot_" %%DROT %DROT) ("SCABS1" "scabs1_" %%SCABS1 %SCABS1)
    ("ZGEMV" "zgemv_" %%ZGEMV %ZGEMV) ("ZDOTC" "zdotc_" %%ZDOTC %ZDOTC)
    ("CHER2K" "cher2k_" %%CHER2K %CHER2K)
    ("ZTBMV" "ztbmv_" %%ZTBMV %ZTBMV) ("ZHER2" "zher2_" %%ZHER2 %ZHER2)
    ("DASUM" "dasum_" %%DASUM %DASUM) ("DGEMV" "dgemv_" %%DGEMV %DGEMV)
    ("DTRSV" "dtrsv_" %%DTRSV %DTRSV) ("SSPR" "sspr_" %%SSPR %SSPR)
    ("DTBMV" "dtbmv_" %%DTBMV %DTBMV)
    ("SCASUM" "scasum_" %%SCASUM %SCASUM)
    ("DNRM2" "dnrm2_" %%DNRM2 %DNRM2) ("STRSM" "strsm_" %%STRSM %STRSM)
    ("CHEMM" "chemm_" %%CHEMM %CHEMM) ("CHER" "cher_" %%CHER %CHER)
    ("SDOT" "sdot_" %%SDOT %SDOT) ("DZNRM2" "dznrm2_" %%DZNRM2 %DZNRM2)
    ("DGER" "dger_" %%DGER %DGER) ("CROTG" "crotg_" %%CROTG %CROTG)
    ("ZSYRK" "zsyrk_" %%ZSYRK %ZSYRK) ("STRMM" "strmm_" %%STRMM %STRMM)
    ("CGERU" "cgeru_" %%CGERU %CGERU)
    ("ZHER2K" "zher2k_" %%ZHER2K %ZHER2K)
    ("IZAMAX" "izamax_" %%IZAMAX %IZAMAX)
    ("SSYR2K" "ssyr2k_" %%SSYR2K %SSYR2K) ("DDOT" "ddot_" %%DDOT %DDOT)
    ("SCOPY" "scopy_" %%SCOPY %SCOPY) ("STRSV" "strsv_" %%STRSV %STRSV)
    ("SROTMG" "srotmg_" %%SROTMG %SROTMG)
    ("CHPR2" "chpr2_" %%CHPR2 %CHPR2) ("SROT" "srot_" %%SROT %SROT)
    ("DROTG" "drotg_" %%DROTG %DROTG) ("SSYMM" "ssymm_" %%SSYMM %SSYMM)
    ("DTRMM" "dtrmm_" %%DTRMM %DTRMM) ("ZTRSM" "ztrsm_" %%ZTRSM %ZTRSM)
    ("ZHPMV" "zhpmv_" %%ZHPMV %ZHPMV) ("SROTG" "srotg_" %%SROTG %SROTG)
    ("DSDOT" "dsdot_" %%DSDOT %DSDOT) ("SSCAL" "sscal_" %%SSCAL %SSCAL)
    ("ZHBMV" "zhbmv_" %%ZHBMV %ZHBMV) ("DSCAL" "dscal_" %%DSCAL %DSCAL)
    ("SGEMV" "sgemv_" %%SGEMV %SGEMV) ("ZDOTU" "zdotu_" %%ZDOTU %ZDOTU)
    ("CHPR" "chpr_" %%CHPR %CHPR) ("CDOTU" "cdotu_" %%CDOTU %CDOTU)
    ("DAXPY" "daxpy_" %%DAXPY %DAXPY) ("SSYR" "ssyr_" %%SSYR %SSYR)
    ("DSYMM" "dsymm_" %%DSYMM %DSYMM) ("DSPMV" "dspmv_" %%DSPMV %DSPMV)
    ("CHEMV" "chemv_" %%CHEMV %CHEMV) ("DSPR" "dspr_" %%DSPR %DSPR)
    ("DSYRK" "dsyrk_" %%DSYRK %DSYRK) ("ZCOPY" "zcopy_" %%ZCOPY %ZCOPY)
    ("DCOPY" "dcopy_" %%DCOPY %DCOPY) ("ZHEMM" "zhemm_" %%ZHEMM %ZHEMM)
    ("SSYRK" "ssyrk_" %%SSYRK %SSYRK) ("CAXPY" "caxpy_" %%CAXPY %CAXPY)
    ("STPMV" "stpmv_" %%STPMV %STPMV)
    ("SCNRM2" "scnrm2_" %%SCNRM2 %SCNRM2)
    ("SAXPY" "saxpy_" %%SAXPY %SAXPY) ("DSYR" "dsyr_" %%DSYR %DSYR)
    ("CTRMV" "ctrmv_" %%CTRMV %CTRMV) ("STBSV" "stbsv_" %%STBSV %STBSV)
    ("CSSCAL" "csscal_" %%CSSCAL %CSSCAL)
    ("ZSCAL" "zscal_" %%ZSCAL %ZSCAL)
    ("DSYR2K" "dsyr2k_" %%DSYR2K %DSYR2K)
    ("CSYR2K" "csyr2k_" %%CSYR2K %CSYR2K)
    ("ZDSCAL" "zdscal_" %%ZDSCAL %ZDSCAL)
    ("ZSYR2K" "zsyr2k_" %%ZSYR2K %ZSYR2K)
    ("ZTRSV" "ztrsv_" %%ZTRSV %ZTRSV) ("DSYR2" "dsyr2_" %%DSYR2 %DSYR2)
    ("DSYMV" "dsymv_" %%DSYMV %DSYMV) ("DSWAP" "dswap_" %%DSWAP %DSWAP)
    ("SSPR2" "sspr2_" %%SSPR2 %SSPR2) ("ZHPR" "zhpr_" %%ZHPR %ZHPR)
    ("DROTM" "drotm_" %%DROTM %DROTM) ("SGBMV" "sgbmv_" %%SGBMV %SGBMV)
    ("CGERC" "cgerc_" %%CGERC %CGERC) ("DTRSM" "dtrsm_" %%DTRSM %DTRSM)
    ("ZTPMV" "ztpmv_" %%ZTPMV %ZTPMV) ("CTBMV" "ctbmv_" %%CTBMV %CTBMV)
    ("ZGEMM" "zgemm_" %%ZGEMM %ZGEMM) ("SNRM2" "snrm2_" %%SNRM2 %SNRM2)
    ("ZGERC" "zgerc_" %%ZGERC %ZGERC) ("CGEMM" "cgemm_" %%CGEMM %CGEMM)
    ("ZTPSV" "ztpsv_" %%ZTPSV %ZTPSV) ("ZTRMM" "ztrmm_" %%ZTRMM %ZTRMM)
    ("IDAMAX" "idamax_" %%IDAMAX %IDAMAX)
    ("CSYMM" "csymm_" %%CSYMM %CSYMM)
    ("DROTMG" "drotmg_" %%DROTMG %DROTMG)
    ("SSYMV" "ssymv_" %%SSYMV %SSYMV) ("CHPMV" "chpmv_" %%CHPMV %CHPMV)
    ("CCOPY" "ccopy_" %%CCOPY %CCOPY) ("ZTRMV" "ztrmv_" %%ZTRMV %ZTRMV)
    ("SSBMV" "ssbmv_" %%SSBMV %SSBMV) ("CGEMV" "cgemv_" %%CGEMV %CGEMV)
    ("ZHERK" "zherk_" %%ZHERK %ZHERK) ("DGEMM" "dgemm_" %%DGEMM %DGEMM)
    ("SDSDOT" "sdsdot_" %%SDSDOT %SDSDOT)
    ("ZAXPY" "zaxpy_" %%ZAXPY %ZAXPY) ("SSWAP" "sswap_" %%SSWAP %SSWAP)
    ("SROTM" "srotm_" %%SROTM %SROTM)
    ("ISAMAX" "isamax_" %%ISAMAX %ISAMAX)
    ("ZTBSV" "ztbsv_" %%ZTBSV %ZTBSV) ("ZROTG" "zrotg_" %%ZROTG %ZROTG)
    ("DTBSV" "dtbsv_" %%DTBSV %DTBSV) ("CTPSV" "ctpsv_" %%CTPSV %CTPSV)
    ("CGBMV" "cgbmv_" %%CGBMV %CGBMV) ("STBMV" "stbmv_" %%STBMV %STBMV)
    ("DSBMV" "dsbmv_" %%DSBMV %DSBMV) ("CTBSV" "ctbsv_" %%CTBSV %CTBSV)
    ("SGEMM" "sgemm_" %%SGEMM %SGEMM) ("DTPMV" "dtpmv_" %%DTPMV %DTPMV)
    ("ZSWAP" "zswap_" %%ZSWAP %ZSWAP) ("CTRSV" "ctrsv_" %%CTRSV %CTRSV)
    ("ZGERU" "zgeru_" %%ZGERU %ZGERU) ("DGBMV" "dgbmv_" %%DGBMV %DGBMV)
    ("DCABS1" "dcabs1_" %%DCABS1 %DCABS1)
    ("CHER2" "cher2_" %%CHER2 %CHER2) ("CTPMV" "ctpmv_" %%CTPMV %CTPMV)
    ("CSYRK" "csyrk_" %%CSYRK %CSYRK) ("DTRMV" "dtrmv_" %%DTRMV %DTRMV)
    ("CSCAL" "cscal_" %%CSCAL %CSCAL) ("CSWAP" "cswap_" %%CSWAP %CSWAP)
    ("DSPR2" "dspr2_" %%DSPR2 %DSPR2) ("ZHEMV" "zhemv_" %%ZHEMV %ZHEMV)
    ("ZHER" "zher_" %%ZHER %ZHER) ("CDOTC" "cdotc_" %%CDOTC %CDOTC)
    ("XERBLA" "xerbla_" %%XERBLA %XERBLA)
    ("SASUM" "sasum_" %%SASUM %SASUM) ("SSPMV" "sspmv_" %%SSPMV %SSPMV)
    ("DZASUM" "dzasum_" %%DZASUM %DZASUM)
    ("CTRMM" "ctrmm_" %%CTRMM %CTRMM) ("ZHPR2" "zhpr2_" %%ZHPR2 %ZHPR2)
    ("CHERK" "cherk_" %%CHERK %CHERK) ("DTPSV" "dtpsv_" %%DTPSV %DTPSV)
    ("LSAME" "lsame_" %%LSAME %LSAME) ("STPSV" "stpsv_" %%STPSV %STPSV)
    ("STRMV" "strmv_" %%STRMV %STRMV) ("ZGBMV" "zgbmv_" %%ZGBMV %ZGBMV)
    ("SGER" "sger_" %%SGER %SGER) ("CSROT" "csrot_" %%CSROT %CSROT)
    ("CTRSM" "ctrsm_" %%CTRSM %CTRSM) ("SSYR2" "ssyr2_" %%SSYR2 %SSYR2)
    ("ZSYMM" "zsymm_" %%ZSYMM %ZSYMM) ("CHBMV" "chbmv_" %%CHBMV %CHBMV)
    ("ICAMAX" "icamax_" %%ICAMAX %ICAMAX)
    ("ZDROT" "zdrot_" %%ZDROT %ZDROT)
    ("XERBLA_ARRAY" "xerbla_array_" %%XERBLA_ARRAY %XERBLA_ARRAY)))

(COMMON-LISP:EXPORT '(%DROT %SCABS1 %ZGEMV %ZDOTC %CHER2K %ZTBMV %ZHER2
                      %DASUM %DGEMV %DTRSV %SSPR %DTBMV %SCASUM %DNRM2
                      %STRSM %CHEMM %CHER %SDOT %DZNRM2 %DGER %CROTG
                      %ZSYRK %STRMM %CGERU %ZHER2K %IZAMAX %SSYR2K
                      %DDOT %SCOPY %STRSV %SROTMG %CHPR2 %SROT %DROTG
                      %SSYMM %DTRMM %ZTRSM %ZHPMV %SROTG %DSDOT %SSCAL
                      %ZHBMV %DSCAL %SGEMV %ZDOTU %CHPR %CDOTU %DAXPY
                      %SSYR %DSYMM %DSPMV %CHEMV %DSPR %DSYRK %ZCOPY
                      %DCOPY %ZHEMM %SSYRK %CAXPY %STPMV %SCNRM2 %SAXPY
                      %DSYR %CTRMV %STBSV %CSSCAL %ZSCAL %DSYR2K
                      %CSYR2K %ZDSCAL %ZSYR2K %ZTRSV %DSYR2 %DSYMV
                      %DSWAP %SSPR2 %ZHPR %DROTM %SGBMV %CGERC %DTRSM
                      %ZTPMV %CTBMV %ZGEMM %SNRM2 %ZGERC %CGEMM %ZTPSV
                      %ZTRMM %IDAMAX %CSYMM %DROTMG %SSYMV %CHPMV
                      %CCOPY %ZTRMV %SSBMV %CGEMV %ZHERK %DGEMM %SDSDOT
                      %ZAXPY %SSWAP %SROTM %ISAMAX %ZTBSV %ZROTG %DTBSV
                      %CTPSV %CGBMV %STBMV %DSBMV %CTBSV %SGEMM %DTPMV
                      %ZSWAP %CTRSV %ZGERU %DGBMV %DCABS1 %CHER2 %CTPMV
                      %CSYRK %DTRMV %CSCAL %CSWAP %DSPR2 %ZHEMV %ZHER
                      %CDOTC %XERBLA %SASUM %SSPMV %DZASUM %CTRMM
                      %ZHPR2 %CHERK %DTPSV %LSAME %STPSV %STRMV %ZGBMV
                      %SGER %CSROT %CTRSM %SSYR2 %ZSYMM %CHBMV %ICAMAX
                      %ZDROT %XERBLA_ARRAY)
                    '#:MAGICL.BLAS-CFFI)

;;; End of file.
